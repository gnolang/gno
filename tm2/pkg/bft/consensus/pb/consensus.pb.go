// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: consensus.proto

package pb

import (
	_ "github.com/gnolang/gno/tm2/pkg/bft/abci/types/pb"
	pb2 "github.com/gnolang/gno/tm2/pkg/bft/consensus/types/pb"
	pb "github.com/gnolang/gno/tm2/pkg/bft/types/pb"
	pb1 "github.com/gnolang/gno/tm2/pkg/bitarray/pb"
	_ "github.com/gnolang/gno/tm2/pkg/crypto/merkle/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// messages
type NewRoundStepMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height                int64  `protobuf:"zigzag64,1,opt,name=Height,proto3" json:"Height,omitempty"`
	Round                 int64  `protobuf:"zigzag64,2,opt,name=Round,proto3" json:"Round,omitempty"`
	Step                  uint32 `protobuf:"varint,3,opt,name=Step,proto3" json:"Step,omitempty"`
	SecondsSinceStartTime int64  `protobuf:"zigzag64,4,opt,name=SecondsSinceStartTime,proto3" json:"SecondsSinceStartTime,omitempty"`
	LastCommitRound       int64  `protobuf:"zigzag64,5,opt,name=LastCommitRound,proto3" json:"LastCommitRound,omitempty"`
}

func (x *NewRoundStepMessage) Reset() {
	*x = NewRoundStepMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewRoundStepMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRoundStepMessage) ProtoMessage() {}

func (x *NewRoundStepMessage) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRoundStepMessage.ProtoReflect.Descriptor instead.
func (*NewRoundStepMessage) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{0}
}

func (x *NewRoundStepMessage) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *NewRoundStepMessage) GetRound() int64 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *NewRoundStepMessage) GetStep() uint32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *NewRoundStepMessage) GetSecondsSinceStartTime() int64 {
	if x != nil {
		return x.SecondsSinceStartTime
	}
	return 0
}

func (x *NewRoundStepMessage) GetLastCommitRound() int64 {
	if x != nil {
		return x.LastCommitRound
	}
	return 0
}

type NewValidBlockMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height           int64             `protobuf:"zigzag64,1,opt,name=Height,proto3" json:"Height,omitempty"`
	Round            int64             `protobuf:"zigzag64,2,opt,name=Round,proto3" json:"Round,omitempty"`
	BlockPartsHeader *pb.PartSetHeader `protobuf:"bytes,3,opt,name=BlockPartsHeader,proto3" json:"BlockPartsHeader,omitempty"`
	BlockParts       *pb1.BitArray     `protobuf:"bytes,4,opt,name=BlockParts,proto3" json:"BlockParts,omitempty"`
	IsCommit         bool              `protobuf:"varint,5,opt,name=IsCommit,proto3" json:"IsCommit,omitempty"`
}

func (x *NewValidBlockMessage) Reset() {
	*x = NewValidBlockMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewValidBlockMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewValidBlockMessage) ProtoMessage() {}

func (x *NewValidBlockMessage) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewValidBlockMessage.ProtoReflect.Descriptor instead.
func (*NewValidBlockMessage) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{1}
}

func (x *NewValidBlockMessage) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *NewValidBlockMessage) GetRound() int64 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *NewValidBlockMessage) GetBlockPartsHeader() *pb.PartSetHeader {
	if x != nil {
		return x.BlockPartsHeader
	}
	return nil
}

func (x *NewValidBlockMessage) GetBlockParts() *pb1.BitArray {
	if x != nil {
		return x.BlockParts
	}
	return nil
}

func (x *NewValidBlockMessage) GetIsCommit() bool {
	if x != nil {
		return x.IsCommit
	}
	return false
}

type ProposalMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proposal *pb.Proposal `protobuf:"bytes,1,opt,name=Proposal,proto3" json:"Proposal,omitempty"`
}

func (x *ProposalMessage) Reset() {
	*x = ProposalMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalMessage) ProtoMessage() {}

func (x *ProposalMessage) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalMessage.ProtoReflect.Descriptor instead.
func (*ProposalMessage) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{2}
}

func (x *ProposalMessage) GetProposal() *pb.Proposal {
	if x != nil {
		return x.Proposal
	}
	return nil
}

type ProposalPOLMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height           int64         `protobuf:"zigzag64,1,opt,name=Height,proto3" json:"Height,omitempty"`
	ProposalPOLRound int64         `protobuf:"zigzag64,2,opt,name=ProposalPOLRound,proto3" json:"ProposalPOLRound,omitempty"`
	ProposalPOL      *pb1.BitArray `protobuf:"bytes,3,opt,name=ProposalPOL,proto3" json:"ProposalPOL,omitempty"`
}

func (x *ProposalPOLMessage) Reset() {
	*x = ProposalPOLMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalPOLMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalPOLMessage) ProtoMessage() {}

func (x *ProposalPOLMessage) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalPOLMessage.ProtoReflect.Descriptor instead.
func (*ProposalPOLMessage) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{3}
}

func (x *ProposalPOLMessage) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ProposalPOLMessage) GetProposalPOLRound() int64 {
	if x != nil {
		return x.ProposalPOLRound
	}
	return 0
}

func (x *ProposalPOLMessage) GetProposalPOL() *pb1.BitArray {
	if x != nil {
		return x.ProposalPOL
	}
	return nil
}

type BlockPartMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height int64    `protobuf:"zigzag64,1,opt,name=Height,proto3" json:"Height,omitempty"`
	Round  int64    `protobuf:"zigzag64,2,opt,name=Round,proto3" json:"Round,omitempty"`
	Part   *pb.Part `protobuf:"bytes,3,opt,name=Part,proto3" json:"Part,omitempty"`
}

func (x *BlockPartMessage) Reset() {
	*x = BlockPartMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockPartMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockPartMessage) ProtoMessage() {}

func (x *BlockPartMessage) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockPartMessage.ProtoReflect.Descriptor instead.
func (*BlockPartMessage) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{4}
}

func (x *BlockPartMessage) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BlockPartMessage) GetRound() int64 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *BlockPartMessage) GetPart() *pb.Part {
	if x != nil {
		return x.Part
	}
	return nil
}

type VoteMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vote *pb.Vote `protobuf:"bytes,1,opt,name=Vote,proto3" json:"Vote,omitempty"`
}

func (x *VoteMessage) Reset() {
	*x = VoteMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteMessage) ProtoMessage() {}

func (x *VoteMessage) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteMessage.ProtoReflect.Descriptor instead.
func (*VoteMessage) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{5}
}

func (x *VoteMessage) GetVote() *pb.Vote {
	if x != nil {
		return x.Vote
	}
	return nil
}

type HasVoteMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height int64  `protobuf:"zigzag64,1,opt,name=Height,proto3" json:"Height,omitempty"`
	Round  int64  `protobuf:"zigzag64,2,opt,name=Round,proto3" json:"Round,omitempty"`
	Type   uint32 `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`
	Index  int64  `protobuf:"zigzag64,4,opt,name=Index,proto3" json:"Index,omitempty"`
}

func (x *HasVoteMessage) Reset() {
	*x = HasVoteMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasVoteMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasVoteMessage) ProtoMessage() {}

func (x *HasVoteMessage) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasVoteMessage.ProtoReflect.Descriptor instead.
func (*HasVoteMessage) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{6}
}

func (x *HasVoteMessage) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *HasVoteMessage) GetRound() int64 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *HasVoteMessage) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *HasVoteMessage) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type VoteSetMaj23Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height  int64       `protobuf:"zigzag64,1,opt,name=Height,proto3" json:"Height,omitempty"`
	Round   int64       `protobuf:"zigzag64,2,opt,name=Round,proto3" json:"Round,omitempty"`
	Type    uint32      `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`
	BlockID *pb.BlockID `protobuf:"bytes,4,opt,name=BlockID,proto3" json:"BlockID,omitempty"`
}

func (x *VoteSetMaj23Message) Reset() {
	*x = VoteSetMaj23Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteSetMaj23Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteSetMaj23Message) ProtoMessage() {}

func (x *VoteSetMaj23Message) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteSetMaj23Message.ProtoReflect.Descriptor instead.
func (*VoteSetMaj23Message) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{7}
}

func (x *VoteSetMaj23Message) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VoteSetMaj23Message) GetRound() int64 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *VoteSetMaj23Message) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *VoteSetMaj23Message) GetBlockID() *pb.BlockID {
	if x != nil {
		return x.BlockID
	}
	return nil
}

type VoteSetBitsMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height  int64         `protobuf:"zigzag64,1,opt,name=Height,proto3" json:"Height,omitempty"`
	Round   int64         `protobuf:"zigzag64,2,opt,name=Round,proto3" json:"Round,omitempty"`
	Type    uint32        `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`
	BlockID *pb.BlockID   `protobuf:"bytes,4,opt,name=BlockID,proto3" json:"BlockID,omitempty"`
	Votes   *pb1.BitArray `protobuf:"bytes,5,opt,name=Votes,proto3" json:"Votes,omitempty"`
}

func (x *VoteSetBitsMessage) Reset() {
	*x = VoteSetBitsMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteSetBitsMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteSetBitsMessage) ProtoMessage() {}

func (x *VoteSetBitsMessage) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteSetBitsMessage.ProtoReflect.Descriptor instead.
func (*VoteSetBitsMessage) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{8}
}

func (x *VoteSetBitsMessage) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VoteSetBitsMessage) GetRound() int64 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *VoteSetBitsMessage) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *VoteSetBitsMessage) GetBlockID() *pb.BlockID {
	if x != nil {
		return x.BlockID
	}
	return nil
}

func (x *VoteSetBitsMessage) GetVotes() *pb1.BitArray {
	if x != nil {
		return x.Votes
	}
	return nil
}

type NewRoundStepInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HRS *pb2.HRS `protobuf:"bytes,1,opt,name=HRS,proto3" json:"HRS,omitempty"`
}

func (x *NewRoundStepInfo) Reset() {
	*x = NewRoundStepInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewRoundStepInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRoundStepInfo) ProtoMessage() {}

func (x *NewRoundStepInfo) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRoundStepInfo.ProtoReflect.Descriptor instead.
func (*NewRoundStepInfo) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{9}
}

func (x *NewRoundStepInfo) GetHRS() *pb2.HRS {
	if x != nil {
		return x.HRS
	}
	return nil
}

type MsgInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg    *anypb.Any `protobuf:"bytes,1,opt,name=Msg,proto3" json:"Msg,omitempty"`
	PeerID string     `protobuf:"bytes,2,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
}

func (x *MsgInfo) Reset() {
	*x = MsgInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgInfo) ProtoMessage() {}

func (x *MsgInfo) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgInfo.ProtoReflect.Descriptor instead.
func (*MsgInfo) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{10}
}

func (x *MsgInfo) GetMsg() *anypb.Any {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *MsgInfo) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

type TimeoutInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration *durationpb.Duration `protobuf:"bytes,1,opt,name=Duration,proto3" json:"Duration,omitempty"`
	Height   int64                `protobuf:"zigzag64,2,opt,name=Height,proto3" json:"Height,omitempty"`
	Round    int64                `protobuf:"zigzag64,3,opt,name=Round,proto3" json:"Round,omitempty"`
	Step     uint32               `protobuf:"varint,4,opt,name=Step,proto3" json:"Step,omitempty"`
}

func (x *TimeoutInfo) Reset() {
	*x = TimeoutInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeoutInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeoutInfo) ProtoMessage() {}

func (x *TimeoutInfo) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeoutInfo.ProtoReflect.Descriptor instead.
func (*TimeoutInfo) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{11}
}

func (x *TimeoutInfo) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *TimeoutInfo) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *TimeoutInfo) GetRound() int64 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *TimeoutInfo) GetStep() uint32 {
	if x != nil {
		return x.Step
	}
	return 0
}

var File_consensus_proto protoreflect.FileDescriptor

var file_consensus_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x74, 0x6d, 0x1a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x67, 0x6e, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x67, 0x6e, 0x6f, 0x2f, 0x74, 0x6d,
	0x32, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x62, 0x66, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x73, 0x75, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x73, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6e, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x67, 0x6e, 0x6f, 0x2f,
	0x74, 0x6d, 0x32, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x62, 0x66, 0x74, 0x2f, 0x61, 0x62, 0x63, 0x69,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6e,
	0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x67, 0x6e, 0x6f, 0x2f, 0x74, 0x6d, 0x32, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x2f,
	0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6e, 0x6f, 0x6c, 0x61, 0x6e, 0x67,
	0x2f, 0x67, 0x6e, 0x6f, 0x2f, 0x74, 0x6d, 0x32, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x62, 0x66, 0x74,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67,
	0x6e, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x67, 0x6e, 0x6f, 0x2f, 0x74, 0x6d, 0x32, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x62, 0x69, 0x74, 0x61, 0x72, 0x72, 0x61, 0x79, 0x2f, 0x62, 0x69, 0x74, 0x61,
	0x72, 0x72, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb7, 0x01, 0x0a, 0x13, 0x4e, 0x65, 0x77, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x53, 0x74, 0x65, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x74, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12,
	0x34, 0x0a, 0x15, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12, 0x52, 0x15,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0f,
	0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x22,
	0xcd, 0x01, 0x0a, 0x14, 0x4e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x10, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50,
	0x61, 0x72, 0x74, 0x73, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x74, 0x6d, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x53, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x10, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x74, 0x73, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x61,
	0x72, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x6d, 0x2e, 0x42,
	0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x61,
	0x72, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22,
	0x3b, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x22, 0x88, 0x01, 0x0a,
	0x12, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x50, 0x4f, 0x4c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x50, 0x4f, 0x4c, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x10, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x50,
	0x4f, 0x4c, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x50, 0x4f, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74,
	0x6d, 0x2e, 0x42, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x50, 0x4f, 0x4c, 0x22, 0x5e, 0x0a, 0x10, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x50, 0x61, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x50, 0x61, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x74, 0x6d, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x04, 0x50, 0x61, 0x72, 0x74, 0x22, 0x2b, 0x0a, 0x0b, 0x56, 0x6f, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x56, 0x6f, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x74, 0x6d, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x04,
	0x56, 0x6f, 0x74, 0x65, 0x22, 0x68, 0x0a, 0x0e, 0x48, 0x61, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x7e,
	0x0a, 0x13, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x6a, 0x32, 0x33, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x6d, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x07, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x22, 0xa1,
	0x01, 0x0a, 0x12, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x74, 0x42, 0x69, 0x74, 0x73, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x6d, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x07, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x22,
	0x0a, 0x05, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x74, 0x6d, 0x2e, 0x42, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x05, 0x56, 0x6f, 0x74,
	0x65, 0x73, 0x22, 0x2d, 0x0a, 0x10, 0x6e, 0x65, 0x77, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74,
	0x65, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x03, 0x48, 0x52, 0x53, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x74, 0x6d, 0x2e, 0x48, 0x52, 0x53, 0x52, 0x03, 0x48, 0x52,
	0x53, 0x22, 0x49, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x03,
	0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x03, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x22, 0x86, 0x01, 0x0a,
	0x0b, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x08,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x53, 0x74, 0x65, 0x70, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6e, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x67, 0x6e, 0x6f, 0x2f,
	0x74, 0x6d, 0x32, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x62, 0x66, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x73,
	0x65, 0x6e, 0x73, 0x75, 0x73, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_consensus_proto_rawDescOnce sync.Once
	file_consensus_proto_rawDescData = file_consensus_proto_rawDesc
)

func file_consensus_proto_rawDescGZIP() []byte {
	file_consensus_proto_rawDescOnce.Do(func() {
		file_consensus_proto_rawDescData = protoimpl.X.CompressGZIP(file_consensus_proto_rawDescData)
	})
	return file_consensus_proto_rawDescData
}

var file_consensus_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_consensus_proto_goTypes = []interface{}{
	(*NewRoundStepMessage)(nil),  // 0: tm.NewRoundStepMessage
	(*NewValidBlockMessage)(nil), // 1: tm.NewValidBlockMessage
	(*ProposalMessage)(nil),      // 2: tm.ProposalMessage
	(*ProposalPOLMessage)(nil),   // 3: tm.ProposalPOLMessage
	(*BlockPartMessage)(nil),     // 4: tm.BlockPartMessage
	(*VoteMessage)(nil),          // 5: tm.VoteMessage
	(*HasVoteMessage)(nil),       // 6: tm.HasVoteMessage
	(*VoteSetMaj23Message)(nil),  // 7: tm.VoteSetMaj23Message
	(*VoteSetBitsMessage)(nil),   // 8: tm.VoteSetBitsMessage
	(*NewRoundStepInfo)(nil),     // 9: tm.newRoundStepInfo
	(*MsgInfo)(nil),              // 10: tm.msgInfo
	(*TimeoutInfo)(nil),          // 11: tm.timeoutInfo
	(*pb.PartSetHeader)(nil),     // 12: tm.PartSetHeader
	(*pb1.BitArray)(nil),         // 13: tm.BitArray
	(*pb.Proposal)(nil),          // 14: tm.Proposal
	(*pb.Part)(nil),              // 15: tm.Part
	(*pb.Vote)(nil),              // 16: tm.Vote
	(*pb.BlockID)(nil),           // 17: tm.BlockID
	(*pb2.HRS)(nil),              // 18: tm.HRS
	(*anypb.Any)(nil),            // 19: google.protobuf.Any
	(*durationpb.Duration)(nil),  // 20: google.protobuf.Duration
}
var file_consensus_proto_depIdxs = []int32{
	12, // 0: tm.NewValidBlockMessage.BlockPartsHeader:type_name -> tm.PartSetHeader
	13, // 1: tm.NewValidBlockMessage.BlockParts:type_name -> tm.BitArray
	14, // 2: tm.ProposalMessage.Proposal:type_name -> tm.Proposal
	13, // 3: tm.ProposalPOLMessage.ProposalPOL:type_name -> tm.BitArray
	15, // 4: tm.BlockPartMessage.Part:type_name -> tm.Part
	16, // 5: tm.VoteMessage.Vote:type_name -> tm.Vote
	17, // 6: tm.VoteSetMaj23Message.BlockID:type_name -> tm.BlockID
	17, // 7: tm.VoteSetBitsMessage.BlockID:type_name -> tm.BlockID
	13, // 8: tm.VoteSetBitsMessage.Votes:type_name -> tm.BitArray
	18, // 9: tm.newRoundStepInfo.HRS:type_name -> tm.HRS
	19, // 10: tm.msgInfo.Msg:type_name -> google.protobuf.Any
	20, // 11: tm.timeoutInfo.Duration:type_name -> google.protobuf.Duration
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_consensus_proto_init() }
func file_consensus_proto_init() {
	if File_consensus_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_consensus_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewRoundStepMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewValidBlockMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalPOLMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockPartMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasVoteMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteSetMaj23Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteSetBitsMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewRoundStepInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeoutInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_consensus_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_consensus_proto_goTypes,
		DependencyIndexes: file_consensus_proto_depIdxs,
		MessageInfos:      file_consensus_proto_msgTypes,
	}.Build()
	File_consensus_proto = out.File
	file_consensus_proto_rawDesc = nil
	file_consensus_proto_goTypes = nil
	file_consensus_proto_depIdxs = nil
}
