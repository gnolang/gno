syntax = "proto3";
package tm;

option go_package = "github.com/gnolang/gno/tm2/pkg/bft/consensus/types/pb";

// imports
import "github.com/gnolang/gno/tm2/pkg/bft/abci/types/abci.proto";
import "github.com/gnolang/gno/tm2/pkg/crypto/merkle/merkle.proto";
import "github.com/gnolang/gno/tm2/pkg/bft/types/types.proto";
import "github.com/gnolang/gno/tm2/pkg/bitarray/bitarray.proto";
import "google/protobuf/timestamp.proto";

// messages
message RoundState {
	sint64 Height = 1;
	sint64 Round = 2;
	uint32 Step = 3;
	google.protobuf.Timestamp StartTime = 4;
	google.protobuf.Timestamp CommitTime = 5;
	ValidatorSet Validators = 6;
	Proposal Proposal = 7;
	Block ProposalBlock = 8;
	PartSet ProposalBlockParts = 9;
	sint64 LockedRound = 10;
	Block LockedBlock = 11;
	PartSet LockedBlockParts = 12;
	sint64 ValidRound = 13;
	Block ValidBlock = 14;
	PartSet ValidBlockParts = 15;
	HeightVoteSet Votes = 16;
	sint64 CommitRound = 17;
	VoteSet LastCommit = 18;
	ValidatorSet LastValidators = 19;
	bool TriggeredTimeoutPrecommit = 20;
}

message HRS {
	sint64 Height = 1;
	sint64 Round = 2;
	uint32 Step = 3;
}

message RoundStateSimple {
	string HeightRoundStep = 1;
	google.protobuf.Timestamp StartTime = 2;
	bytes ProposalBlockHash = 3;
	bytes LockedBlockHash = 4;
	bytes ValidBlockHash = 5;
	HeightVoteSet Votes = 6;
}

message PeerRoundState {
	sint64 Height = 1;
	sint64 Round = 2;
	uint32 Step = 3;
	google.protobuf.Timestamp StartTime = 4;
	bool Proposal = 5;
	PartSetHeader ProposalBlockPartsHeader = 6;
	BitArray ProposalBlockParts = 7;
	sint64 ProposalPOLRound = 8;
	BitArray ProposalPOL = 9;
	BitArray Prevotes = 10;
	BitArray Precommits = 11;
	sint64 LastCommitRound = 12;
	BitArray LastCommit = 13;
	sint64 CatchupCommitRound = 14;
	BitArray CatchupCommit = 15;
}

message HeightVoteSet {
}

message EventNewRoundStep {
	HRS HRS = 1;
	sint64 SecondsSinceStartTime = 2;
	sint64 LastCommitRound = 3;
}

message EventNewValidBlock {
	HRS HRS = 1;
	PartSetHeader BlockPartsHeader = 2;
	BitArray BlockParts = 3;
	bool IsCommit = 4;
}

message EventNewRound {
	HRS HRS = 1;
	Validator Proposer = 2;
	sint64 ProposerIndex = 3;
}

message EventCompleteProposal {
	HRS HRS = 1;
	BlockID BlockID = 2;
}

message EventTimeoutPropose {
	HRS HRS = 1;
}

message EventTimeoutWait {
	HRS HRS = 1;
}