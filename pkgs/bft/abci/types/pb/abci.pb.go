// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.3
// source: abci.proto

package pb

import (
	reflect "reflect"
	sync "sync"

	pb "github.com/gnolang/gno/pkgs/crypto/merkle/pb"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// messages
type RequestBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestBase) Reset() {
	*x = RequestBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestBase) ProtoMessage() {}

func (x *RequestBase) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestBase.ProtoReflect.Descriptor instead.
func (*RequestBase) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{0}
}

type RequestEcho struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBase *RequestBase `protobuf:"bytes,1,opt,name=RequestBase,proto3" json:"RequestBase,omitempty"`
	Message     string       `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *RequestEcho) Reset() {
	*x = RequestEcho{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestEcho) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestEcho) ProtoMessage() {}

func (x *RequestEcho) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestEcho.ProtoReflect.Descriptor instead.
func (*RequestEcho) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{1}
}

func (x *RequestEcho) GetRequestBase() *RequestBase {
	if x != nil {
		return x.RequestBase
	}
	return nil
}

func (x *RequestEcho) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RequestFlush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBase *RequestBase `protobuf:"bytes,1,opt,name=RequestBase,proto3" json:"RequestBase,omitempty"`
}

func (x *RequestFlush) Reset() {
	*x = RequestFlush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestFlush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestFlush) ProtoMessage() {}

func (x *RequestFlush) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestFlush.ProtoReflect.Descriptor instead.
func (*RequestFlush) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{2}
}

func (x *RequestFlush) GetRequestBase() *RequestBase {
	if x != nil {
		return x.RequestBase
	}
	return nil
}

type RequestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBase *RequestBase `protobuf:"bytes,1,opt,name=RequestBase,proto3" json:"RequestBase,omitempty"`
}

func (x *RequestInfo) Reset() {
	*x = RequestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestInfo) ProtoMessage() {}

func (x *RequestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestInfo.ProtoReflect.Descriptor instead.
func (*RequestInfo) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{3}
}

func (x *RequestInfo) GetRequestBase() *RequestBase {
	if x != nil {
		return x.RequestBase
	}
	return nil
}

type RequestSetOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBase *RequestBase `protobuf:"bytes,1,opt,name=RequestBase,proto3" json:"RequestBase,omitempty"`
	Key         string       `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	Value       string       `protobuf:"bytes,3,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *RequestSetOption) Reset() {
	*x = RequestSetOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestSetOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSetOption) ProtoMessage() {}

func (x *RequestSetOption) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSetOption.ProtoReflect.Descriptor instead.
func (*RequestSetOption) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{4}
}

func (x *RequestSetOption) GetRequestBase() *RequestBase {
	if x != nil {
		return x.RequestBase
	}
	return nil
}

func (x *RequestSetOption) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RequestSetOption) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type RequestInitChain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBase     *RequestBase         `protobuf:"bytes,1,opt,name=RequestBase,proto3" json:"RequestBase,omitempty"`
	Time            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=Time,proto3" json:"Time,omitempty"`
	ChainID         string               `protobuf:"bytes,3,opt,name=ChainID,proto3" json:"ChainID,omitempty"`
	ConsensusParams *ConsensusParams     `protobuf:"bytes,4,opt,name=ConsensusParams,proto3" json:"ConsensusParams,omitempty"`
	Validators      []*ValidatorUpdate   `protobuf:"bytes,5,rep,name=Validators,proto3" json:"Validators,omitempty"`
	AppState        *any.Any             `protobuf:"bytes,6,opt,name=AppState,proto3" json:"AppState,omitempty"`
}

func (x *RequestInitChain) Reset() {
	*x = RequestInitChain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestInitChain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestInitChain) ProtoMessage() {}

func (x *RequestInitChain) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestInitChain.ProtoReflect.Descriptor instead.
func (*RequestInitChain) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{5}
}

func (x *RequestInitChain) GetRequestBase() *RequestBase {
	if x != nil {
		return x.RequestBase
	}
	return nil
}

func (x *RequestInitChain) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *RequestInitChain) GetChainID() string {
	if x != nil {
		return x.ChainID
	}
	return ""
}

func (x *RequestInitChain) GetConsensusParams() *ConsensusParams {
	if x != nil {
		return x.ConsensusParams
	}
	return nil
}

func (x *RequestInitChain) GetValidators() []*ValidatorUpdate {
	if x != nil {
		return x.Validators
	}
	return nil
}

func (x *RequestInitChain) GetAppState() *any.Any {
	if x != nil {
		return x.AppState
	}
	return nil
}

type RequestQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBase *RequestBase `protobuf:"bytes,1,opt,name=RequestBase,proto3" json:"RequestBase,omitempty"`
	Data        []byte       `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	Path        string       `protobuf:"bytes,3,opt,name=Path,proto3" json:"Path,omitempty"`
	Height      int64        `protobuf:"zigzag64,4,opt,name=Height,proto3" json:"Height,omitempty"`
	Prove       bool         `protobuf:"varint,5,opt,name=Prove,proto3" json:"Prove,omitempty"`
}

func (x *RequestQuery) Reset() {
	*x = RequestQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestQuery) ProtoMessage() {}

func (x *RequestQuery) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestQuery.ProtoReflect.Descriptor instead.
func (*RequestQuery) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{6}
}

func (x *RequestQuery) GetRequestBase() *RequestBase {
	if x != nil {
		return x.RequestBase
	}
	return nil
}

func (x *RequestQuery) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RequestQuery) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RequestQuery) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *RequestQuery) GetProve() bool {
	if x != nil {
		return x.Prove
	}
	return false
}

type RequestBeginBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBase    *RequestBase    `protobuf:"bytes,1,opt,name=RequestBase,proto3" json:"RequestBase,omitempty"`
	Hash           []byte          `protobuf:"bytes,2,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Header         *any.Any        `protobuf:"bytes,3,opt,name=Header,proto3" json:"Header,omitempty"`
	LastCommitInfo *LastCommitInfo `protobuf:"bytes,4,opt,name=LastCommitInfo,proto3" json:"LastCommitInfo,omitempty"`
}

func (x *RequestBeginBlock) Reset() {
	*x = RequestBeginBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestBeginBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestBeginBlock) ProtoMessage() {}

func (x *RequestBeginBlock) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestBeginBlock.ProtoReflect.Descriptor instead.
func (*RequestBeginBlock) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{7}
}

func (x *RequestBeginBlock) GetRequestBase() *RequestBase {
	if x != nil {
		return x.RequestBase
	}
	return nil
}

func (x *RequestBeginBlock) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *RequestBeginBlock) GetHeader() *any.Any {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *RequestBeginBlock) GetLastCommitInfo() *LastCommitInfo {
	if x != nil {
		return x.LastCommitInfo
	}
	return nil
}

type RequestCheckTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBase *RequestBase `protobuf:"bytes,1,opt,name=RequestBase,proto3" json:"RequestBase,omitempty"`
	Tx          []byte       `protobuf:"bytes,2,opt,name=Tx,proto3" json:"Tx,omitempty"`
	Type        int64        `protobuf:"zigzag64,3,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *RequestCheckTx) Reset() {
	*x = RequestCheckTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestCheckTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCheckTx) ProtoMessage() {}

func (x *RequestCheckTx) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCheckTx.ProtoReflect.Descriptor instead.
func (*RequestCheckTx) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{8}
}

func (x *RequestCheckTx) GetRequestBase() *RequestBase {
	if x != nil {
		return x.RequestBase
	}
	return nil
}

func (x *RequestCheckTx) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *RequestCheckTx) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type RequestDeliverTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBase *RequestBase `protobuf:"bytes,1,opt,name=RequestBase,proto3" json:"RequestBase,omitempty"`
	Tx          []byte       `protobuf:"bytes,2,opt,name=Tx,proto3" json:"Tx,omitempty"`
}

func (x *RequestDeliverTx) Reset() {
	*x = RequestDeliverTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestDeliverTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestDeliverTx) ProtoMessage() {}

func (x *RequestDeliverTx) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestDeliverTx.ProtoReflect.Descriptor instead.
func (*RequestDeliverTx) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{9}
}

func (x *RequestDeliverTx) GetRequestBase() *RequestBase {
	if x != nil {
		return x.RequestBase
	}
	return nil
}

func (x *RequestDeliverTx) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

type RequestEndBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBase *RequestBase `protobuf:"bytes,1,opt,name=RequestBase,proto3" json:"RequestBase,omitempty"`
	Height      int64        `protobuf:"zigzag64,2,opt,name=Height,proto3" json:"Height,omitempty"`
}

func (x *RequestEndBlock) Reset() {
	*x = RequestEndBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestEndBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestEndBlock) ProtoMessage() {}

func (x *RequestEndBlock) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestEndBlock.ProtoReflect.Descriptor instead.
func (*RequestEndBlock) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{10}
}

func (x *RequestEndBlock) GetRequestBase() *RequestBase {
	if x != nil {
		return x.RequestBase
	}
	return nil
}

func (x *RequestEndBlock) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type RequestCommit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBase *RequestBase `protobuf:"bytes,1,opt,name=RequestBase,proto3" json:"RequestBase,omitempty"`
}

func (x *RequestCommit) Reset() {
	*x = RequestCommit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestCommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCommit) ProtoMessage() {}

func (x *RequestCommit) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCommit.ProtoReflect.Descriptor instead.
func (*RequestCommit) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{11}
}

func (x *RequestCommit) GetRequestBase() *RequestBase {
	if x != nil {
		return x.RequestBase
	}
	return nil
}

type ResponseBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error  *any.Any   `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	Data   []byte     `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	Events []*any.Any `protobuf:"bytes,3,rep,name=Events,proto3" json:"Events,omitempty"`
	Log    string     `protobuf:"bytes,4,opt,name=Log,proto3" json:"Log,omitempty"`
	Info   string     `protobuf:"bytes,5,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ResponseBase) Reset() {
	*x = ResponseBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseBase) ProtoMessage() {}

func (x *ResponseBase) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseBase.ProtoReflect.Descriptor instead.
func (*ResponseBase) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{12}
}

func (x *ResponseBase) GetError() *any.Any {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResponseBase) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResponseBase) GetEvents() []*any.Any {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *ResponseBase) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *ResponseBase) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type ResponseException struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseBase *ResponseBase `protobuf:"bytes,1,opt,name=ResponseBase,proto3" json:"ResponseBase,omitempty"`
}

func (x *ResponseException) Reset() {
	*x = ResponseException{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseException) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseException) ProtoMessage() {}

func (x *ResponseException) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseException.ProtoReflect.Descriptor instead.
func (*ResponseException) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{13}
}

func (x *ResponseException) GetResponseBase() *ResponseBase {
	if x != nil {
		return x.ResponseBase
	}
	return nil
}

type ResponseEcho struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseBase *ResponseBase `protobuf:"bytes,1,opt,name=ResponseBase,proto3" json:"ResponseBase,omitempty"`
	Message      string        `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ResponseEcho) Reset() {
	*x = ResponseEcho{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseEcho) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseEcho) ProtoMessage() {}

func (x *ResponseEcho) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseEcho.ProtoReflect.Descriptor instead.
func (*ResponseEcho) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{14}
}

func (x *ResponseEcho) GetResponseBase() *ResponseBase {
	if x != nil {
		return x.ResponseBase
	}
	return nil
}

func (x *ResponseEcho) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ResponseFlush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseBase *ResponseBase `protobuf:"bytes,1,opt,name=ResponseBase,proto3" json:"ResponseBase,omitempty"`
}

func (x *ResponseFlush) Reset() {
	*x = ResponseFlush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseFlush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseFlush) ProtoMessage() {}

func (x *ResponseFlush) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseFlush.ProtoReflect.Descriptor instead.
func (*ResponseFlush) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{15}
}

func (x *ResponseFlush) GetResponseBase() *ResponseBase {
	if x != nil {
		return x.ResponseBase
	}
	return nil
}

type ResponseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseBase     *ResponseBase `protobuf:"bytes,1,opt,name=ResponseBase,proto3" json:"ResponseBase,omitempty"`
	ABCIVersion      string        `protobuf:"bytes,2,opt,name=ABCIVersion,proto3" json:"ABCIVersion,omitempty"`
	AppVersion       string        `protobuf:"bytes,3,opt,name=AppVersion,proto3" json:"AppVersion,omitempty"`
	LastBlockHeight  int64         `protobuf:"zigzag64,4,opt,name=LastBlockHeight,proto3" json:"LastBlockHeight,omitempty"`
	LastBlockAppHash []byte        `protobuf:"bytes,5,opt,name=LastBlockAppHash,proto3" json:"LastBlockAppHash,omitempty"`
}

func (x *ResponseInfo) Reset() {
	*x = ResponseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseInfo) ProtoMessage() {}

func (x *ResponseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseInfo.ProtoReflect.Descriptor instead.
func (*ResponseInfo) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{16}
}

func (x *ResponseInfo) GetResponseBase() *ResponseBase {
	if x != nil {
		return x.ResponseBase
	}
	return nil
}

func (x *ResponseInfo) GetABCIVersion() string {
	if x != nil {
		return x.ABCIVersion
	}
	return ""
}

func (x *ResponseInfo) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *ResponseInfo) GetLastBlockHeight() int64 {
	if x != nil {
		return x.LastBlockHeight
	}
	return 0
}

func (x *ResponseInfo) GetLastBlockAppHash() []byte {
	if x != nil {
		return x.LastBlockAppHash
	}
	return nil
}

type ResponseSetOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseBase *ResponseBase `protobuf:"bytes,1,opt,name=ResponseBase,proto3" json:"ResponseBase,omitempty"`
}

func (x *ResponseSetOption) Reset() {
	*x = ResponseSetOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseSetOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseSetOption) ProtoMessage() {}

func (x *ResponseSetOption) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseSetOption.ProtoReflect.Descriptor instead.
func (*ResponseSetOption) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{17}
}

func (x *ResponseSetOption) GetResponseBase() *ResponseBase {
	if x != nil {
		return x.ResponseBase
	}
	return nil
}

type ResponseInitChain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseBase    *ResponseBase      `protobuf:"bytes,1,opt,name=ResponseBase,proto3" json:"ResponseBase,omitempty"`
	ConsensusParams *ConsensusParams   `protobuf:"bytes,2,opt,name=ConsensusParams,proto3" json:"ConsensusParams,omitempty"`
	Validators      []*ValidatorUpdate `protobuf:"bytes,3,rep,name=Validators,proto3" json:"Validators,omitempty"`
}

func (x *ResponseInitChain) Reset() {
	*x = ResponseInitChain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseInitChain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseInitChain) ProtoMessage() {}

func (x *ResponseInitChain) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseInitChain.ProtoReflect.Descriptor instead.
func (*ResponseInitChain) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{18}
}

func (x *ResponseInitChain) GetResponseBase() *ResponseBase {
	if x != nil {
		return x.ResponseBase
	}
	return nil
}

func (x *ResponseInitChain) GetConsensusParams() *ConsensusParams {
	if x != nil {
		return x.ConsensusParams
	}
	return nil
}

func (x *ResponseInitChain) GetValidators() []*ValidatorUpdate {
	if x != nil {
		return x.Validators
	}
	return nil
}

type ResponseQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseBase *ResponseBase `protobuf:"bytes,1,opt,name=ResponseBase,proto3" json:"ResponseBase,omitempty"`
	Key          []byte        `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	Value        []byte        `protobuf:"bytes,3,opt,name=Value,proto3" json:"Value,omitempty"`
	Proof        *pb.Proof     `protobuf:"bytes,4,opt,name=Proof,proto3" json:"Proof,omitempty"`
	Height       int64         `protobuf:"zigzag64,5,opt,name=Height,proto3" json:"Height,omitempty"`
}

func (x *ResponseQuery) Reset() {
	*x = ResponseQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseQuery) ProtoMessage() {}

func (x *ResponseQuery) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseQuery.ProtoReflect.Descriptor instead.
func (*ResponseQuery) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{19}
}

func (x *ResponseQuery) GetResponseBase() *ResponseBase {
	if x != nil {
		return x.ResponseBase
	}
	return nil
}

func (x *ResponseQuery) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ResponseQuery) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ResponseQuery) GetProof() *pb.Proof {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *ResponseQuery) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type ResponseBeginBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseBase *ResponseBase `protobuf:"bytes,1,opt,name=ResponseBase,proto3" json:"ResponseBase,omitempty"`
}

func (x *ResponseBeginBlock) Reset() {
	*x = ResponseBeginBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseBeginBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseBeginBlock) ProtoMessage() {}

func (x *ResponseBeginBlock) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseBeginBlock.ProtoReflect.Descriptor instead.
func (*ResponseBeginBlock) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{20}
}

func (x *ResponseBeginBlock) GetResponseBase() *ResponseBase {
	if x != nil {
		return x.ResponseBase
	}
	return nil
}

type ResponseCheckTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseBase *ResponseBase `protobuf:"bytes,1,opt,name=ResponseBase,proto3" json:"ResponseBase,omitempty"`
	GasWanted    int64         `protobuf:"zigzag64,2,opt,name=GasWanted,proto3" json:"GasWanted,omitempty"`
	GasUsed      int64         `protobuf:"zigzag64,3,opt,name=GasUsed,proto3" json:"GasUsed,omitempty"`
}

func (x *ResponseCheckTx) Reset() {
	*x = ResponseCheckTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseCheckTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCheckTx) ProtoMessage() {}

func (x *ResponseCheckTx) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCheckTx.ProtoReflect.Descriptor instead.
func (*ResponseCheckTx) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{21}
}

func (x *ResponseCheckTx) GetResponseBase() *ResponseBase {
	if x != nil {
		return x.ResponseBase
	}
	return nil
}

func (x *ResponseCheckTx) GetGasWanted() int64 {
	if x != nil {
		return x.GasWanted
	}
	return 0
}

func (x *ResponseCheckTx) GetGasUsed() int64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

type ResponseDeliverTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseBase *ResponseBase `protobuf:"bytes,1,opt,name=ResponseBase,proto3" json:"ResponseBase,omitempty"`
	GasWanted    int64         `protobuf:"zigzag64,2,opt,name=GasWanted,proto3" json:"GasWanted,omitempty"`
	GasUsed      int64         `protobuf:"zigzag64,3,opt,name=GasUsed,proto3" json:"GasUsed,omitempty"`
}

func (x *ResponseDeliverTx) Reset() {
	*x = ResponseDeliverTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseDeliverTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseDeliverTx) ProtoMessage() {}

func (x *ResponseDeliverTx) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseDeliverTx.ProtoReflect.Descriptor instead.
func (*ResponseDeliverTx) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{22}
}

func (x *ResponseDeliverTx) GetResponseBase() *ResponseBase {
	if x != nil {
		return x.ResponseBase
	}
	return nil
}

func (x *ResponseDeliverTx) GetGasWanted() int64 {
	if x != nil {
		return x.GasWanted
	}
	return 0
}

func (x *ResponseDeliverTx) GetGasUsed() int64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

type ResponseEndBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseBase     *ResponseBase      `protobuf:"bytes,1,opt,name=ResponseBase,proto3" json:"ResponseBase,omitempty"`
	ValidatorUpdates []*ValidatorUpdate `protobuf:"bytes,2,rep,name=ValidatorUpdates,proto3" json:"ValidatorUpdates,omitempty"`
	ConsensusParams  *ConsensusParams   `protobuf:"bytes,3,opt,name=ConsensusParams,proto3" json:"ConsensusParams,omitempty"`
	Events           []*any.Any         `protobuf:"bytes,4,rep,name=Events,proto3" json:"Events,omitempty"`
}

func (x *ResponseEndBlock) Reset() {
	*x = ResponseEndBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseEndBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseEndBlock) ProtoMessage() {}

func (x *ResponseEndBlock) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseEndBlock.ProtoReflect.Descriptor instead.
func (*ResponseEndBlock) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{23}
}

func (x *ResponseEndBlock) GetResponseBase() *ResponseBase {
	if x != nil {
		return x.ResponseBase
	}
	return nil
}

func (x *ResponseEndBlock) GetValidatorUpdates() []*ValidatorUpdate {
	if x != nil {
		return x.ValidatorUpdates
	}
	return nil
}

func (x *ResponseEndBlock) GetConsensusParams() *ConsensusParams {
	if x != nil {
		return x.ConsensusParams
	}
	return nil
}

func (x *ResponseEndBlock) GetEvents() []*any.Any {
	if x != nil {
		return x.Events
	}
	return nil
}

type ResponseCommit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseBase *ResponseBase `protobuf:"bytes,1,opt,name=ResponseBase,proto3" json:"ResponseBase,omitempty"`
}

func (x *ResponseCommit) Reset() {
	*x = ResponseCommit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseCommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCommit) ProtoMessage() {}

func (x *ResponseCommit) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCommit.ProtoReflect.Descriptor instead.
func (*ResponseCommit) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{24}
}

func (x *ResponseCommit) GetResponseBase() *ResponseBase {
	if x != nil {
		return x.ResponseBase
	}
	return nil
}

type StringError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *StringError) Reset() {
	*x = StringError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringError) ProtoMessage() {}

func (x *StringError) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringError.ProtoReflect.Descriptor instead.
func (*StringError) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{25}
}

func (x *StringError) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ConsensusParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block     *BlockParams     `protobuf:"bytes,1,opt,name=Block,proto3" json:"Block,omitempty"`
	Validator *ValidatorParams `protobuf:"bytes,2,opt,name=Validator,proto3" json:"Validator,omitempty"`
}

func (x *ConsensusParams) Reset() {
	*x = ConsensusParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsensusParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusParams) ProtoMessage() {}

func (x *ConsensusParams) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsensusParams.ProtoReflect.Descriptor instead.
func (*ConsensusParams) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{26}
}

func (x *ConsensusParams) GetBlock() *BlockParams {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *ConsensusParams) GetValidator() *ValidatorParams {
	if x != nil {
		return x.Validator
	}
	return nil
}

type BlockParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxTxBytes    int64 `protobuf:"zigzag64,1,opt,name=MaxTxBytes,proto3" json:"MaxTxBytes,omitempty"`
	MaxDataBytes  int64 `protobuf:"zigzag64,2,opt,name=MaxDataBytes,proto3" json:"MaxDataBytes,omitempty"`
	MaxBlockBytes int64 `protobuf:"zigzag64,3,opt,name=MaxBlockBytes,proto3" json:"MaxBlockBytes,omitempty"`
	MaxGas        int64 `protobuf:"zigzag64,4,opt,name=MaxGas,proto3" json:"MaxGas,omitempty"`
	TimeIotaMS    int64 `protobuf:"zigzag64,5,opt,name=TimeIotaMS,proto3" json:"TimeIotaMS,omitempty"`
}

func (x *BlockParams) Reset() {
	*x = BlockParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockParams) ProtoMessage() {}

func (x *BlockParams) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockParams.ProtoReflect.Descriptor instead.
func (*BlockParams) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{27}
}

func (x *BlockParams) GetMaxTxBytes() int64 {
	if x != nil {
		return x.MaxTxBytes
	}
	return 0
}

func (x *BlockParams) GetMaxDataBytes() int64 {
	if x != nil {
		return x.MaxDataBytes
	}
	return 0
}

func (x *BlockParams) GetMaxBlockBytes() int64 {
	if x != nil {
		return x.MaxBlockBytes
	}
	return 0
}

func (x *BlockParams) GetMaxGas() int64 {
	if x != nil {
		return x.MaxGas
	}
	return 0
}

func (x *BlockParams) GetTimeIotaMS() int64 {
	if x != nil {
		return x.TimeIotaMS
	}
	return 0
}

type ValidatorParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKeyTypeURLs []string `protobuf:"bytes,1,rep,name=PubKeyTypeURLs,proto3" json:"PubKeyTypeURLs,omitempty"`
}

func (x *ValidatorParams) Reset() {
	*x = ValidatorParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorParams) ProtoMessage() {}

func (x *ValidatorParams) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorParams.ProtoReflect.Descriptor instead.
func (*ValidatorParams) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{28}
}

func (x *ValidatorParams) GetPubKeyTypeURLs() []string {
	if x != nil {
		return x.PubKeyTypeURLs
	}
	return nil
}

type ValidatorUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	PubKey  *any.Any `protobuf:"bytes,2,opt,name=PubKey,proto3" json:"PubKey,omitempty"`
	Power   int64    `protobuf:"zigzag64,3,opt,name=Power,proto3" json:"Power,omitempty"`
}

func (x *ValidatorUpdate) Reset() {
	*x = ValidatorUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorUpdate) ProtoMessage() {}

func (x *ValidatorUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorUpdate.ProtoReflect.Descriptor instead.
func (*ValidatorUpdate) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{29}
}

func (x *ValidatorUpdate) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *ValidatorUpdate) GetPubKey() *any.Any {
	if x != nil {
		return x.PubKey
	}
	return nil
}

func (x *ValidatorUpdate) GetPower() int64 {
	if x != nil {
		return x.Power
	}
	return 0
}

type LastCommitInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Round int32       `protobuf:"zigzag32,1,opt,name=Round,proto3" json:"Round,omitempty"`
	Votes []*VoteInfo `protobuf:"bytes,2,rep,name=Votes,proto3" json:"Votes,omitempty"`
}

func (x *LastCommitInfo) Reset() {
	*x = LastCommitInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LastCommitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastCommitInfo) ProtoMessage() {}

func (x *LastCommitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastCommitInfo.ProtoReflect.Descriptor instead.
func (*LastCommitInfo) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{30}
}

func (x *LastCommitInfo) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *LastCommitInfo) GetVotes() []*VoteInfo {
	if x != nil {
		return x.Votes
	}
	return nil
}

type VoteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address         []byte `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	Power           int64  `protobuf:"zigzag64,2,opt,name=Power,proto3" json:"Power,omitempty"`
	SignedLastBlock bool   `protobuf:"varint,3,opt,name=SignedLastBlock,proto3" json:"SignedLastBlock,omitempty"`
}

func (x *VoteInfo) Reset() {
	*x = VoteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteInfo) ProtoMessage() {}

func (x *VoteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteInfo.ProtoReflect.Descriptor instead.
func (*VoteInfo) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{31}
}

func (x *VoteInfo) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *VoteInfo) GetPower() int64 {
	if x != nil {
		return x.Power
	}
	return 0
}

func (x *VoteInfo) GetSignedLastBlock() bool {
	if x != nil {
		return x.SignedLastBlock
	}
	return false
}

type EventString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *EventString) Reset() {
	*x = EventString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventString) ProtoMessage() {}

func (x *EventString) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventString.ProtoReflect.Descriptor instead.
func (*EventString) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{32}
}

func (x *EventString) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type MockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version  string               `protobuf:"bytes,1,opt,name=Version,proto3" json:"Version,omitempty"`
	ChainID  string               `protobuf:"bytes,2,opt,name=ChainID,proto3" json:"ChainID,omitempty"`
	Height   int64                `protobuf:"zigzag64,3,opt,name=Height,proto3" json:"Height,omitempty"`
	Time     *timestamp.Timestamp `protobuf:"bytes,4,opt,name=Time,proto3" json:"Time,omitempty"`
	NumTxs   int64                `protobuf:"zigzag64,5,opt,name=NumTxs,proto3" json:"NumTxs,omitempty"`
	TotalTxs int64                `protobuf:"zigzag64,6,opt,name=TotalTxs,proto3" json:"TotalTxs,omitempty"`
}

func (x *MockHeader) Reset() {
	*x = MockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MockHeader) ProtoMessage() {}

func (x *MockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_abci_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MockHeader.ProtoReflect.Descriptor instead.
func (*MockHeader) Descriptor() ([]byte, []int) {
	return file_abci_proto_rawDescGZIP(), []int{33}
}

func (x *MockHeader) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *MockHeader) GetChainID() string {
	if x != nil {
		return x.ChainID
	}
	return ""
}

func (x *MockHeader) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MockHeader) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *MockHeader) GetNumTxs() int64 {
	if x != nil {
		return x.NumTxs
	}
	return 0
}

func (x *MockHeader) GetTotalTxs() int64 {
	if x != nil {
		return x.TotalTxs
	}
	return 0
}

var File_abci_proto protoreflect.FileDescriptor

var file_abci_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x61, 0x62,
	0x63, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x36,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6e, 0x6f, 0x6c, 0x61,
	0x6e, 0x67, 0x2f, 0x67, 0x6e, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x73, 0x2f, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x2f, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0d, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x61, 0x73, 0x65, 0x22, 0x5c, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x45, 0x63, 0x68, 0x6f, 0x12, 0x33, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x62, 0x63, 0x69,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x43, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x6c,
	0x75, 0x73, 0x68, 0x12, 0x33, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x22, 0x42, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61,
	0x62, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x22, 0x6f, 0x0a, 0x10,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x33, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x61, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbb, 0x02,
	0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x12, 0x33, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x44, 0x12, 0x3f, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x62, 0x63,
	0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x0f, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x41, 0x70, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x08, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x0c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x33, 0x0a, 0x0b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x22, 0xc8, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x33, 0x0a,
	0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2c, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x0e, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61,
	0x62, 0x63, 0x69, 0x2e, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0e, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x69, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x54, 0x78, 0x12, 0x33, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x62, 0x63, 0x69,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x54, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x57, 0x0a,
	0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x54,
	0x78, 0x12, 0x33, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x02, 0x54, 0x78, 0x22, 0x5e, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x45, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x33, 0x0a, 0x0b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x44, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61,
	0x62, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x22, 0xa2, 0x01, 0x0a,
	0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a,
	0x06, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4c,
	0x6f, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x4b, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x62, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x22, 0x60,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x36,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x47, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x6c, 0x75, 0x73,
	0x68, 0x12, 0x36, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x0c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x0c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61,
	0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x42, 0x43, 0x49, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x42, 0x43, 0x49, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0f, 0x4c,
	0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2a,
	0x0a, 0x10, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x48, 0x61, 0x73, 0x68, 0x22, 0x4b, 0x0a, 0x11, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x36, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x36, 0x0a,
	0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73,
	0x75, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x62, 0x63,
	0x69, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x0a, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x22, 0xa8, 0x01,
	0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x36, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1f, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x74, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x4c, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x36,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x12, 0x36, 0x0a, 0x0c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x73, 0x57, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x47, 0x61, 0x73, 0x57, 0x61, 0x6e, 0x74, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x07, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x11, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x54, 0x78,
	0x12, 0x36, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x73, 0x57,
	0x61, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x47, 0x61, 0x73,
	0x57, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64,
	0x22, 0xfc, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x64,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x36, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x62,
	0x63, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x10, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x10,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x3f, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x62, 0x63, 0x69,
	0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x0f, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x2c, 0x0a, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x48, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x12, 0x36, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x22, 0x23, 0x0a, 0x0b, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6f,
	0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x27, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x33, 0x0a, 0x09, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x61, 0x62, 0x63, 0x69, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x09, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x22,
	0xaf, 0x01, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x54, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x0a, 0x4d, 0x61, 0x78, 0x54, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0c, 0x4d, 0x61, 0x78, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0d, 0x4d, 0x61, 0x78, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x78,
	0x47, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x4d, 0x61, 0x78, 0x47, 0x61,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6f, 0x74, 0x61, 0x4d, 0x53, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6f, 0x74, 0x61, 0x4d,
	0x53, 0x22, 0x39, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x55, 0x52, 0x4c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x50, 0x75,
	0x62, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x55, 0x52, 0x4c, 0x73, 0x22, 0x6f, 0x0a, 0x0f,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x50, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x06, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x22, 0x4c, 0x0a,
	0x0e, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x08, 0x56,
	0x6f, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x05, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x22, 0x23, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x0a, 0x4d, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x2e, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x54, 0x78, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x06, 0x4e, 0x75, 0x6d, 0x54, 0x78, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x54, 0x78, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x54, 0x78, 0x73, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6e, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x67, 0x6e, 0x6f, 0x2f,
	0x70, 0x6b, 0x67, 0x73, 0x2f, 0x62, 0x66, 0x74, 0x2f, 0x61, 0x62, 0x63, 0x69, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_abci_proto_rawDescOnce sync.Once
	file_abci_proto_rawDescData = file_abci_proto_rawDesc
)

func file_abci_proto_rawDescGZIP() []byte {
	file_abci_proto_rawDescOnce.Do(func() {
		file_abci_proto_rawDescData = protoimpl.X.CompressGZIP(file_abci_proto_rawDescData)
	})
	return file_abci_proto_rawDescData
}

var file_abci_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_abci_proto_goTypes = []interface{}{
	(*RequestBase)(nil),         // 0: abci.RequestBase
	(*RequestEcho)(nil),         // 1: abci.RequestEcho
	(*RequestFlush)(nil),        // 2: abci.RequestFlush
	(*RequestInfo)(nil),         // 3: abci.RequestInfo
	(*RequestSetOption)(nil),    // 4: abci.RequestSetOption
	(*RequestInitChain)(nil),    // 5: abci.RequestInitChain
	(*RequestQuery)(nil),        // 6: abci.RequestQuery
	(*RequestBeginBlock)(nil),   // 7: abci.RequestBeginBlock
	(*RequestCheckTx)(nil),      // 8: abci.RequestCheckTx
	(*RequestDeliverTx)(nil),    // 9: abci.RequestDeliverTx
	(*RequestEndBlock)(nil),     // 10: abci.RequestEndBlock
	(*RequestCommit)(nil),       // 11: abci.RequestCommit
	(*ResponseBase)(nil),        // 12: abci.ResponseBase
	(*ResponseException)(nil),   // 13: abci.ResponseException
	(*ResponseEcho)(nil),        // 14: abci.ResponseEcho
	(*ResponseFlush)(nil),       // 15: abci.ResponseFlush
	(*ResponseInfo)(nil),        // 16: abci.ResponseInfo
	(*ResponseSetOption)(nil),   // 17: abci.ResponseSetOption
	(*ResponseInitChain)(nil),   // 18: abci.ResponseInitChain
	(*ResponseQuery)(nil),       // 19: abci.ResponseQuery
	(*ResponseBeginBlock)(nil),  // 20: abci.ResponseBeginBlock
	(*ResponseCheckTx)(nil),     // 21: abci.ResponseCheckTx
	(*ResponseDeliverTx)(nil),   // 22: abci.ResponseDeliverTx
	(*ResponseEndBlock)(nil),    // 23: abci.ResponseEndBlock
	(*ResponseCommit)(nil),      // 24: abci.ResponseCommit
	(*StringError)(nil),         // 25: abci.StringError
	(*ConsensusParams)(nil),     // 26: abci.ConsensusParams
	(*BlockParams)(nil),         // 27: abci.BlockParams
	(*ValidatorParams)(nil),     // 28: abci.ValidatorParams
	(*ValidatorUpdate)(nil),     // 29: abci.ValidatorUpdate
	(*LastCommitInfo)(nil),      // 30: abci.LastCommitInfo
	(*VoteInfo)(nil),            // 31: abci.VoteInfo
	(*EventString)(nil),         // 32: abci.EventString
	(*MockHeader)(nil),          // 33: abci.MockHeader
	(*timestamp.Timestamp)(nil), // 34: google.protobuf.Timestamp
	(*any.Any)(nil),             // 35: google.protobuf.Any
	(*pb.Proof)(nil),            // 36: tm.Proof
}
var file_abci_proto_depIdxs = []int32{
	0,  // 0: abci.RequestEcho.RequestBase:type_name -> abci.RequestBase
	0,  // 1: abci.RequestFlush.RequestBase:type_name -> abci.RequestBase
	0,  // 2: abci.RequestInfo.RequestBase:type_name -> abci.RequestBase
	0,  // 3: abci.RequestSetOption.RequestBase:type_name -> abci.RequestBase
	0,  // 4: abci.RequestInitChain.RequestBase:type_name -> abci.RequestBase
	34, // 5: abci.RequestInitChain.Time:type_name -> google.protobuf.Timestamp
	26, // 6: abci.RequestInitChain.ConsensusParams:type_name -> abci.ConsensusParams
	29, // 7: abci.RequestInitChain.Validators:type_name -> abci.ValidatorUpdate
	35, // 8: abci.RequestInitChain.AppState:type_name -> google.protobuf.Any
	0,  // 9: abci.RequestQuery.RequestBase:type_name -> abci.RequestBase
	0,  // 10: abci.RequestBeginBlock.RequestBase:type_name -> abci.RequestBase
	35, // 11: abci.RequestBeginBlock.Header:type_name -> google.protobuf.Any
	30, // 12: abci.RequestBeginBlock.LastCommitInfo:type_name -> abci.LastCommitInfo
	0,  // 13: abci.RequestCheckTx.RequestBase:type_name -> abci.RequestBase
	0,  // 14: abci.RequestDeliverTx.RequestBase:type_name -> abci.RequestBase
	0,  // 15: abci.RequestEndBlock.RequestBase:type_name -> abci.RequestBase
	0,  // 16: abci.RequestCommit.RequestBase:type_name -> abci.RequestBase
	35, // 17: abci.ResponseBase.Error:type_name -> google.protobuf.Any
	35, // 18: abci.ResponseBase.Events:type_name -> google.protobuf.Any
	12, // 19: abci.ResponseException.ResponseBase:type_name -> abci.ResponseBase
	12, // 20: abci.ResponseEcho.ResponseBase:type_name -> abci.ResponseBase
	12, // 21: abci.ResponseFlush.ResponseBase:type_name -> abci.ResponseBase
	12, // 22: abci.ResponseInfo.ResponseBase:type_name -> abci.ResponseBase
	12, // 23: abci.ResponseSetOption.ResponseBase:type_name -> abci.ResponseBase
	12, // 24: abci.ResponseInitChain.ResponseBase:type_name -> abci.ResponseBase
	26, // 25: abci.ResponseInitChain.ConsensusParams:type_name -> abci.ConsensusParams
	29, // 26: abci.ResponseInitChain.Validators:type_name -> abci.ValidatorUpdate
	12, // 27: abci.ResponseQuery.ResponseBase:type_name -> abci.ResponseBase
	36, // 28: abci.ResponseQuery.Proof:type_name -> tm.Proof
	12, // 29: abci.ResponseBeginBlock.ResponseBase:type_name -> abci.ResponseBase
	12, // 30: abci.ResponseCheckTx.ResponseBase:type_name -> abci.ResponseBase
	12, // 31: abci.ResponseDeliverTx.ResponseBase:type_name -> abci.ResponseBase
	12, // 32: abci.ResponseEndBlock.ResponseBase:type_name -> abci.ResponseBase
	29, // 33: abci.ResponseEndBlock.ValidatorUpdates:type_name -> abci.ValidatorUpdate
	26, // 34: abci.ResponseEndBlock.ConsensusParams:type_name -> abci.ConsensusParams
	35, // 35: abci.ResponseEndBlock.Events:type_name -> google.protobuf.Any
	12, // 36: abci.ResponseCommit.ResponseBase:type_name -> abci.ResponseBase
	27, // 37: abci.ConsensusParams.Block:type_name -> abci.BlockParams
	28, // 38: abci.ConsensusParams.Validator:type_name -> abci.ValidatorParams
	35, // 39: abci.ValidatorUpdate.PubKey:type_name -> google.protobuf.Any
	31, // 40: abci.LastCommitInfo.Votes:type_name -> abci.VoteInfo
	34, // 41: abci.MockHeader.Time:type_name -> google.protobuf.Timestamp
	42, // [42:42] is the sub-list for method output_type
	42, // [42:42] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_abci_proto_init() }
func file_abci_proto_init() {
	if File_abci_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_abci_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestEcho); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestFlush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestSetOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestInitChain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestBeginBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestCheckTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestDeliverTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestEndBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestCommit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseException); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseEcho); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseFlush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseSetOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseInitChain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseBeginBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseCheckTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseDeliverTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseEndBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseCommit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsensusParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LastCommitInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_abci_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_abci_proto_goTypes,
		DependencyIndexes: file_abci_proto_depIdxs,
		MessageInfos:      file_abci_proto_msgTypes,
	}.Build()
	File_abci_proto = out.File
	file_abci_proto_rawDesc = nil
	file_abci_proto_goTypes = nil
	file_abci_proto_depIdxs = nil
}
