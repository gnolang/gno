# File managed by web3-bot. DO NOT EDIT.
# See https://github.com/protocol/.github/ for details.

on: [push, pull_request]
name: Go Test

jobs:
  unit:
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu", "windows", "macos" ]
        go: [ "1.17.x", "1.18.x" ]
    env:
      COVERAGES: ""
    runs-on: ${{ format('{0}-latest', matrix.os) }}
    name: ${{ matrix.os }} (go ${{ matrix.go }})
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - name: Go information
        run: |
          go version
          go env
      - name: Use msys2 on windows
        if: ${{ matrix.os == 'windows' }}
        shell: bash
        # The executable for msys2 is also called bash.cmd
        #   https://github.com/actions/virtual-environments/blob/main/images/win/Windows2019-Readme.md#shells
        # If we prepend its location to the PATH
        #   subsequent 'shell: bash' steps will use msys2 instead of gitbash
        run: echo "C:/msys64/usr/bin" >> $GITHUB_PATH
      - name: Run repo-specific setup
        uses: ./.github/actions/go-test-setup
        if: hashFiles('./.github/actions/go-test-setup') != ''
      - name: Run tests
        uses: protocol/multiple-go-modules@v1.2
        with:
          # Use -coverpkg=./..., so that we include cross-package coverage.
          # If package ./A imports ./B, and ./A's tests also cover ./B,
          # this means ./B's coverage will be significantly higher than 0%.
          run: go test -v -coverprofile=module-coverage.txt -coverpkg=./... ./...
      - name: Run tests (32 bit)
        if: ${{ matrix.os != 'macos' }} # can't run 32 bit tests on OSX.
        uses: protocol/multiple-go-modules@v1.2
        env:
          GOARCH: 386
        with:
          run: |
            export "PATH=${{ env.PATH_386 }}:$PATH"
            go test -v ./...
      - name: Run tests with race detector
        if: ${{ matrix.os == 'ubuntu' }} # speed things up. Windows and OSX VMs are slow
        uses: protocol/multiple-go-modules@v1.2
        with:
          run: go test -v -race ./...
      - name: Collect coverage files
        shell: bash
        run: echo "COVERAGES=$(find . -type f -name 'module-coverage.txt' | tr -s '\n' ',' | sed 's/,$//')" >> $GITHUB_ENV
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@f32b3a3741e1053eb607407145bc9619351dc93b # v2.1.0
        with:
          files: '${{ env.COVERAGES }}'
          env_vars: OS=${{ matrix.os }}, GO=${{ matrix.go }}
