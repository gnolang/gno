// change block avg time from 2s to 2.5s

// PKGPATH: gno.land/r/gnoswap/v1/gns_test
package gns_test

import (
	"std"
	"testing"

	"gno.land/p/demo/testutils"
	"gno.land/p/demo/uassert"

	"gno.land/p/gnoswap/consts"
	"gno.land/r/gnoswap/v1/gns"

	_ "gno.land/r/gnoswap/v1/emission"
	_ "gno.land/r/gnoswap/v1/staker"
)

var t *testing.T

var (
	user01Addr  = testutils.TestAddress("user01Addr")
	user01Realm = std.NewUserRealm(user01Addr)
)

func main() {
	skip50Blocks()
	blockTime2500ms()
	reachAlmostFirstHalving()
	reachExactFirstHalving()
	startSecondHalving()
}

func skip50Blocks() {
	std.TestSkipHeights(50)
	uassert.Equal(t, std.GetHeight(), int64(173))

	std.TestSetRealm(std.NewCodeRealm(consts.EMISSION_PATH))
	mintedAmount := gns.MintGns(user01Addr)
	uassert.Equal(t, uint64(713470300), mintedAmount) // 14269406 * 50
	uassert.Equal(t, uint64(713470300), gns.GetMintedEmissionAmount())
}

func blockTime2500ms() {
	std.TestSetRealm(std.NewUserRealm(consts.ADMIN))
	gns.SetAvgBlockTimeInMsByAdmin(2500)
	// for block time 2.5s, amount per block is 17836759

	// first halving year end block = 15768122
	// first halving year end timestamp = 1234567990

	// 50 block minted from L#38
	// > current height = 173
	// > current timestamp = 1234568140

	// 1266103890 - 1234567990 = 31535900 // timestamp left for current halving year
	// 31535900000 / 2500(new block avg time/ms) = 12614360 // number of block left for current halving year

	// 713470300 // already minted amount

	// first halving year should mint 225000000000000
	// 225000000000000 - 713470300 = 224999286529700
	// 224999286529700 / 12614360 = 17836759

	std.TestSetRealm(std.NewCodeRealm(consts.EMISSION_PATH))
	std.TestSkipHeights(1)
	mintedAmount := gns.MintGns(user01Addr)
	uassert.Equal(t, uint64(17836757), mintedAmount)
	uassert.Equal(t, uint64(713470300+17836757), gns.GetMintedEmissionAmount()) // 731307057
}

func reachAlmostFirstHalving() {

	firstEnds := gns.GetHalvingYearEndBlock(1)
	blockLeftUntilEnd := firstEnds - std.GetHeight()

	std.TestSkipHeights(blockLeftUntilEnd - 1) // 1 block left until first halving year ends
	std.TestSetRealm(std.NewCodeRealm(consts.EMISSION_PATH))
	gns.MintGns(user01Addr)

	uassert.Equal(t, uint64(224999969664063), gns.GetMintedEmissionAmount())
	// 224999969664063 - 731307057 = 224999238357006
	// 224999238357006 / 12614358 = 17836757
}

func reachExactFirstHalving() {
	std.TestSkipHeights(1)
	std.TestSetRealm(std.NewCodeRealm(consts.EMISSION_PATH))
	gns.MintGns(user01Addr)

	// minted all amount for first halving year
	uassert.Equal(t, uint64(225000000000000), gns.GetMintedEmissionAmount())

	year := gns.GetHalvingYearByHeight(std.GetHeight())
	uassert.Equal(t, int64(1), year)
}

func startSecondHalving() {
	std.TestSkipHeights(1)

	year := gns.GetHalvingYearByHeight(std.GetHeight())
	uassert.Equal(t, int64(2), year)

	amount := gns.GetAmountByHeight(std.GetHeight())
	uassert.Equal(t, uint64(14269406), amount)

	std.TestSetRealm(std.NewCodeRealm(consts.EMISSION_PATH))
	gns.MintGns(user01Addr)
	uassert.Equal(t, uint64(225000000000000+14269406), gns.GetMintedEmissionAmount())
}
