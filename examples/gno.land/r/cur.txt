in /r:  grep -rn --include="*.gno"  --exclude="*_test.gno" --exclude="*_filetest.gno" -E 'func [A-Z][A-Za-z0-9_]*\(' . \
         | grep -v -E 'func [A-Z][A-Za-z0-9_]*\s*\(\s*cur\s+realm' > cur.txt


./nt/commondao/options.gno:55:func AllowListing(allow bool) Option {
./nt/commondao/options.gno:62:func AllowRender(allow bool) Option {
./nt/commondao/options.gno:69:func AllowChildren(allow bool) Option {
./nt/commondao/options.gno:76:func AllowVoting(allow bool) Option {
./nt/commondao/options.gno:83:func AllowExecution(allow bool) Option {
./nemanya/home/home.gno:139:func UpdateLink(name, newURL string) {
./nemanya/home/home.gno:154:func UpdateAboutMe(text string) {
./nemanya/home/home.gno:162:func AddGnoProject(name, description, url, imageURL string) {
./nemanya/home/home.gno:176:func DeleteGnoProject(projectName string) {
./nemanya/home/home.gno:188:func AddOtherProject(name, description, url, imageURL string) {
./nemanya/home/home.gno:202:func RemoveOtherProject(projectName string) {
./nemanya/home/home.gno:218:func SponsorGnoProject(projectName string) {
./nemanya/home/home.gno:241:func SponsorOtherProject(projectName string) {
./nemanya/home/home.gno:264:func Withdraw() string {
./nemanya/config/config.gno:28:func SetAddress(a std.Address) error {
./nemanya/config/config.gno:41:func SetBackup(a std.Address) error {
./leon/hor/datasource.gno:11:func NewDatasource() Datasource {
./agherasie/forms/forms.gno:19:func CreateForm(title string, description string, openAt string, closeAt string, data string) string {
./agherasie/forms/forms.gno:93:func SubmitForm(formID string, answers string) {
./docs/buttons/buttons.gno:15:func UpdateMOTD(newmotd string) {
./docs/adder/adder.gno:17:func Add(n int) {
./docs/complexargs/complexargs.gno:24:func SetSlice(newSlice []int) {
./docs/complexargs/complexargs.gno:29:func SetMyObject(newCoolObject CustomType) {
./sys/users/admin.gno:19:func ProposeNewController(addr std.Address) dao.ProposalRequest {
./sys/users/admin.gno:28:func ProposeControllerRemoval(addr std.Address) dao.ProposalRequest {
./sys/users/admin.gno:37:func ProposeControllerAdditionAndRemoval(toAdd, toRemove std.Address) dao.ProposalRequest {
./sys/users/users.gno:10:func ResolveName(name string) (data *UserData, isCurrent bool) {
./sys/users/users.gno:25:func ResolveAddress(addr std.Address) *UserData {
./sys/users/users.gno:41:func ResolveAny(input string) (*UserData, bool) {
./sys/users/users.gno:51:func GetReadonlyAddrStore() *rotree.ReadOnlyTree {
./sys/users/users.gno:56:func GetReadOnlyNameStore() *rotree.ReadOnlyTree {
./sys/users/errors.gno:33:func NewErrNotWhitelisted() ErrNotWhitelisted {
./sys/params/unlock.gno:12:func ProposeUnlockTransferRequest() dao.ProposalRequest {
./sys/params/unlock.gno:16:func ProposeLockTransferRequest() dao.ProposalRequest {
./sys/params/params.gno:32:func NewSysParamStringPropRequest(module, submodule, name, value string) dao.ProposalRequest {
./sys/params/params.gno:40:func NewSysParamInt64PropRequest(module, submodule, name string, value int64) dao.ProposalRequest {
./sys/params/params.gno:48:func NewSysParamUint64PropRequest(module, submodule, name string, value uint64) dao.ProposalRequest {
./sys/params/params.gno:56:func NewSysParamBoolPropRequest(module, submodule, name string, value bool) dao.ProposalRequest {
./sys/params/params.gno:64:func NewSysParamBytesPropRequest(module, submodule, name string, value []byte) dao.ProposalRequest {
./sys/params/params.gno:72:func NewSysParamStringsPropRequest(module, submodule, name string, value []string) dao.ProposalRequest {
./sys/params/params.gno:80:func NewSysParamStringsPropRequestWithTitle(module, submodule, name, title string, value []string) dao.ProposalRequest {
./sys/validators/v2/poc.gno:15:func NewPropRequest(changesFn func() []validators.Validator, title, description string) dao.ProposalRequest {
./stefann/registry/registry.gno:31:func SetMainAddr(addr std.Address) error {
./stefann/registry/registry.gno:42:func SetBackupAddr(addr std.Address) error {
./miko/calculator/calculator.gno:164:func ComputeResult(expression string) string {
./jjoptimist/home/config.gno:27:func UpdateConfig(newTitle, newDescription, newGithub string) {
./jaekwon/dao/dao.gno:14:func DAOName(name string, i int) string {
./morgan/chess/time.gno:18:func NewTimeControl(seconds, incr int) *TimeControl {
./gnoland/blog/admin.gno:26:func AdminSetAdminAddr(_ realm, addr std.Address) {
./gnoland/blog/admin.gno:31:func AdminSetInPause(_ realm, state bool) {
./gnoland/blog/admin.gno:36:func AdminAddModerator(_ realm, addr std.Address) {
./gnoland/blog/admin.gno:41:func AdminRemoveModerator(_ realm, addr std.Address) {
./gnoland/blog/admin.gno:46:func NewPostProposalRequest(_ realm, slug, title, body, publicationDate, authors, tags string) dao.ProposalRequest {
./gnoland/blog/admin.gno:64:func ModAddPost(_ realm, slug, title, body, publicationDate, authors, tags string) {
./gnoland/blog/admin.gno:85:func ModEditPost(_ realm, slug, title, body, publicationDate, authors, tags string) {
./gnoland/blog/admin.gno:94:func ModRemovePost(_ realm, slug string) {
./gnoland/blog/admin.gno:99:func ModAddCommenter(_ realm, addr std.Address) {
./gnoland/blog/admin.gno:104:func ModDelCommenter(_ realm, addr std.Address) {
./gnoland/blog/admin.gno:109:func ModDelComment(_ realm, slug string, index int) {
./gnoland/blog/gnoblog.gno:14:func AddComment(_ realm, postSlug, comment string) {
./gnoland/blog/gnoblog.gno:31:func PostExists(slug string) bool {
./gnoland/ghverify/contract.gno:104:func SetOwner(owner std.Address) {
./gnoland/users/v1/admin.gno:37:func NewSetPausedExecutor(newPausedValue bool) dao.ProposalRequest {
./gnoland/users/v1/admin.gno:51:func ProposeNewName(addr std.Address, newName string) dao.ProposalRequest {
./gnoland/users/v1/admin.gno:74:func ProposeDeleteUser(addr std.Address, desc string) dao.ProposalRequest {
./gnoland/users/v1/admin.gno:90:func ProposeNewRegisterPrice(newPrice int64) dao.ProposalRequest {
./gnoland/users/users.gno:31:func ProposeNewRelease(newVerPkgPath, note string) dao.ProposalRequest {
./gnoland/valopers/admin.gno:11:func Auth() *authz.Authorizer {
./gnoland/valopers/admin.gno:37:func NewInstructionsProposalCallback(newInstructions string) func() error {
./gnoland/valopers/admin.gno:46:func NewMinFeeProposalCallback(newMinFee int64) func() error {
./gnoland/events/events.gno:48:func AddEvent(name, description, link, location, startTime, endTime string) (string, error) {
./gnoland/events/events.gno:87:func DeleteEvent(id string) {
./gnoland/events/events.gno:105:func EditEvent(id string, name, description, link, location, startTime, endTime string) {
./gnoland/pages/admin.gno:21:func AdminSetAdminAddr(addr std.Address) {
./gnoland/pages/admin.gno:26:func AdminSetInPause(state bool) {
./gnoland/pages/admin.gno:31:func AdminAddModerator(addr std.Address) {
./gnoland/pages/admin.gno:36:func AdminRemoveModerator(addr std.Address) {
./gnoland/pages/admin.gno:41:func ModAddPost(slug, title, body, publicationDate, authors, tags string) {
./gnoland/pages/admin.gno:52:func ModEditPost(slug, title, body, publicationDate, authors, tags string) {
./x/benchmark/storage/forum.gno:26:func AddPost(title, content string) {
./x/nir1218_evaluation_proposal/contribution.gno:29:func NewContribution(id int, contributor std.Address) *Contribution {
./x/nir1218_evaluation_proposal/points.gno:9:func NewPoints(t int64, f map[string]int32) Points {
./x/nir1218_evaluation_proposal/pull_request.gno:21:func NewPullRequest(id int, name string, description string, status string, category string) *PullRequest {
./x/nir1218_evaluation_proposal/evaluation.gno:19:func NewEvalutaion() *Evaluation {
./x/nir1218_evaluation_proposal/vote.gno:15:func NewVote(voter std.Address, option string) Vote {
./x/nir1218_evaluation_proposal/category.gno:15:func NewCategory(name string, criteria []string) *Category {
./x/nir1218_evaluation_proposal/committee.gno:18:func NewCommittee() *Committee {
./x/map_delete/map_delete.gno:11:func DeleteMap(k uint64) {
./gov/dao/types.gno:35:func NewProposalRequest(title string, description string, executor Executor) ProposalRequest {
./gov/dao/types.gno:43:func NewProposalRequestWithFilter(title string, description string, executor Executor, filter Filter) ProposalRequest {
./gov/dao/types.gno:112:func NewProposals() *Proposals {
./gov/dao/types.gno:142:func NewSimpleExecutor(callback func() error, description string) *SimpleExecutor {
./gov/dao/types.gno:164:func NewSafeExecutor(e Executor) *SafeExecutor {
./gov/dao/v3/impl/govdao.gno:19:func NewGovDAO() *GovDAO {
./gov/dao/v3/impl/types.gno:25:func NewProposalsStatuses() ProposalsStatuses {
./gov/dao/v3/impl/types.gno:166:func StringifyVotes(ps *proposalStatus) string {
./gov/dao/v3/impl/types.gno:204:func StringifyProposal(p *dao.Proposal) string {
./gov/dao/v3/impl/render.gno:20:func NewRender(d *GovDAO) *render {
./gov/dao/v3/impl/impl.gno:24:func AddMember(addr std.Address) {
./gov/dao/v3/impl/prop_requests.gno:29:func NewUpgradeDaoImplRequest(newDao dao.DAO, realmPkg, reason string) dao.ProposalRequest {
./gov/dao/v3/impl/prop_requests.gno:118:func NewPromoteMemberRequest(addr std.Address, fromTier string, toTier string) dao.ProposalRequest {
./gov/dao/v3/init/init.gno:11:func Init() {
./gov/dao/v3/init/init.gno:21:func InitWithUsers(addrs ...std.Address) {
./gov/dao/v3/memberstore/types.gno:35:func NewMembersByTier() MembersByTier {
./gov/dao/v3/memberstore/prop_requests.gno:9:func NewChangeTiersRequest(tiers TiersByName) dao.ProposalRequest {
