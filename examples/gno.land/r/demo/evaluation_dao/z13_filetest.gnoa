package main

import (
	"std"
	"gno.land/r/demo/foo_governor"
	"gno.land/p/demo/governance/governor"
	"gno.land/p/demo/testutils"
	"gno.land/p/demo/ufmt"
)

// quorum test
func main() {
		banker := std.GetBanker(std.BankerTypeReadonly)
		test1 := testutils.TestAddress("test1")
		println("test1:", test1)
		test2 := testutils.TestAddress("test2")
		println("test2:", test2)
		println("============================")
	
		std.TestSetOrigCaller(test1)
		// mint
		println("mint")
		foo_governor.Mint(test1, 1000)
		foo_governor.Mint(test2, 10000)
		totalSupply := foo_governor.TotalSupply()
		println("total supply:", totalSupply)
	
		// balance of
		balance, err := foo_governor.BalanceOf(test1)
		if err != nil{
			println("balance of test1 is :", balance)
		}

		std.TestSkipHeights(1)		//skip 1 step, we can only get vote from past block
	
		// getVote
		height := std.GetHeight()
		println("height is:", height)
		votes_test1 := foo_governor.GetVotes(test1, height - 1)
		println(ufmt.Sprintf("test1 votes at block: %d is %d: ", height - 1, votes_test1))

		// set voting delay, override default settings
		foo_governor.SetVotingDelay(14)
	
		// Propose
		var tfs []string
		var cfs []string
		tfs = append(tfs, "https://test2.gno.land/r/users/users.gno")
		cfs = append(cfs, "https://test2.gno.land/r/boards/misc.gno")
		proposal := &governor.Proposal{
			TargetFiles: tfs,
			CallFiles: cfs,
		}
		proposalId := foo_governor.Propose(proposal)
	
		println("before voting----------------------------------")
		println("proposal RenderHome:", foo_governor.RenderHome(proposalId))

		// deposit from bank
		bankAddr := std.TestDerivePkgAddr("gno.land/r/demo/banktest")
		println("bankAddr: ", bankAddr)
		// target 
		govAddr := std.TestDerivePkgAddr("gno.land/p/demo/governance")
		println("govAddr: ", govAddr)

		std.TestSetOrigPkgAddr(bankAddr)
		std.TestIssueCoins(bankAddr, std.Coins{{"ugnot", 64000000}})
		bankBal := banker.GetCoins(bankAddr)
		println("bankBal before deposit is :", bankBal)
		std.TestSetOrigSend(std.Coins{{"ugnot", 64000000}}, std.Coins{{"ugnot", 0}})	
	
		foo_governor.Deposit(proposalId)
	
		println("after deposit ----------------------------------")
		bankBal = banker.GetCoins(bankAddr)
		println("bankBal after deposit is :", bankBal)

		govbal := banker.GetCoins(govAddr)
		println("govAddr:", govAddr)
		println("govbal after deposit is :", govbal)

		println("proposal RenderHome:", foo_governor.RenderHome(proposalId))

		println("skip current block")
		std.TestSkipHeights(1)
		println(std.GetHeight())

		// vote
		weight := foo_governor.CastVote(proposalId, governor.For)
	
		println("voted----------------------------------")
		println("weight is: ", weight)
		println("proposal RenderHome:", foo_governor.RenderHome(proposalId))
	
		// check result
		std.TestSkipHeights(5)		
		println("after voting period ----------------------------------")
		println("proposal RenderHome:", foo_governor.RenderHome(proposalId))
		
		println("bankBal balance before unDeposit:", banker.GetCoins(bankAddr))
		std.TestSetOrigPkgAddr(govAddr)
		// unDeposit
		err = foo_governor.UnDeposit(proposalId)
		if err != nil {
			println(err)
		}
		println("bankBal balance after unDeposit:", banker.GetCoins(bankAddr))
		println("govBal balance after unDeposit:", banker.GetCoins(govAddr))
}

// Output:
// test1: g1w3jhxap3ta047h6lta047h6lta047h6l4mfnm7
// test2: g1w3jhxapjta047h6lta047h6lta047h6laqcyu4
// ============================
// mint
// total supply: 11000
// height is: 124
// test1 votes at block: 123 is 1000:
// done propose
// before voting----------------------------------
// proposal RenderHome: * **Proposal state is***: Pending
// * **Proposal snapShot is***: 138
// * **Proposal deadLine is***: 143
// * **Proposal deposit is***: 0ugnot
//
// bankAddr:  g1dv3435088tlrgggf745kaud0ptrkc9v42k8llz
// govAddr:  g1rt3hdg26jcuup3v5pw95zmk8pv45qscjnwf8xt
// bankBal before deposit is : 64000000ugnot
// pkgaddr:  g1dv3435088tlrgggf745kaud0ptrkc9v42k8llz
// after deposit ----------------------------------
// bankBal after deposit is :
// govAddr: g1rt3hdg26jcuup3v5pw95zmk8pv45qscjnwf8xt
// govbal after deposit is : 64000000ugnot
// proposal RenderHome: * **Proposal state is***: Pending
// * **Proposal snapShot is***: 124
// * **Proposal deadLine is***: 129
// * **Proposal deposit is***: 64000000ugnot
//
// skip current block
// 125
// voted----------------------------------
// weight is:  1000
// proposal RenderHome: * **Proposal state is***: Active
// * **Proposal snapShot is***: 124
// * **Proposal deadLine is***: 129
// * **Proposal deposit is***: 64000000ugnot
//
// after voting period ----------------------------------
// proposal RenderHome: * **Proposal state is***: 8
// * **Proposal snapShot is***: 124
// * **Proposal deadLine is***: 129
// * **Proposal deposit is***: 64000000ugnot
//
// bankBal balance before unDeposit:
// quorum not reach, going to burn
// 64000000ugnot
// caller:  g1dv3435088tlrgggf745kaud0ptrkc9v42k8llz
// amount:  64000000ugnot
// bankBal balance after unDeposit:
// govBal balance after unDeposit: