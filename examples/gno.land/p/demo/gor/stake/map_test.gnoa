package stake

import 	"testing"


type Pair map[string]string

type S struct{
	name string
}

func Test(t *testing.T) {
	checkMap(t)
	checkStruct(t)
}

func checkSliceIndex(t *testing.T){
	t.Helper()

	s := []string{"a", "b"}

	println(s[0])
	for i, v := range s{
		println(i)
		println(v)
	}
}

func checkStruct(t *testing.T){
	t.Helper()
	s := S{
		name: "kimi",
	}
	println(s.name)

	var s1 interface{}
	s1 = s

	s2 := s1.(S)
	println(s2.name)
}

func checkMap(t *testing.T) {
	t.Helper()

	var p2 = make(map[string]string)
	p2["name"] = "maxwell"

	if _, ok := p2["name"];ok{
		println(ok)
	}

	var p1 = make(Pair)

	p1["name"] = "maxwell"
	println(p1["name"])

	if _, ok := p1["name"]; ok{
		println(ok)
	}	

	// println(p1["kimi"]["age"])

	// var p2 interface{}
	// p2 = p1

	// p3 := p2.(Pair)
	// if _, ok := p3["name"];ok{
	// 	println("ok")
	// }
	// println(p3["name"])

	// t.Errorf("error")
}
