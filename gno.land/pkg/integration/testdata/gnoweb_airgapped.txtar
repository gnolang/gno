# This test ensures that the "full security with airgap" commands, on gnoweb's
# help page, work as intended.

# load the package from $WORK directory
loadpkg gno.land/r/demo/echo

# start the node
gnoland start

# Query account
gnokey query auth/accounts/${USER_ADDR_test1}
stdout 'height: 0'
stdout 'data: {'
stdout '  "BaseAccount": {'
stdout '    "address": "g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5",'
stdout '    "coins": "[0-9]*ugnot",' # dynamic
stdout '    "public_key": {'
stdout '      "@type": "/tm.PubKeySecp256k1",'
stdout '      "value": "A\+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"'
stdout '    },'
stdout '    "account_number": "0",'
stdout '    "sequence": "4"'
stdout '  }'
stdout '}'
! stderr '.+' # empty

# Create transaction
gnokey maketx call -pkgpath "gno.land/r/demo/echo" -func "Render" -gas-fee 1000000ugnot -gas-wanted 2000000 -send "" -args "HELLO" test1
cp stdout call.tx

# Sign
gnokey sign -tx-path $WORK/call.tx -chainid "tendermint_test" -account-number 0 -account-sequence 4 test1
cmpenv stdout sign.stdout.golden

gnokey broadcast $WORK/call.tx
stdout '("HELLO" string)'
stdout 'GAS WANTED: 2000000'

-- sign.stdout.golden --

Tx successfully signed and saved to $WORK/call.tx
