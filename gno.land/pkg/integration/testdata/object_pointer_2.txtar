# Load the packages and start the node
loadpkg gno.land/r/testing/ext_realm $WORK/ext_realm
loadpkg gno.land/r/testing/caller_realm $WORK/caller_realm
gnoland start

gnokey maketx call -pkgpath gno.land/r/testing/caller_realm -func SaveObject -gas-fee 1000000ugnot -gas-wanted 14000000 -broadcast -chainid=tendermint_test test1
stdout 'OK!'
gnokey maketx call -pkgpath gno.land/r/testing/caller_realm -func Mutate -args "hello" -gas-fee 1000000ugnot -gas-wanted 14000000 -broadcast -chainid=tendermint_test test1
stdout 'OK!'
stdout '("reply from ext realm" string)'


-- ext_realm/ext_realm.gno --
package ext_realm

var Object any

func SetObject(cur realm, o any){
	Object = o
}

func Print() string{
	return "reply from ext realm"	
}


-- caller_realm/caller_realm.gno --
package caller_realm

import (
	ext_realm "gno.land/r/testing/ext_realm"
)


type PkgObject struct {
	value string
}

var callerPtr *PkgObject

func (o *PkgObject) Mutate(newVal string) {
	o.value = newVal
}

func SaveObject(cur realm) {
	ptr := &PkgObject{
		value: "A",
	}
	ext_realm.SetObject(cross, ptr) // GetPackage, cache will be cleared before next tx.
	callerPtr = ptr
}

func Mutate(cur realm, value string) string {
	callerPtr.Mutate(value) // borrow, fill package fully.
	return ext_realm.Print()  // get package value from cache.
}