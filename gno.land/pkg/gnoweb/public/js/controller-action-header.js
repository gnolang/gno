import{BaseController as r,debounce as c}from"./controller.js";var o={Fast:"fast",Secure:"secure"},a=class extends r{connect(){this.on("controllers:ready",()=>{this._restoreMode(),this._restoreAddress()})}restoreValue(t,e,s){if(e){let d=localStorage.getItem(t);d&&(e.value=d,s(d))}}_restoreMode(){let t=this.getTarget("mode");this.restoreValue("actionCmdMode",t,e=>{(e===o.Fast||e===o.Secure)&&this.dispatch("mode:changed",{mode:e})})}_restoreAddress(){let t=this.getTarget("address");this.restoreValue("actionAddressInput",t,e=>{this.dispatch("address:changed",{address:e})})}_debouncedAddressUpdate=c(t=>{let e=t.value;localStorage.setItem("actionAddressInput",e),this.dispatch("address:changed",{address:e})},50);updateMode(t){let s=t.target.value;localStorage.setItem("actionCmdMode",s),this.dispatch("mode:changed",{mode:s})}updateAddress(t){let e=t.target;this._debouncedAddressUpdate(e)}};export{a as ActionHeaderController,o as ActionModeValues};
