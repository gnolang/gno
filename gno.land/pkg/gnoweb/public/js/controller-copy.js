import{BaseController as c}from"./controller.js";var s=class a extends c{static FEEDBACK_DELAY=750;isAnimationRunning=!1;btnClicked=null;connect(){}_sanitizeContent(t,e=!1){let i=t.innerHTML.replace(/<span[^>]*class="chroma-ln"[^>]*>[\s\S]*?<\/span>/g,""),n=document.createElement("div");n.innerHTML=i;let o=n.textContent?.trim()||"";return e&&(o=o.split(`
`).filter(l=>{let r=l.trim();return r&&!r.match(/^[#/*]/)}).join(`
`)),o}_toggleIcons(t){t.forEach(e=>{e.classList.toggle("u-hidden")})}_showFeedback(t){!this.btnClicked||this.isAnimationRunning===!0||(this.isAnimationRunning=!0,this._toggleIcons(t),window.setTimeout(()=>{this._toggleIcons(t),this.isAnimationRunning=!1},a.FEEDBACK_DELAY))}async _writeToClipboard(t,e){if(!navigator.clipboard){console.error("Copy: Clipboard API is not supported in this browser."),this._showFeedback(e);return}try{await navigator.clipboard.writeText(t),this._showFeedback(e)}catch(i){console.error("Copy: Error while copying text.",i),this._showFeedback(e)}}async _copyTextToClipboard(t,e){let i=t.trim();await this._writeToClipboard(i,e)}async _copyToClipboard(t,e,i=!1){let n=this._sanitizeContent(t,i);await this._writeToClipboard(n,e)}copy(t){if(this.btnClicked=t.currentTarget,this.isAnimationRunning)return;let e=this.getTargets("icon"),i=Array.from(e);if(this.getValue("text")){this._copyTextToClipboard(this.getValue("text"),i);return}if(this.getValue("remote")){let n=this.getGlobalTarget(this.getValue("remote"));if(!n){console.warn(`Copy: No target found for "${this.getValue("remote")}".`);return}let o=this.hasValue("clean");this._copyToClipboard(n,i,o);return}console.warn("Copy: No content to copy found on the button.")}};export{s as CopyController};
