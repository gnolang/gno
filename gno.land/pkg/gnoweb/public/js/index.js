function b(i){return i.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}function M(i){return i=i.replace(/-([a-z])/g,(m,p)=>p.toUpperCase()),i.charAt(0).toLowerCase()+i.slice(1)}(()=>{let i="/public/js/controller-",m=new Map,p=async(e,o)=>{if(o.length===0)return;let l=b(e);if(!/^[a-z0-9-]+$/.test(l)){console.error(`\u274C Invalid controller name: ${e}`);return}let d=M(e),c=d.charAt(0).toUpperCase()+d.slice(1),a=`${i}${l}.js`,s=m.get(a);s||(s=import(a),m.set(a,s));let t;try{t=await s}catch(n){m.delete(a),console.error(`\u274C Failed to load ${a}:`,n);return}let r,f=t.default;if(typeof f=="function")r=/^\s*class\b/.test(Function.prototype.toString.call(f))?u=>new f(u):f;else{let n=t[`${c}Controller`];n&&(r=u=>new n(u))}if(typeof r!="function"){console.error(`\u274C Invalid controller export for ${e}. Expected default or named class "${c}Controller"`);return}let h=`data-controller-initialized-${l}`,g=o.filter(n=>!n.hasAttribute(h));g.length!==0&&g.forEach(n=>{try{r(n),n.setAttribute(h,"1")}catch(u){console.error(`\u274C Controller runtime error for ${e}:`,u,n)}})},L=e=>{let o=new Map;return e.querySelectorAll("[data-controller]").forEach(l=>{let d=l.getAttribute("data-controller");d&&d.split(/\s+/).filter(Boolean).forEach(c=>{let a=o.get(c)||[];a.push(l),o.set(c,a)})}),o},T=async()=>{let e=L(document);e.size!==0&&(await Promise.all(Array.from(e.entries()).map(([o,l])=>p(o,l))),document.dispatchEvent(new CustomEvent("controllers:ready",{detail:{names:Array.from(e.keys())}})))},v=()=>{let e=new Map,o=!1,l=()=>{if(o=!1,e.size===0)return;let s=[];for(let[t,r]of e)s.push(p(t,[...r]));e.clear(),Promise.all(s).catch(t=>console.error("Observer batch error:",t))},d=()=>{o||(o=!0,queueMicrotask(l))},c=s=>{if(!s.querySelector?.("[data-controller]"))return;let t=L(s);for(let[r,f]of t){let g=`data-controller-initialized-${b(r)}`,n=f.filter(E=>!E.hasAttribute(g));if(n.length===0)continue;let u=e.get(r)??new Set;n.forEach(E=>u.add(E)),e.set(r,u)}t.size&&d()};new MutationObserver(s=>{for(let t of s)t.type==="childList"?t.addedNodes.forEach(r=>{r.nodeType===1&&c(r)}):t.type==="attributes"&&t.target instanceof HTMLElement&&c(t.target)}).observe(document.documentElement,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["data-controller"]})};document.addEventListener("DOMContentLoaded",async()=>{await T(),v()})})();
