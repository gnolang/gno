@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 900;
  font-display: swap;
  src: url("./fonts/roboto/roboto-mono-normal.woff2") format("woff2"),
    url("./fonts/roboto/roboto-mono-normal.woff") format("woff");
}

@font-face {
  font-family: "Inter var";
  font-weight: 100 900;
  font-display: block;
  font-variant: normal;
  font-style: oblique 0deg 10deg;
  src: url("./fonts/intervar/Intervar.woff2") format("woff2");
}

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    @apply font-interVar text-gray-600 bg-light text-200;
    font-feature-settings: "kern" on, "liga" on, "calt" off, "zero" on;
    -webkit-font-feature-settings: "kern" on, "liga" on, "calt" off, "zero" on;
    text-size-adjust: 100%;
    -moz-osx-font-smoothing: grayscale;
    font-smoothing: antialiased;
    font-variant-ligatures: contextual common-ligatures;
    font-kerning: normal;
    text-rendering: optimizeLegibility;
  }

  svg {
    @apply max-w-full max-h-full;
  }

  form {
    @apply my-0;
  }

  .realm-view {
    @apply text-200 break-words;
  }

  .realm-view > *:first-child:not(.realm-view__btns),
  .realm-view > .realm-view__btns:first-child + * {
    @apply !mt-0;
  }

  .realm-view a {
    @apply relative text-green-600 font-medium hover:underline;
  }

  .realm-view h1,
  .realm-view h2,
  .realm-view h3,
  .realm-view h4 {
    @apply text-gray-900 mt-8 md:mt-12 leading-tight;
  }

  .realm-view h2,
  .realm-view h2 * {
    @apply font-bold;
  }

  .realm-view h3,
  .realm-view h3 *,
  .realm-view h4,
  .realm-view h4 * {
    @apply font-semibold;
  }

  .realm-view h1 + h2,
  .realm-view h2 + h3,
  .realm-view h3 + h4 {
    @apply mt-4;
  }

  .realm-view h1 {
    @apply text-700 md:text-800 font-bold;
  }

  .realm-view h2 {
    @apply text-500 md:text-600;
  }

  .realm-view h3 {
    @apply text-300 md:text-400 text-gray-600 mt-10;
  }

  .realm-view h4 {
    @apply text-200 md:text-300 text-gray-600 font-medium my-6;
  }

  .realm-view p {
    @apply my-5;
  }

  .realm-view strong {
    @apply font-bold text-gray-900;
  }

  .realm-view strong * {
    @apply font-bold;
  }

  .realm-view em {
    @apply italic-subtle;
  }

  .realm-view blockquote {
    @apply border-l-4 border-gray-300 pl-4 text-gray-600 italic-subtle my-4;
  }

  .realm-view ul,
  .realm-view ol {
    @apply pl-4 my-6;
  }

  .realm-view ul li,
  .realm-view ol li {
    @apply mb-2;
  }

  .realm-view img {
    @apply max-w-full my-8 border border-gray-100 select-none rounded;
  }

  .realm-view figure {
    @apply my-6 text-center;
  }

  .realm-view figcaption {
    @apply text-100 text-gray-600;
  }

  .realm-view :not(pre) > code {
    @apply bg-gray-100 px-1 py-0.5 rounded-sm text-[.96em] font-mono;
  }

  .realm-view pre {
    @apply bg-gray-50 p-4 my-5 rounded overflow-x-auto font-mono;
  }

  .realm-view hr {
    @apply border-t border-gray-100 my-10;
  }

  .realm-view table {
    @apply my-8 block w-full max-w-full overflow-x-auto border-collapse;
  }

  .realm-view th,
  .realm-view td {
    @apply border px-4 py-2 break-words whitespace-normal;
  }

  .realm-view th {
    @apply bg-gray-100 font-bold;
  }

  .realm-view caption {
    @apply mt-2 text-100 text-gray-600 text-left;
  }

  .realm-view q {
    @apply quotes;
  }

  .realm-view q::before {
    content: open-quote;
  }

  .realm-view q::after {
    content: close-quote;
  }

  .realm-view ul ul,
  .realm-view ul ol,
  .realm-view ol ul,
  .realm-view ol ol {
    @apply my-2 pl-4;
  }

  .realm-view ul {
    @apply list-disc;
  }

  .realm-view ol {
    @apply list-decimal;
  }

  .realm-view abbr[title] {
    @apply border-b border-dotted cursor-help;
  }

  .realm-view details {
    @apply my-5;
  }

  .realm-view summary {
    @apply font-bold cursor-pointer;
  }

  .realm-view a code {
    @apply text-inherit;
  }

  .realm-view video {
    @apply max-w-full my-8;
  }

  .realm-view math {
    @apply font-mono;
  }

  .realm-view small {
    @apply text-100;
  }

  .realm-view del {
    @apply line-through;
  }

  .realm-view sub {
    @apply text-50 align-sub;
  }

  .realm-view sup {
    @apply text-50 align-super;
  }

  .realm-view input,
  .realm-view button {
    @apply px-4 py-2 border border-gray-300;
  }

  main :is(h1, h2, h3, h4) {
    @apply scroll-mt-24;
  }

  ::-moz-selection {
    @apply bg-green-600 text-light;
  }
  ::selection {
    @apply bg-green-600 text-light;
  }

  /* MD components */
  /* Columns */
  .realm-view .gno-columns {
    @apply flex flex-wrap gap-x-10 xxl:gap-x-12;
  }
  .realm-view .gno-columns > * {
    @apply grow shrink basis-52 lg:basis-44;
  }

  /* Alert */
  .realm-view .gno-alert {
    @apply border-l-4 border-l-gray-300 px-4 py-3 text-gray-600 rounded my-10;
  }
  .realm-view .gno-alert > div > *:first-child {
    @apply mt-2;
  }
  .realm-view .gno-alert > div > *:last-child {
    @apply mb-0;
  }
  .realm-view .gno-alert > summary {
    @apply flex items-center gap-x-2 my-2 font-bold list-none;
  }
  .realm-view .gno-alert > summary svg {
    @apply h-6 w-6;
  }
  .realm-view .gno-alert > summary svg:last-of-type {
    @apply h-4 w-4 ml-auto -rotate-90;
  }
  .realm-view .gno-alert[open] > summary svg:last-of-type {
    @apply rotate-0;
  }

  .realm-view .gno-alert > summary::marker,
  .realm-view .gno-alert > summary::-webkit-details-marker {
    @apply hidden;
  }

  .realm-view .gno-alert .gno-alert {
    @apply mt-5;
  }

  /* Alert variants */
  .realm-view .gno-alert-info {
    @apply border-l-gray-600 bg-gray-600/10 text-gray-900;
  }
  .realm-view .gno-alert-info summary svg,
  .realm-view .gno-alert-info a {
    @apply text-gray-600;
  }

  .realm-view .gno-alert-note {
    @apply border-l-blue-600 bg-blue-600/10 text-blue-900;
  }
  .realm-view .gno-alert-note summary svg,
  .realm-view .gno-alert-note a {
    @apply text-blue-600;
  }

  .realm-view .gno-alert-success {
    @apply border-l-green-600 bg-green-600/10 text-green-900;
  }
  .realm-view .gno-alert-success summary svg,
  .realm-view .gno-alert-success a {
    @apply text-green-600;
  }

  .realm-view .gno-alert-warning {
    @apply border-l-yellow-600 bg-yellow-600/10 text-yellow-900;
  }
  .realm-view .gno-alert-warning summary svg,
  .realm-view .gno-alert-warning a {
    @apply text-yellow-600;
  }

  .realm-view .gno-alert-caution {
    @apply border-l-red-600 bg-red-600/10 text-red-900;
  }
  .realm-view .gno-alert-caution summary svg,
  .realm-view .gno-alert-caution a {
    @apply text-red-600;
  }

  .realm-view .gno-alert-tip {
    @apply border-l-purple-600 bg-purple-600/10 text-purple-900;
  }
  .realm-view .gno-alert-tip summary svg,
  .realm-view .gno-alert-tip a {
    @apply text-purple-600;
  }

  *:empty + .prev-empty {
    display: none;
  }

  .realm-view:has(.realm-view__btns:only-child) {
    @apply hidden;
  }
  .realm-view__btns:only-child {
    @apply hidden;
  }
}

@layer components {
  /* header */
  .sidemenu .peer:checked + label > svg {
    @apply text-green-600;
  }

  /* filter */
  .filter-list :is(li, article) {
    @apply hidden;
  }

  .filter-list:has(input[value="packages"]:checked) :is(li, article) {
    @apply flex;
  }

  .filter-list:has(input[value="realms"]:checked)
    :is(li[data-type="realm"], article[data-type="realm"]) {
    @apply flex;
  }

  .filter-list:has(input[value="pures"]:checked)
    :is(li[data-type="pure"], article[data-type="pure"]) {
    @apply flex;
  }

  .filter-list label:has(input:checked) {
    @apply text-gray-600;
  }

  .filter-list label:has(input:checked)::after {
    @apply absolute content-[''] -bottom-2 left-0 w-full h-1 bg-green-600 rounded-t-sm;
  }

  .range {
    @apply grid grid-cols-1 gap-2;
  }

  .range::before {
    @apply hidden col-span-full text-200 font-bold text-gray-600 pt-2 pb-2 w-full text-center;
  }
  .range::after {
    @apply hidden col-span-full text-100 pb-2 w-full text-center;
    content: "Add a package to your namespace to get started";
  }

  .range:empty::before {
    @apply block;
    content: "No packages found";
  }

  .range:empty::after {
    @apply block;
    content: "Add a package to your namespace to get started";
  }

  .filter-list:has(input[value="realms"]:checked)
    .range:not(:has(> [data-type="realm"]))::before {
    @apply block;
    content: "No realms found";
  }

  .filter-list:has(input[value="realms"]:checked)
    .range:not(:has(> [data-type="realm"]))::after {
    @apply block;
    content: "Add a realm to your namespace to get started";
  }

  .filter-list:has(input[value="realms"]:checked)
    .range:not(:has(> [data-type="realm"])),
  .filter-list:has(input[value="pures"]:checked)
    .range:not(:has(> [data-type="pure"])),
  .range:empty {
    @apply block;
  }

  .filter-list:has(input[value="pures"]:checked)
    .range:not(:has(> [data-type="pure"]))::before {
    @apply block;
    content: "No pures found";
  }

  .filter-list:has(input[value="pures"]:checked)
    .range:not(:has(> [data-type="pure"]))::after {
    @apply block;
    content: "Add a pure to your namespace to get started";
  }

  .filter-list:has(input[value="display-grid"]:checked) .range {
    @apply md:grid-cols-2 xl:grid-cols-4 md:gap-3;
  }

  .filter-list:has(input[value="display-list"]:checked) .range .list-item {
    @apply flex-row md:gap-4;
  }

  .filter-list:has(input[value="display-list"]:checked)
    .range
    .list-item__content {
    @apply flex-row gap-2 lg:flex-[5] flex-none min-w-0;
  }

  .filter-list:has(input[value="display-list"]:checked)
    .range
    .list-item__title {
    @apply mb-0 w-1/3 overflow-hidden text-ellipsis whitespace-nowrap;
  }

  .list-item {
    @apply flex flex-col gap-6 md:gap-2 p-1 rounded bg-gray-50;
  }

  .list-item__content {
    @apply flex flex-col bg-light rounded-sm h-full w-full p-2;
  }

  .list-item__title {
    @apply flex gap-2 items-center overflow-hidden w-full mb-1;
  }
  .list-item__description {
    @apply w-full overflow-hidden text-ellipsis;
  }

  .filter-list:has(input[value="display-grid"]:checked)
    .list-item__description {
    @apply line-clamp-2;
  }

  .filter-list:has(input[value="display-list"]:checked)
    .list-item__description {
    @apply whitespace-nowrap;
  }

  .list-item__footer {
    @apply flex gap-1 w-full justify-between px-2 pb-1 text-50;
  }

  .filter-list:has(input[value="display-list"]:checked)
    .range
    .list-item__footer {
    @apply hidden lg:flex items-center pb-0 md:flex-[1] pl-0 min-w-0;
  }

  .list-item__size {
    @apply text-right;
  }

  .filter-list:has(input[value="display-list"]:checked) .list-item__size {
    @apply hidden xl:block xl:flex-[2] min-w-0;
  }

  .list-item__date {
    @apply whitespace-nowrap overflow-hidden text-ellipsis;
  }

  .filter-list:has(input[value="display-list"]:checked) .list-item__date {
    @apply xl:flex-[5] min-w-0;
  }

  /* toc */
  .toc-expend-btn:has(#toc-expend:checked) + nav {
    @apply block;
  }
  .toc-expend-btn:has(#toc-expend:checked) .toc-expend-btn_ico {
    @apply rotate-180;
  }

  /* sidebar */
  .main-header:has(#sidemenu-summary:checked) + main #sidebar #sidebar-summary,
  .main-header:has(#sidemenu-source:checked) + main #sidebar #sidebar-source,
  .main-header:has(#sidemenu-docs:checked) + main #sidebar #sidebar-docs,
  .main-header:has(#sidemenu-meta:checked) + main #sidebar #sidebar-meta {
    @apply block;
  }

  :is(
      .main-header:has(#sidemenu-source:checked),
      .main-header:has(#sidemenu-docs:checked),
      .main-header:has(#sidemenu-meta:checked)
    )
    + main
    .realm-view,
  :is(
      .main-header:has(#sidemenu-source:checked),
      .main-header:has(#sidemenu-docs:checked),
      .main-header:has(#sidemenu-meta:checked)
    )
    .main-navigation {
    @apply md:col-span-6;
  }
  :is(
      .main-header:has(#sidemenu-source:checked),
      .main-header:has(#sidemenu-docs:checked),
      .main-header:has(#sidemenu-meta:checked)
    )
    + main
    #sidebar,
  :is(
      .main-header:has(#sidemenu-source:checked),
      .main-header:has(#sidemenu-docs:checked),
      .main-header:has(#sidemenu-meta:checked)
    )
    .sidemenu {
    @apply md:col-span-4;
  }
  :is(
      .main-header:has(#sidemenu-source:checked),
      .main-header:has(#sidemenu-docs:checked),
      .main-header:has(#sidemenu-meta:checked)
    )
    + main
    #sidebar::before {
    @apply absolute block content-[''] top-0 w-[50vw] h-full -left-7 bg-gray-100 z-min;
  }

  /* Tooltip */
  .tooltip {
    --tooltip-left: 0;
    --tooltip-right: initial;
    @apply relative inline;
  }

  .tooltip::after {
    content: attr(data-tooltip);
    left: var(--tooltip-left);
    right: var(--tooltip-right);
    @apply absolute z-max scale-0 invisible px-2 py-1 bg-light rounded border border-gray-100 w-fit min-w-32 max-w-48 top-full text-center text-100 text-gray-600 font-normal transition-opacity opacity-0;
  }

  .tooltip:hover::after {
    @apply visible opacity-100 delay-300 scale-100;
  }

  /* chroma */
  main :is(.source-code) > pre {
    @apply !bg-light overflow-scroll rounded py-4 md:py-8 px-1 md:px-3 font-mono text-100 md:text-200;
  }
  main .realm-view > pre a {
    @apply hover:no-underline;
  }

  main :is(.realm-view, .source-code) > pre .chroma-ln:target {
    @apply !bg-transparent;
  }
  main :is(.realm-view, .source-code) > pre .chroma-line:has(.chroma-ln:target),
  main
    :is(.realm-view, .source-code)
    > pre
    .chroma-line:has(.chroma-lnlinks:hover),
  main
    :is(.realm-view, .source-code)
    > pre
    .chroma-line:has(.chroma-ln:target)
    .chroma-cl,
  main
    :is(.realm-view, .source-code)
    > pre
    .chroma-line:has(.chroma-lnlinks:hover)
    .chroma-cl {
    @apply !bg-gray-100 rounded;
  }
  main :is(.realm-view, .source-code) > pre .chroma-ln {
    @apply scroll-mt-24;
  }

  .dev-mode .toc-expend-btn {
    @apply bg-gray-100 hover:bg-gray-50 cursor-pointer border lg:border-none lg:bg-transparent;
  }
  .dev-mode #sidebar-summary {
    @apply bg-light lg:bg-transparent;
  }
  .dev-mode .toc-nav {
    @apply font-mono;
  }
}

@layer utilities {
  .italic-subtle {
    font-style: oblique 14deg;
  }

  .word-break {
    overflow-wrap: break-word;
    word-break: break-word;
  }

  .quotes {
    @apply italic-subtle text-gray-600 border-l-4 border-l-gray-300 pl-4 my-6 [quotes:"""_""""_"''_"''"];
  }

  .quotes::before,
  .quotes::after {
    @apply [content:open-quote] text-600 text-gray-300 mr-1 [vertical-align:-0.4rem];
  }

  .quotes::after {
    @apply [content:close-quote];
  }

  .text-stroke {
    -webkit-text-stroke: currentColor;
    -webkit-text-stroke-width: 0.6px;
  }

  .no-scrollbar::-webkit-scrollbar {
    display: none;
  }
  .no-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }

  .is-loading {
    @apply opacity-0;
  }

  .link-external {
    @apply text-[.7em];
  }
  .link-internal {
    @apply font-[400] text-[.8em];
  }
  .link-tx {
    @apply text-[.8em];
  }

  .tooltip {
    @apply inline align-text-top;
  }

  /* link with image only shoud display the link badge on the image */
  .realm-view
    a:has(> img:first-child):has(.tooltip:last-child):not(:has(> :nth-child(3)))
    > .tooltip,
  .realm-view
    a:has(> img:first-child):has(.tooltip + .tooltip:last-child):not(
      :has(> :nth-child(4))
    )
    > .tooltip {
    @apply absolute bottom-2 left-2 bg-light px-1 rounded-full ml-0;
  }
  .realm-view
    a:has(> img:first-child):has(.tooltip + .tooltip:last-child):not(
      :has(> :nth-child(4))
    )
    > .tooltip:first-of-type {
    @apply absolute bottom-1 left-6;
  }

  .realm-view a > span:first-of-type {
    @apply ml-0.5;
  }

  .field-content {
    field-sizing: content;
  }
}

/* supports rules */
@supports not (field-sizing: content) {
  .focus-no-field-sizing\:w-20:focus {
    width: 5rem !important;
  }
}
