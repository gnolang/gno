# load the package from $WORK directory
loadpkg gno.land/r/demo/simple_event $WORK/event

# start a new node
gnoland start

## test1 account should be available on default
gnokey query auth/accounts/${USER_ADDR_test1}
stdout 'height: 0'
stdout 'data: {'
stdout '  "BaseAccount": {'
stdout '    "address": "g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5",'
stdout '    "coins": "[0-9]*ugnot",' # dynamic
stdout '    "public_key": null,'
stdout '    "account_number": "0",'
stdout '    "sequence": "0"'
stdout '  }'
stdout '}'
! stderr '.+' # empty


## sign
gnokey sign -tx-path $WORK/multi/multi_msg.tx -chainid=tendermint_test -account-number 0 -account-sequence 0 test1
stdout 'Tx successfully signed and saved to '

## broadcast
gnokey broadcast $WORK/multi/multi_msg.tx -quiet=false

stdout OK!
stdout 'GAS WANTED: 2000000'
stdout 'GAS USED:   [0-9]+'
stdout 'HEIGHT:     [0-9]+'
stdout 'EVENTS:     \[{\"type\":\"TAG\",\"attrs\":\[{\"key\":\"KEY\",\"value\":\"value11\"}\],\"pkg_path\":\"gno.land\/r\/demo\/simple_event\",\"func\":\"Event\"},{\"type\":\"TAG\",\"attrs\":\[{\"key\":\"KEY\",\"value\":\"value22\"}\],\"pkg_path\":\"gno.land\/r\/demo\/simple_event\",\"func\":\"Event\"}\]'



-- event/simple_event.gno --
package simple_event

import (
	"std"
)

func Event(value string) {
    std.Emit("TAG", "KEY", value)
}

-- multi/multi_msg.tx --
{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/demo/simple_event","func":"Event","args":["value11"]},{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/demo/simple_event","func":"Event","args":["value22"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":null,"memo":""}

