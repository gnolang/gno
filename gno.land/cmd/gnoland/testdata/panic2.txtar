# test panic recursion
## start a new node
gnoland start

gnokey maketx addpkg -pkgdir $WORK -pkgpath gno.land/r/demo/panic -gas-fee 1000000ugnot -gas-wanted 2000000 -broadcast -chainid=tendermint_test test1

! gnokey maketx call -pkgpath gno.land/r/demo/panic --func Trigger --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast -chainid=tendermint_test test1


stderr 'panic\(\(const \(\"here\" \<untyped\> string\)\)\)'
stderr 'gno.land/r/demo/panic/panic.gno:5'
stderr 'p\<VPBlock\(3\,0\)\>\(i\<VPBlock\(1\,0\)\> \+ \(const \(1 int\)\)\)'
stderr 'gno.land/r/demo/panic/panic.gno:7'
stderr 'p\<VPBlock\(3\,0\)\>\(i\<VPBlock\(1\,0\)\> \+ \(const \(1 int\)\)\)'
stderr 'gno.land/r/demo/panic/panic.gno:7'
stderr 'p\<VPBlock\(3\,0\)\>\(i\<VPBlock\(1\,0\)\> \+ \(const \(1 int\)\)\)'
stderr 'gno.land/r/demo/panic/panic.gno:7'
stderr 'p\<VPBlock\(3\,0\)\>\(\(const \(0 int\)\)\)'
stderr 'gno.land/r/demo/panic/panic.gno:11'

-- panic.gno --
package main

func p(i int) {
	if i == 3 {
		panic("here")
	}
	p(i+1)
}

func Trigger() {
	p(0)
}

