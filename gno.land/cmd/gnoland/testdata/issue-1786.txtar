# Test for https://github.com/gnolang/gno/issues/1786

loadpkg gno.land/r/demo/wugnot

gnoland start

# add contract
gnokey maketx addpkg -pkgdir $WORK -pkgpath gno.land/r/demo/proxywugnot -gas-fee 1000000ugnot -gas-wanted 2000000 -broadcast -chainid=tendermint_test test1
stdout OK!

# approve wugnot to `proxywugnot â‰ˆ g1fndyg0we60rdfchyy5dwxzkfmhl5u34j932rg3`
gnokey maketx call -pkgpath gno.land/r/demo/wugnot -func Approve -args "g1fndyg0we60rdfchyy5dwxzkfmhl5u34j932rg3" -args 10000 -gas-fee 1000000ugnot -gas-wanted 2000000 -broadcast -chainid=tendermint_test test1
stdout OK!

# send 10000ugnot to `proxywugnot` to wrap it
gnokey maketx call -pkgpath gno.land/r/demo/proxywugnot --send "10000ugnot" -func ProxyWrap -gas-fee 1000000ugnot -gas-wanted 2000000 -broadcast -chainid=tendermint_test test1
stdout OK!

# check user's wugnot balance
gnokey maketx call -pkgpath gno.land/r/demo/wugnot -func BalanceOf -args "g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5" -gas-fee 1000000ugnot -gas-wanted 2000000 -broadcast -chainid=tendermint_test test1
stdout OK!
stdout '10000 uint64'

# unwrap 500 wugnot
gnokey maketx call -pkgpath gno.land/r/demo/proxywugnot -func ProxyUnwrap -args 500 -gas-fee 1000000ugnot -gas-wanted 2000000 -broadcast -chainid=tendermint_test test1

# XXX without patching anything it will panic 
# panic msg: insufficient coins error
# XXX with pathcing only wugnot.gnot it will panic
# panic msg: RealmSendBanker can only send from the realm package address "g1fndyg0we60rdfchyy5dwxzkfmhl5u34j932rg3", but got "g1pf6dv9fjk3rn0m4jjcne306ga4he3mzmupfjl6"


# check user's wugnot balance
gnokey maketx call -pkgpath gno.land/r/demo/wugnot -func BalanceOf -args "g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5" -gas-fee 1000000ugnot -gas-wanted 2000000 -broadcast -chainid=tendermint_test test1
stdout OK!
stdout '9500 uint64'

-- gno.mod --
module gno.land/r/demo/proxywugnot


-- realm.gno --
package proxywugnot

import (
	"std"

	"gno.land/r/demo/wugnot"

	"gno.land/p/demo/ufmt"
)

func ProxyWrap() {
	sent := std.GetOrigSend()
	ugnotSent := uint64(sent.AmountOf("ugnot"))

	if ugnotSent == 0 {
		return
	}

	// WRAP IT
	wugnotAddr := std.DerivePkgAddr("gno.land/r/demo/wugnot")
	banker := std.GetBanker(std.BankerTypeRealmSend)
	banker.SendCoins(std.CurrentRealm().Addr(), wugnotAddr, std.Coins{{"ugnot", int64(ugnotSent)}})
	wugnot.Deposit() // `proxywugnot` has ugnot

	// SEND WUGNOT: PROXY_WUGNOT -> USER
	wugnot.Transfer(std.GetOrigCaller(), ugnotSent)
}

func ProxyUnwrap(wugnotAmount uint64) {
	if wugnotAmount == 0 {
		return
	}
	userOldWugnot := wugnot.BalanceOf(std.GetOrigCaller())

	// SEND WUGNOT: USER -> PROXY_WUGNOT
	wugnot.TransferFrom(std.GetOrigCaller(), std.CurrentRealm().Addr(), wugnotAmount)

	// UNWRAP IT
	wugnot.Withdraw(wugnotAmount)

	// SEND GNOT: PROXY_WUGNOT -> USER
	banker := std.GetBanker(std.BankerTypeRealmSend)
	banker.SendCoins(std.CurrentRealm().Addr(), std.GetOrigCaller(), std.Coins{{"ugnot", int64(wugnotAmount)}})
}