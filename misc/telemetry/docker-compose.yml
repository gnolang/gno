services:
  collector:
    image: otel/opentelemetry-collector-contrib:latest
    ports:
      - "4317:4317"
      - "4318:4318"
      - "8090"
    volumes:
      - ./collector/collector.yaml:/etc/otelcol-contrib/config.yaml
    networks:
      - gnoland-net
  
  prometheus:
    image: prom/prometheus:latest
    command:
      - "--enable-feature=remote-write-receiver"
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    volumes:
      - prometheus:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - gnoland-net
  
  grafana:
    image: grafana/grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    networks:
      - gnoland-net
  
  gnoland-val:
    image: ghcr.io/gnolang/gno/gnoland:master
    networks:
      - gnoland-net
    volumes:
      # Shared Volume
      - gnoland-shared:/gnoroot/shared-data
    entrypoint:
      - sh
      - -c
      # Recreate gno genesis from git :(
      - |
        gnoland secrets init
        rm -f /gnoroot/shared-data/node_p2p.id
        apk add git make go linux-headers
        git clone https://github.com/gnolang/gno.git --single-branch gnoland-src
        GOPATH='/usr/' make -C gnoland-src/contribs/gnogenesis/
        gnogenesis generate
        gnogenesis validator add -name val000 -address $(gnoland secrets get validator_key.address -raw) -pub-key $(gnoland secrets get validator_key.pub_key -raw)
        gnogenesis balances add -balance-sheet /gnoroot/gno.land/genesis/genesis_balances.txt
        gnogenesis txs add packages /gnoroot/examples/gno.land
        gnoland config init
        gnoland config set consensus.timeout_commit 1s
        gnoland config set moniker val000
        gnoland config set telemetry.enabled true
        gnoland config set telemetry.exporter_endpoint collector:4317
        gnoland config set telemetry.service_instance_id val0
        gnoland secrets get node_id.id -raw > /gnoroot/shared-data/node_p2p.id
        cp /gnoroot/genesis.json /gnoroot/shared-data/genesis.json
        gnoland start
    healthcheck:
      test: ["CMD-SHELL", "test -f /gnoroot/shared-data/node_p2p.id || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  gnoland-rpc:
    image: ghcr.io/gnolang/gno/gnoland:master
    networks:
      - gnoland-net
    volumes:
      # Shared Volume
      - gnoland-shared:/gnoroot/shared-data
    entrypoint:
      - sh
      - -c
      - |
        gnoland secrets init
        gnoland config init
        gnoland config set consensus.timeout_commit 1s
        gnoland config set moniker rpc0
        gnoland config set rpc.laddr tcp://0.0.0.0:26657
        gnoland config set telemetry.enabled true
        gnoland config set telemetry.service_instance_id rpc000
        gnoland config set telemetry.exporter_endpoint collector:4317
        gnoland config set p2p.persistent_peers "$(cat /gnoroot/shared-data/node_p2p.id)@gnoland-val:26656"
        gnoland start -genesis /gnoroot/shared-data/genesis.json
    depends_on:
      gnoland-val:
        condition: service_healthy
        restart: true

  supernova:
    image: ghcr.io/gnolang/supernova:1.3.1
    command: >
      -sub-accounts 10 -transactions 100 -url http://gnoland-rpc:26657
      -mnemonic "source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast"
      -mode PACKAGE_DEPLOYMENT
    restart: unless-stopped
    networks:
      - gnoland-net

networks:
  gnoland-net:
    driver: bridge

volumes:
  prometheus:
    driver: local
  grafana_data:
    driver: local
  gnoland-shared:
    driver: local
