// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package github

import (
	"context"
	"encoding/json"
	"fmt"
	"time"

	"github.com/Khan/genqlient/graphql"
)

// The possible states of a pull request review.
type PullRequestReviewState string

const (
	// A review allowing the pull request to merge.
	PullRequestReviewStateApproved PullRequestReviewState = "APPROVED"
	// A review blocking the pull request from merging.
	PullRequestReviewStateChangesRequested PullRequestReviewState = "CHANGES_REQUESTED"
	// An informational review.
	PullRequestReviewStateCommented PullRequestReviewState = "COMMENTED"
	// A review that has been dismissed.
	PullRequestReviewStateDismissed PullRequestReviewState = "DISMISSED"
	// A review that has not yet been submitted.
	PullRequestReviewStatePending PullRequestReviewState = "PENDING"
)

var AllPullRequestReviewState = []PullRequestReviewState{
	PullRequestReviewStateApproved,
	PullRequestReviewStateChangesRequested,
	PullRequestReviewStateCommented,
	PullRequestReviewStateDismissed,
	PullRequestReviewStatePending,
}

// The possible states of a pull request.
type PullRequestState string

const (
	// A pull request that has been closed without being merged.
	PullRequestStateClosed PullRequestState = "CLOSED"
	// A pull request that has been closed by being merged.
	PullRequestStateMerged PullRequestState = "MERGED"
	// A pull request that is still open.
	PullRequestStateOpen PullRequestState = "OPEN"
)

var AllPullRequestState = []PullRequestState{
	PullRequestStateClosed,
	PullRequestStateMerged,
	PullRequestStateOpen,
}

// __getPullRequestsInput is used internally by genqlient
type __getPullRequestsInput struct {
	Owner  string `json:"owner"`
	Name   string `json:"name"`
	Cursor string `json:"cursor"`
}

// GetOwner returns __getPullRequestsInput.Owner, and is useful for accessing the field via an interface.
func (v *__getPullRequestsInput) GetOwner() string { return v.Owner }

// GetName returns __getPullRequestsInput.Name, and is useful for accessing the field via an interface.
func (v *__getPullRequestsInput) GetName() string { return v.Name }

// GetCursor returns __getPullRequestsInput.Cursor, and is useful for accessing the field via an interface.
func (v *__getPullRequestsInput) GetCursor() string { return v.Cursor }

// getPullRequestsRateLimit includes the requested fields of the GraphQL type RateLimit.
// The GraphQL type's documentation follows.
//
// Represents the client's rate limit.
type getPullRequestsRateLimit struct {
	// The point cost for the current query counting against the rate limit.
	Cost int `json:"cost"`
	// The maximum number of points the client is permitted to consume in a 60 minute window.
	Limit int `json:"limit"`
	// The number of points remaining in the current rate limit window.
	Remaining int `json:"remaining"`
	// The time at which the current rate limit window resets in UTC epoch seconds.
	ResetAt time.Time `json:"resetAt"`
}

// GetCost returns getPullRequestsRateLimit.Cost, and is useful for accessing the field via an interface.
func (v *getPullRequestsRateLimit) GetCost() int { return v.Cost }

// GetLimit returns getPullRequestsRateLimit.Limit, and is useful for accessing the field via an interface.
func (v *getPullRequestsRateLimit) GetLimit() int { return v.Limit }

// GetRemaining returns getPullRequestsRateLimit.Remaining, and is useful for accessing the field via an interface.
func (v *getPullRequestsRateLimit) GetRemaining() int { return v.Remaining }

// GetResetAt returns getPullRequestsRateLimit.ResetAt, and is useful for accessing the field via an interface.
func (v *getPullRequestsRateLimit) GetResetAt() time.Time { return v.ResetAt }

// getPullRequestsRepository includes the requested fields of the GraphQL type Repository.
// The GraphQL type's documentation follows.
//
// A repository contains the content for a project.
type getPullRequestsRepository struct {
	// The name of the repository.
	Name string `json:"name"`
	// A list of pull requests that have been opened in the repository.
	PullRequests getPullRequestsRepositoryPullRequestsPullRequestConnection `json:"pullRequests"`
}

// GetName returns getPullRequestsRepository.Name, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepository) GetName() string { return v.Name }

// GetPullRequests returns getPullRequestsRepository.PullRequests, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepository) GetPullRequests() getPullRequestsRepositoryPullRequestsPullRequestConnection {
	return v.PullRequests
}

// getPullRequestsRepositoryPullRequestsPullRequestConnection includes the requested fields of the GraphQL type PullRequestConnection.
// The GraphQL type's documentation follows.
//
// The connection type for PullRequest.
type getPullRequestsRepositoryPullRequestsPullRequestConnection struct {
	// A list of nodes.
	Nodes []getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest `json:"nodes"`
	// Information to aid in pagination.
	PageInfo getPullRequestsRepositoryPullRequestsPullRequestConnectionPageInfo `json:"pageInfo"`
}

// GetNodes returns getPullRequestsRepositoryPullRequestsPullRequestConnection.Nodes, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnection) GetNodes() []getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest {
	return v.Nodes
}

// GetPageInfo returns getPullRequestsRepositoryPullRequestsPullRequestConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnection) GetPageInfo() getPullRequestsRepositoryPullRequestsPullRequestConnectionPageInfo {
	return v.PageInfo
}

// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest includes the requested fields of the GraphQL type PullRequest.
// The GraphQL type's documentation follows.
//
// A repository pull request.
type getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest struct {
	// Identifies the pull request title.
	Title string `json:"title"`
	// Identifies the date and time when the object was created.
	CreatedAt time.Time `json:"createdAt"`
	// Identifies the state of the pull request.
	State PullRequestState `json:"state"`
	// Identifies the pull request number.
	Number int `json:"number"`
	// The actor who authored the comment.
	Author getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorActor `json:"-"`
	// A list of commits present in this pull request's head branch not present in the base branch.
	Commits getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestCommitsPullRequestCommitConnection `json:"commits"`
	// A list of reviews associated with the pull request.
	Reviews getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnection `json:"reviews"`
}

// GetTitle returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest.Title, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest) GetTitle() string {
	return v.Title
}

// GetCreatedAt returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest.CreatedAt, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest) GetCreatedAt() time.Time {
	return v.CreatedAt
}

// GetState returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest.State, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest) GetState() PullRequestState {
	return v.State
}

// GetNumber returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest.Number, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest) GetNumber() int {
	return v.Number
}

// GetAuthor returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest.Author, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest) GetAuthor() getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorActor {
	return v.Author
}

// GetCommits returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest.Commits, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest) GetCommits() getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestCommitsPullRequestCommitConnection {
	return v.Commits
}

// GetReviews returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest.Reviews, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest) GetReviews() getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnection {
	return v.Reviews
}

func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest
		Author json.RawMessage `json:"author"`
		graphql.NoUnmarshalJSON
	}
	firstPass.getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Author
		src := firstPass.Author
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalgetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorActor(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest.Author: %w", err)
			}
		}
	}
	return nil
}

type __premarshalgetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest struct {
	Title string `json:"title"`

	CreatedAt time.Time `json:"createdAt"`

	State PullRequestState `json:"state"`

	Number int `json:"number"`

	Author json.RawMessage `json:"author"`

	Commits getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestCommitsPullRequestCommitConnection `json:"commits"`

	Reviews getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnection `json:"reviews"`
}

func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest) __premarshalJSON() (*__premarshalgetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest, error) {
	var retval __premarshalgetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest

	retval.Title = v.Title
	retval.CreatedAt = v.CreatedAt
	retval.State = v.State
	retval.Number = v.Number
	{

		dst := &retval.Author
		src := v.Author
		var err error
		*dst, err = __marshalgetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorActor(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequest.Author: %w", err)
		}
	}
	retval.Commits = v.Commits
	retval.Reviews = v.Reviews
	return &retval, nil
}

// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorActor includes the requested fields of the GraphQL interface Actor.
//
// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorActor is implemented by the following types:
// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorBot
// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorEnterpriseUserAccount
// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorMannequin
// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorOrganization
// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorUser
// The GraphQL type's documentation follows.
//
// Represents an object which can take actions on GitHub. Typically a User or Bot.
type getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorActor interface {
	implementsGraphQLInterfacegetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorActor()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
	// GetLogin returns the interface-field "login" from its implementation.
	// The GraphQL interface field's documentation follows.
	//
	// The username of the actor.
	GetLogin() string
}

func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorBot) implementsGraphQLInterfacegetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorActor() {
}
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorEnterpriseUserAccount) implementsGraphQLInterfacegetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorActor() {
}
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorMannequin) implementsGraphQLInterfacegetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorActor() {
}
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorOrganization) implementsGraphQLInterfacegetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorActor() {
}
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorUser) implementsGraphQLInterfacegetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorActor() {
}

func __unmarshalgetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorActor(b []byte, v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorActor) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "Bot":
		*v = new(getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorBot)
		return json.Unmarshal(b, *v)
	case "EnterpriseUserAccount":
		*v = new(getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorEnterpriseUserAccount)
		return json.Unmarshal(b, *v)
	case "Mannequin":
		*v = new(getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorMannequin)
		return json.Unmarshal(b, *v)
	case "Organization":
		*v = new(getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorOrganization)
		return json.Unmarshal(b, *v)
	case "User":
		*v = new(getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorUser)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing Actor.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorActor: "%v"`, tn.TypeName)
	}
}

func __marshalgetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorActor(v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorActor) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorBot:
		typename = "Bot"

		result := struct {
			TypeName string `json:"__typename"`
			*getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorBot
		}{typename, v}
		return json.Marshal(result)
	case *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorEnterpriseUserAccount:
		typename = "EnterpriseUserAccount"

		result := struct {
			TypeName string `json:"__typename"`
			*getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorEnterpriseUserAccount
		}{typename, v}
		return json.Marshal(result)
	case *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorMannequin:
		typename = "Mannequin"

		result := struct {
			TypeName string `json:"__typename"`
			*getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorMannequin
		}{typename, v}
		return json.Marshal(result)
	case *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorOrganization:
		typename = "Organization"

		result := struct {
			TypeName string `json:"__typename"`
			*getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorOrganization
		}{typename, v}
		return json.Marshal(result)
	case *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorUser:
		typename = "User"

		result := struct {
			TypeName string `json:"__typename"`
			*getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorUser
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorActor: "%T"`, v)
	}
}

// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorBot includes the requested fields of the GraphQL type Bot.
// The GraphQL type's documentation follows.
//
// A special type of user which takes actions on behalf of GitHub Apps.
type getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorBot struct {
	Typename string `json:"__typename"`
	// The username of the actor.
	Login string `json:"login"`
}

// GetTypename returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorBot.Typename, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorBot) GetTypename() string {
	return v.Typename
}

// GetLogin returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorBot.Login, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorBot) GetLogin() string {
	return v.Login
}

// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorEnterpriseUserAccount includes the requested fields of the GraphQL type EnterpriseUserAccount.
// The GraphQL type's documentation follows.
//
// An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations.
type getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorEnterpriseUserAccount struct {
	Typename string `json:"__typename"`
	// The username of the actor.
	Login string `json:"login"`
}

// GetTypename returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorEnterpriseUserAccount.Typename, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorEnterpriseUserAccount) GetTypename() string {
	return v.Typename
}

// GetLogin returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorEnterpriseUserAccount.Login, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorEnterpriseUserAccount) GetLogin() string {
	return v.Login
}

// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorMannequin includes the requested fields of the GraphQL type Mannequin.
// The GraphQL type's documentation follows.
//
// A placeholder user for attribution of imported data on GitHub.
type getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorMannequin struct {
	Typename string `json:"__typename"`
	// The username of the actor.
	Login string `json:"login"`
}

// GetTypename returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorMannequin.Typename, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorMannequin) GetTypename() string {
	return v.Typename
}

// GetLogin returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorMannequin.Login, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorMannequin) GetLogin() string {
	return v.Login
}

// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An account on GitHub, with one or more owners, that has repositories, members and teams.
type getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorOrganization struct {
	Typename string `json:"__typename"`
	// The username of the actor.
	Login string `json:"login"`
}

// GetTypename returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorOrganization.Typename, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorOrganization) GetTypename() string {
	return v.Typename
}

// GetLogin returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorOrganization.Login, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorOrganization) GetLogin() string {
	return v.Login
}

// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorUser includes the requested fields of the GraphQL type User.
// The GraphQL type's documentation follows.
//
// A user is an individual's account on GitHub that owns repositories and can make new content.
type getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorUser struct {
	Typename string `json:"__typename"`
	// The username of the actor.
	Login string `json:"login"`
}

// GetTypename returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorUser.Typename, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorUser) GetTypename() string {
	return v.Typename
}

// GetLogin returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorUser.Login, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestAuthorUser) GetLogin() string {
	return v.Login
}

// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestCommitsPullRequestCommitConnection includes the requested fields of the GraphQL type PullRequestCommitConnection.
// The GraphQL type's documentation follows.
//
// The connection type for PullRequestCommit.
type getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestCommitsPullRequestCommitConnection struct {
	// Identifies the total count of items in the connection.
	TotalCount int `json:"totalCount"`
}

// GetTotalCount returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestCommitsPullRequestCommitConnection.TotalCount, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestCommitsPullRequestCommitConnection) GetTotalCount() int {
	return v.TotalCount
}

// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnection includes the requested fields of the GraphQL type PullRequestReviewConnection.
// The GraphQL type's documentation follows.
//
// The connection type for PullRequestReview.
type getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnection struct {
	// Identifies the total count of items in the connection.
	TotalCount int `json:"totalCount"`
	// A list of nodes.
	Nodes []getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview `json:"nodes"`
}

// GetTotalCount returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnection.TotalCount, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnection) GetTotalCount() int {
	return v.TotalCount
}

// GetNodes returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnection.Nodes, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnection) GetNodes() []getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview {
	return v.Nodes
}

// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview includes the requested fields of the GraphQL type PullRequestReview.
// The GraphQL type's documentation follows.
//
// A review object for a given pull request.
type getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview struct {
	// The actor who authored the comment.
	Author getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorActor `json:"-"`
	// Identifies the current state of the pull request review.
	State PullRequestReviewState `json:"state"`
	// Identifies the date and time when the object was created.
	CreatedAt time.Time `json:"createdAt"`
}

// GetAuthor returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview.Author, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview) GetAuthor() getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorActor {
	return v.Author
}

// GetState returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview.State, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview) GetState() PullRequestReviewState {
	return v.State
}

// GetCreatedAt returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview.CreatedAt, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview) GetCreatedAt() time.Time {
	return v.CreatedAt
}

func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview
		Author json.RawMessage `json:"author"`
		graphql.NoUnmarshalJSON
	}
	firstPass.getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Author
		src := firstPass.Author
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalgetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorActor(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview.Author: %w", err)
			}
		}
	}
	return nil
}

type __premarshalgetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview struct {
	Author json.RawMessage `json:"author"`

	State PullRequestReviewState `json:"state"`

	CreatedAt time.Time `json:"createdAt"`
}

func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview) __premarshalJSON() (*__premarshalgetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview, error) {
	var retval __premarshalgetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview

	{

		dst := &retval.Author
		src := v.Author
		var err error
		*dst, err = __marshalgetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorActor(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReview.Author: %w", err)
		}
	}
	retval.State = v.State
	retval.CreatedAt = v.CreatedAt
	return &retval, nil
}

// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorActor includes the requested fields of the GraphQL interface Actor.
//
// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorActor is implemented by the following types:
// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorBot
// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorEnterpriseUserAccount
// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorMannequin
// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorOrganization
// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorUser
// The GraphQL type's documentation follows.
//
// Represents an object which can take actions on GitHub. Typically a User or Bot.
type getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorActor interface {
	implementsGraphQLInterfacegetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorActor()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
	// GetLogin returns the interface-field "login" from its implementation.
	// The GraphQL interface field's documentation follows.
	//
	// The username of the actor.
	GetLogin() string
}

func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorBot) implementsGraphQLInterfacegetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorActor() {
}
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorEnterpriseUserAccount) implementsGraphQLInterfacegetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorActor() {
}
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorMannequin) implementsGraphQLInterfacegetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorActor() {
}
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorOrganization) implementsGraphQLInterfacegetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorActor() {
}
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorUser) implementsGraphQLInterfacegetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorActor() {
}

func __unmarshalgetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorActor(b []byte, v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorActor) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "Bot":
		*v = new(getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorBot)
		return json.Unmarshal(b, *v)
	case "EnterpriseUserAccount":
		*v = new(getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorEnterpriseUserAccount)
		return json.Unmarshal(b, *v)
	case "Mannequin":
		*v = new(getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorMannequin)
		return json.Unmarshal(b, *v)
	case "Organization":
		*v = new(getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorOrganization)
		return json.Unmarshal(b, *v)
	case "User":
		*v = new(getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorUser)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing Actor.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorActor: "%v"`, tn.TypeName)
	}
}

func __marshalgetPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorActor(v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorActor) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorBot:
		typename = "Bot"

		result := struct {
			TypeName string `json:"__typename"`
			*getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorBot
		}{typename, v}
		return json.Marshal(result)
	case *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorEnterpriseUserAccount:
		typename = "EnterpriseUserAccount"

		result := struct {
			TypeName string `json:"__typename"`
			*getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorEnterpriseUserAccount
		}{typename, v}
		return json.Marshal(result)
	case *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorMannequin:
		typename = "Mannequin"

		result := struct {
			TypeName string `json:"__typename"`
			*getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorMannequin
		}{typename, v}
		return json.Marshal(result)
	case *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorOrganization:
		typename = "Organization"

		result := struct {
			TypeName string `json:"__typename"`
			*getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorOrganization
		}{typename, v}
		return json.Marshal(result)
	case *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorUser:
		typename = "User"

		result := struct {
			TypeName string `json:"__typename"`
			*getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorUser
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorActor: "%T"`, v)
	}
}

// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorBot includes the requested fields of the GraphQL type Bot.
// The GraphQL type's documentation follows.
//
// A special type of user which takes actions on behalf of GitHub Apps.
type getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorBot struct {
	Typename string `json:"__typename"`
	// The username of the actor.
	Login string `json:"login"`
}

// GetTypename returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorBot.Typename, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorBot) GetTypename() string {
	return v.Typename
}

// GetLogin returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorBot.Login, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorBot) GetLogin() string {
	return v.Login
}

// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorEnterpriseUserAccount includes the requested fields of the GraphQL type EnterpriseUserAccount.
// The GraphQL type's documentation follows.
//
// An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations.
type getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorEnterpriseUserAccount struct {
	Typename string `json:"__typename"`
	// The username of the actor.
	Login string `json:"login"`
}

// GetTypename returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorEnterpriseUserAccount.Typename, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorEnterpriseUserAccount) GetTypename() string {
	return v.Typename
}

// GetLogin returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorEnterpriseUserAccount.Login, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorEnterpriseUserAccount) GetLogin() string {
	return v.Login
}

// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorMannequin includes the requested fields of the GraphQL type Mannequin.
// The GraphQL type's documentation follows.
//
// A placeholder user for attribution of imported data on GitHub.
type getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorMannequin struct {
	Typename string `json:"__typename"`
	// The username of the actor.
	Login string `json:"login"`
}

// GetTypename returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorMannequin.Typename, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorMannequin) GetTypename() string {
	return v.Typename
}

// GetLogin returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorMannequin.Login, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorMannequin) GetLogin() string {
	return v.Login
}

// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An account on GitHub, with one or more owners, that has repositories, members and teams.
type getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorOrganization struct {
	Typename string `json:"__typename"`
	// The username of the actor.
	Login string `json:"login"`
}

// GetTypename returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorOrganization.Typename, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorOrganization) GetTypename() string {
	return v.Typename
}

// GetLogin returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorOrganization.Login, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorOrganization) GetLogin() string {
	return v.Login
}

// getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorUser includes the requested fields of the GraphQL type User.
// The GraphQL type's documentation follows.
//
// A user is an individual's account on GitHub that owns repositories and can make new content.
type getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorUser struct {
	Typename string `json:"__typename"`
	// The username of the actor.
	Login string `json:"login"`
}

// GetTypename returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorUser.Typename, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorUser) GetTypename() string {
	return v.Typename
}

// GetLogin returns getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorUser.Login, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionNodesPullRequestReviewsPullRequestReviewConnectionNodesPullRequestReviewAuthorUser) GetLogin() string {
	return v.Login
}

// getPullRequestsRepositoryPullRequestsPullRequestConnectionPageInfo includes the requested fields of the GraphQL type PageInfo.
// The GraphQL type's documentation follows.
//
// Information about pagination in a connection.
type getPullRequestsRepositoryPullRequestsPullRequestConnectionPageInfo struct {
	// When paginating forwards, the cursor to continue.
	EndCursor string `json:"endCursor"`
	// When paginating forwards, are there more items?
	HasNextPage bool `json:"hasNextPage"`
}

// GetEndCursor returns getPullRequestsRepositoryPullRequestsPullRequestConnectionPageInfo.EndCursor, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionPageInfo) GetEndCursor() string {
	return v.EndCursor
}

// GetHasNextPage returns getPullRequestsRepositoryPullRequestsPullRequestConnectionPageInfo.HasNextPage, and is useful for accessing the field via an interface.
func (v *getPullRequestsRepositoryPullRequestsPullRequestConnectionPageInfo) GetHasNextPage() bool {
	return v.HasNextPage
}

// getPullRequestsResponse is returned by getPullRequests on success.
type getPullRequestsResponse struct {
	// Lookup a given repository by the owner and repository name.
	Repository getPullRequestsRepository `json:"repository"`
	// The client's rate limit information.
	RateLimit getPullRequestsRateLimit `json:"rateLimit"`
}

// GetRepository returns getPullRequestsResponse.Repository, and is useful for accessing the field via an interface.
func (v *getPullRequestsResponse) GetRepository() getPullRequestsRepository { return v.Repository }

// GetRateLimit returns getPullRequestsResponse.RateLimit, and is useful for accessing the field via an interface.
func (v *getPullRequestsResponse) GetRateLimit() getPullRequestsRateLimit { return v.RateLimit }

// The query executed by getPullRequests.
const getPullRequests_Operation = `
query getPullRequests ($owner: String!, $name: String!, $cursor: String!) {
	repository(owner: $owner, name: $name) {
		name
		pullRequests(first: 100, orderBy: {field:CREATED_AT,direction:ASC}, after: $cursor) {
			nodes {
				title
				createdAt
				state
				number
				author {
					__typename
					login
				}
				commits {
					totalCount
				}
				reviews(first: 100) {
					totalCount
					nodes {
						author {
							__typename
							login
						}
						state
						createdAt
					}
				}
			}
			pageInfo {
				endCursor
				hasNextPage
			}
		}
	}
	rateLimit {
		cost
		limit
		remaining
		resetAt
	}
}
`

func getPullRequests(
	ctx_ context.Context,
	client_ graphql.Client,
	owner string,
	name string,
	cursor string,
) (data_ *getPullRequestsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "getPullRequests",
		Query:  getPullRequests_Operation,
		Variables: &__getPullRequestsInput{
			Owner:  owner,
			Name:   name,
			Cursor: cursor,
		},
	}

	data_ = &getPullRequestsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}
