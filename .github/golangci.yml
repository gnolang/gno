version: "2"

run:
  concurrency: 8
  go: ""
  modules-download-mode: readonly
  issues-exit-code: 1
  tests: true
  allow-parallel-runners: false
output:
  path-prefix: ""
linters:
  default: none
  enable:
    - whitespace # Tool for detection of leading and trailing whitespace
    - unconvert # Unnecessary type conversions
    - tparallel # Detects inappropriate usage of t.Parallel() method in your Go test codes
    - thelper # Detects golang test helpers without t.Helper() call and checks the consistency of test helpers
    - prealloc # Finds slice declarations that could potentially be pre-allocated
    - predeclared # Finds code that shadows one of Go's predeclared identifiers
    - nolintlint # Ill-formed or insufficient nolint directives
    - misspell # Misspelled English words in comments
    - makezero # Finds slice declarations with non-zero initial length
    - importas # Enforces consistent import aliases
    - govet # same as 'go vet'
    - gosec # Security problems
    - dogsled # Checks assignments with too many blank identifiers (e.g. x, , , _, := f())
    - errname # Checks that sentinel errors are prefixed with the Err and error types are suffixed with the Error
    - errorlint # errorlint is a linter for that can be used to find code that will cause problems with the error wrapping scheme introduced in Go 1.13
    - unused # Checks Go code for unused constants, variables, functions and types
    - gomodguard # Enforces an allow and block list for direct Go module dependencies
    - forbidigo # Forbids some custom-set identifiers, like regexp.MatchString
    - staticcheck # well-known all-round linter
  settings:
    errorlint:
      asserts: false
    forbidigo:
      forbid:
        - pattern: ^regexp\.(Match|MatchString)$
          msg: it will re-compile the regexp for each execution; compile the regexp with regexp.Compile and store it as a singleton
    goconst:
      min-len: 3
      min-occurrences: 3
    gocritic:
      enabled-tags:
        - diagnostic
        - experimental
        - opinionated
        - performance
        - style
    gosec:
      excludes:
        - G204 # Subprocess launched with a potential tainted input or cmd arguments
        - G306 # Expect WriteFile permissions to be 0600 or less
        - G115 # Integer overflow conversion, no solution to check the overflow in time of convert, so linter shouldn't check the overflow.
    staticcheck:
      checks:
        - all
        - -ST1003 # Poorly chosen identifier.
        - -ST1022 # The documentation of an exported variable or constant should start with variable's name
        - -QF1001 # could apply De Morgan's law
        - -QF1008 # could remove embedded field "..." from selector
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - linters:
          - gosec # Disabled linting of weak number generators
          - makezero # Disabled linting of intentional slice appends
          - goconst # Disabled linting of common mnemonics and test case strings
          - unused # Disabled linting of unused mock methods
        path: _test\.go
      - linters:
          - errorlint
        path: _\.gno
      - path: gnovm/pkg/gnolang
        text: string `(realm|cross|.no realm.|crossing)` has (\d+) occurrences, make it a constant
    paths:
      - third_party$
      - builtin$
      - examples$
issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  uniq-by-line: false
  whole-files: true
  new: false
  fix: false
formatters:
  enable:
    - gofmt
    - goimports
  settings:
    gofmt:
      simplify: true
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
