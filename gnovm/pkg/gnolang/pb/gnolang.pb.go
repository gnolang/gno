// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: gnolang.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// messages
type TypedValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	T *anypb.Any `protobuf:"bytes,1,opt,name=T,proto3" json:"T,omitempty"`
	V *anypb.Any `protobuf:"bytes,2,opt,name=V,proto3" json:"V,omitempty"`
	N []byte     `protobuf:"bytes,3,opt,name=N,proto3" json:"N,omitempty"`
}

func (x *TypedValue) Reset() {
	*x = TypedValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypedValue) ProtoMessage() {}

func (x *TypedValue) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypedValue.ProtoReflect.Descriptor instead.
func (*TypedValue) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{0}
}

func (x *TypedValue) GetT() *anypb.Any {
	if x != nil {
		return x.T
	}
	return nil
}

func (x *TypedValue) GetV() *anypb.Any {
	if x != nil {
		return x.V
	}
	return nil
}

func (x *TypedValue) GetN() []byte {
	if x != nil {
		return x.N
	}
	return nil
}

type StringValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *StringValue) Reset() {
	*x = StringValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringValue) ProtoMessage() {}

func (x *StringValue) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringValue.ProtoReflect.Descriptor instead.
func (*StringValue) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{1}
}

func (x *StringValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type BigintValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *BigintValue) Reset() {
	*x = BigintValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BigintValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigintValue) ProtoMessage() {}

func (x *BigintValue) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigintValue.ProtoReflect.Descriptor instead.
func (*BigintValue) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{2}
}

func (x *BigintValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type BigdecValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *BigdecValue) Reset() {
	*x = BigdecValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BigdecValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigdecValue) ProtoMessage() {}

func (x *BigdecValue) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigdecValue.ProtoReflect.Descriptor instead.
func (*BigdecValue) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{3}
}

func (x *BigdecValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type PointerValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TV    *TypedValue `protobuf:"bytes,1,opt,name=TV,proto3" json:"TV,omitempty"`
	Base  *anypb.Any  `protobuf:"bytes,2,opt,name=Base,proto3" json:"Base,omitempty"`
	Index int64       `protobuf:"zigzag64,3,opt,name=Index,proto3" json:"Index,omitempty"`
	Key   *TypedValue `protobuf:"bytes,4,opt,name=Key,proto3" json:"Key,omitempty"`
}

func (x *PointerValue) Reset() {
	*x = PointerValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointerValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointerValue) ProtoMessage() {}

func (x *PointerValue) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointerValue.ProtoReflect.Descriptor instead.
func (*PointerValue) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{4}
}

func (x *PointerValue) GetTV() *TypedValue {
	if x != nil {
		return x.TV
	}
	return nil
}

func (x *PointerValue) GetBase() *anypb.Any {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PointerValue) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *PointerValue) GetKey() *TypedValue {
	if x != nil {
		return x.Key
	}
	return nil
}

type ArrayValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectInfo *ObjectInfo   `protobuf:"bytes,1,opt,name=ObjectInfo,proto3" json:"ObjectInfo,omitempty"`
	List       []*TypedValue `protobuf:"bytes,2,rep,name=List,proto3" json:"List,omitempty"`
	Data       []byte        `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *ArrayValue) Reset() {
	*x = ArrayValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayValue) ProtoMessage() {}

func (x *ArrayValue) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayValue.ProtoReflect.Descriptor instead.
func (*ArrayValue) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{5}
}

func (x *ArrayValue) GetObjectInfo() *ObjectInfo {
	if x != nil {
		return x.ObjectInfo
	}
	return nil
}

func (x *ArrayValue) GetList() []*TypedValue {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ArrayValue) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SliceValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base   *anypb.Any `protobuf:"bytes,1,opt,name=Base,proto3" json:"Base,omitempty"`
	Offset int64      `protobuf:"zigzag64,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Length int64      `protobuf:"zigzag64,3,opt,name=Length,proto3" json:"Length,omitempty"`
	Maxcap int64      `protobuf:"zigzag64,4,opt,name=Maxcap,proto3" json:"Maxcap,omitempty"`
}

func (x *SliceValue) Reset() {
	*x = SliceValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SliceValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SliceValue) ProtoMessage() {}

func (x *SliceValue) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SliceValue.ProtoReflect.Descriptor instead.
func (*SliceValue) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{6}
}

func (x *SliceValue) GetBase() *anypb.Any {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SliceValue) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SliceValue) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *SliceValue) GetMaxcap() int64 {
	if x != nil {
		return x.Maxcap
	}
	return 0
}

type StructValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectInfo *ObjectInfo   `protobuf:"bytes,1,opt,name=ObjectInfo,proto3" json:"ObjectInfo,omitempty"`
	Fields     []*TypedValue `protobuf:"bytes,2,rep,name=Fields,proto3" json:"Fields,omitempty"`
}

func (x *StructValue) Reset() {
	*x = StructValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StructValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructValue) ProtoMessage() {}

func (x *StructValue) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructValue.ProtoReflect.Descriptor instead.
func (*StructValue) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{7}
}

func (x *StructValue) GetObjectInfo() *ObjectInfo {
	if x != nil {
		return x.ObjectInfo
	}
	return nil
}

func (x *StructValue) GetFields() []*TypedValue {
	if x != nil {
		return x.Fields
	}
	return nil
}

type FuncValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     *anypb.Any `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	IsMethod bool       `protobuf:"varint,2,opt,name=IsMethod,proto3" json:"IsMethod,omitempty"`
	Source   *anypb.Any `protobuf:"bytes,3,opt,name=Source,proto3" json:"Source,omitempty"`
	Name     string     `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	Closure  *anypb.Any `protobuf:"bytes,5,opt,name=Closure,proto3" json:"Closure,omitempty"`
	FileName string     `protobuf:"bytes,6,opt,name=FileName,proto3" json:"FileName,omitempty"`
	PkgPath  string     `protobuf:"bytes,7,opt,name=PkgPath,proto3" json:"PkgPath,omitempty"`
}

func (x *FuncValue) Reset() {
	*x = FuncValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuncValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncValue) ProtoMessage() {}

func (x *FuncValue) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncValue.ProtoReflect.Descriptor instead.
func (*FuncValue) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{8}
}

func (x *FuncValue) GetType() *anypb.Any {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *FuncValue) GetIsMethod() bool {
	if x != nil {
		return x.IsMethod
	}
	return false
}

func (x *FuncValue) GetSource() *anypb.Any {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *FuncValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FuncValue) GetClosure() *anypb.Any {
	if x != nil {
		return x.Closure
	}
	return nil
}

func (x *FuncValue) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FuncValue) GetPkgPath() string {
	if x != nil {
		return x.PkgPath
	}
	return ""
}

type MapValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectInfo *ObjectInfo `protobuf:"bytes,1,opt,name=ObjectInfo,proto3" json:"ObjectInfo,omitempty"`
	List       *MapList    `protobuf:"bytes,2,opt,name=List,proto3" json:"List,omitempty"`
}

func (x *MapValue) Reset() {
	*x = MapValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapValue) ProtoMessage() {}

func (x *MapValue) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapValue.ProtoReflect.Descriptor instead.
func (*MapValue) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{9}
}

func (x *MapValue) GetObjectInfo() *ObjectInfo {
	if x != nil {
		return x.ObjectInfo
	}
	return nil
}

func (x *MapValue) GetList() *MapList {
	if x != nil {
		return x.List
	}
	return nil
}

type MapList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*MapListItem `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
}

func (x *MapList) Reset() {
	*x = MapList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapList) ProtoMessage() {}

func (x *MapList) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapList.ProtoReflect.Descriptor instead.
func (*MapList) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{10}
}

func (x *MapList) GetList() []*MapListItem {
	if x != nil {
		return x.List
	}
	return nil
}

type MapListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *TypedValue `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value *TypedValue `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *MapListItem) Reset() {
	*x = MapListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapListItem) ProtoMessage() {}

func (x *MapListItem) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapListItem.ProtoReflect.Descriptor instead.
func (*MapListItem) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{11}
}

func (x *MapListItem) GetKey() *TypedValue {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *MapListItem) GetValue() *TypedValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type BoundMethodValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectInfo *ObjectInfo `protobuf:"bytes,1,opt,name=ObjectInfo,proto3" json:"ObjectInfo,omitempty"`
	Func       *FuncValue  `protobuf:"bytes,2,opt,name=Func,proto3" json:"Func,omitempty"`
	Receiver   *TypedValue `protobuf:"bytes,3,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
}

func (x *BoundMethodValue) Reset() {
	*x = BoundMethodValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoundMethodValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoundMethodValue) ProtoMessage() {}

func (x *BoundMethodValue) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoundMethodValue.ProtoReflect.Descriptor instead.
func (*BoundMethodValue) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{12}
}

func (x *BoundMethodValue) GetObjectInfo() *ObjectInfo {
	if x != nil {
		return x.ObjectInfo
	}
	return nil
}

func (x *BoundMethodValue) GetFunc() *FuncValue {
	if x != nil {
		return x.Func
	}
	return nil
}

func (x *BoundMethodValue) GetReceiver() *TypedValue {
	if x != nil {
		return x.Receiver
	}
	return nil
}

type TypeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *anypb.Any `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *TypeValue) Reset() {
	*x = TypeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeValue) ProtoMessage() {}

func (x *TypeValue) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeValue.ProtoReflect.Descriptor instead.
func (*TypeValue) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{13}
}

func (x *TypeValue) GetType() *anypb.Any {
	if x != nil {
		return x.Type
	}
	return nil
}

type PackageValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectInfo *ObjectInfo  `protobuf:"bytes,1,opt,name=ObjectInfo,proto3" json:"ObjectInfo,omitempty"`
	Block      *anypb.Any   `protobuf:"bytes,2,opt,name=Block,proto3" json:"Block,omitempty"`
	PkgName    string       `protobuf:"bytes,3,opt,name=PkgName,proto3" json:"PkgName,omitempty"`
	PkgPath    string       `protobuf:"bytes,4,opt,name=PkgPath,proto3" json:"PkgPath,omitempty"`
	FNames     []string     `protobuf:"bytes,5,rep,name=FNames,proto3" json:"FNames,omitempty"`
	FBlocks    []*anypb.Any `protobuf:"bytes,6,rep,name=FBlocks,proto3" json:"FBlocks,omitempty"`
}

func (x *PackageValue) Reset() {
	*x = PackageValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageValue) ProtoMessage() {}

func (x *PackageValue) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageValue.ProtoReflect.Descriptor instead.
func (*PackageValue) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{14}
}

func (x *PackageValue) GetObjectInfo() *ObjectInfo {
	if x != nil {
		return x.ObjectInfo
	}
	return nil
}

func (x *PackageValue) GetBlock() *anypb.Any {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *PackageValue) GetPkgName() string {
	if x != nil {
		return x.PkgName
	}
	return ""
}

func (x *PackageValue) GetPkgPath() string {
	if x != nil {
		return x.PkgPath
	}
	return ""
}

func (x *PackageValue) GetFNames() []string {
	if x != nil {
		return x.FNames
	}
	return nil
}

func (x *PackageValue) GetFBlocks() []*anypb.Any {
	if x != nil {
		return x.FBlocks
	}
	return nil
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectInfo *ObjectInfo   `protobuf:"bytes,1,opt,name=ObjectInfo,proto3" json:"ObjectInfo,omitempty"`
	Source     *anypb.Any    `protobuf:"bytes,2,opt,name=Source,proto3" json:"Source,omitempty"`
	Values     []*TypedValue `protobuf:"bytes,3,rep,name=Values,proto3" json:"Values,omitempty"`
	Parent     *anypb.Any    `protobuf:"bytes,4,opt,name=Parent,proto3" json:"Parent,omitempty"`
	Blank      *TypedValue   `protobuf:"bytes,5,opt,name=Blank,proto3" json:"Blank,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{15}
}

func (x *Block) GetObjectInfo() *ObjectInfo {
	if x != nil {
		return x.ObjectInfo
	}
	return nil
}

func (x *Block) GetSource() *anypb.Any {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Block) GetValues() []*TypedValue {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *Block) GetParent() *anypb.Any {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *Block) GetBlank() *TypedValue {
	if x != nil {
		return x.Blank
	}
	return nil
}

type RefValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectID string `protobuf:"bytes,1,opt,name=ObjectID,proto3" json:"ObjectID,omitempty"`
	Escaped  bool   `protobuf:"varint,2,opt,name=Escaped,proto3" json:"Escaped,omitempty"`
	PkgPath  string `protobuf:"bytes,3,opt,name=PkgPath,proto3" json:"PkgPath,omitempty"`
	Hash     string `protobuf:"bytes,4,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (x *RefValue) Reset() {
	*x = RefValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefValue) ProtoMessage() {}

func (x *RefValue) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefValue.ProtoReflect.Descriptor instead.
func (*RefValue) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{16}
}

func (x *RefValue) GetObjectID() string {
	if x != nil {
		return x.ObjectID
	}
	return ""
}

func (x *RefValue) GetEscaped() bool {
	if x != nil {
		return x.Escaped
	}
	return false
}

func (x *RefValue) GetPkgPath() string {
	if x != nil {
		return x.PkgPath
	}
	return ""
}

func (x *RefValue) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type ObjectID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *ObjectID) Reset() {
	*x = ObjectID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectID) ProtoMessage() {}

func (x *ObjectID) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectID.ProtoReflect.Descriptor instead.
func (*ObjectID) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{17}
}

func (x *ObjectID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ObjectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Hash      string `protobuf:"bytes,2,opt,name=Hash,proto3" json:"Hash,omitempty"`
	OwnerID   string `protobuf:"bytes,3,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`
	ModTime   uint64 `protobuf:"varint,4,opt,name=ModTime,proto3" json:"ModTime,omitempty"`
	RefCount  int64  `protobuf:"zigzag64,5,opt,name=RefCount,proto3" json:"RefCount,omitempty"`
	IsEscaped bool   `protobuf:"varint,6,opt,name=IsEscaped,proto3" json:"IsEscaped,omitempty"`
}

func (x *ObjectInfo) Reset() {
	*x = ObjectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectInfo) ProtoMessage() {}

func (x *ObjectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectInfo.ProtoReflect.Descriptor instead.
func (*ObjectInfo) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{18}
}

func (x *ObjectInfo) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ObjectInfo) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ObjectInfo) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

func (x *ObjectInfo) GetModTime() uint64 {
	if x != nil {
		return x.ModTime
	}
	return 0
}

func (x *ObjectInfo) GetRefCount() int64 {
	if x != nil {
		return x.RefCount
	}
	return 0
}

func (x *ObjectInfo) GetIsEscaped() bool {
	if x != nil {
		return x.IsEscaped
	}
	return false
}

type ValueHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *ValueHash) Reset() {
	*x = ValueHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueHash) ProtoMessage() {}

func (x *ValueHash) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueHash.ProtoReflect.Descriptor instead.
func (*ValueHash) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{19}
}

func (x *ValueHash) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Hashlet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Hashlet) Reset() {
	*x = Hashlet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hashlet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hashlet) ProtoMessage() {}

func (x *Hashlet) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hashlet.ProtoReflect.Descriptor instead.
func (*Hashlet) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{20}
}

func (x *Hashlet) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type ValuePath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  uint32 `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Depth uint32 `protobuf:"varint,2,opt,name=Depth,proto3" json:"Depth,omitempty"`
	Index uint32 `protobuf:"varint,3,opt,name=Index,proto3" json:"Index,omitempty"`
	Name  string `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *ValuePath) Reset() {
	*x = ValuePath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValuePath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValuePath) ProtoMessage() {}

func (x *ValuePath) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValuePath.ProtoReflect.Descriptor instead.
func (*ValuePath) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{21}
}

func (x *ValuePath) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ValuePath) GetDepth() uint32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *ValuePath) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ValuePath) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PkgPath string `protobuf:"bytes,1,opt,name=PkgPath,proto3" json:"PkgPath,omitempty"`
	File    string `protobuf:"bytes,2,opt,name=File,proto3" json:"File,omitempty"`
	Line    int64  `protobuf:"zigzag64,3,opt,name=Line,proto3" json:"Line,omitempty"`
	Nonce   int64  `protobuf:"zigzag64,4,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{22}
}

func (x *Location) GetPkgPath() string {
	if x != nil {
		return x.PkgPath
	}
	return ""
}

func (x *Location) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *Location) GetLine() int64 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *Location) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type Attributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line  int64  `protobuf:"zigzag64,1,opt,name=Line,proto3" json:"Line,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=Label,proto3" json:"Label,omitempty"`
}

func (x *Attributes) Reset() {
	*x = Attributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attributes) ProtoMessage() {}

func (x *Attributes) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attributes.ProtoReflect.Descriptor instead.
func (*Attributes) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{23}
}

func (x *Attributes) GetLine() int64 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *Attributes) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type NameExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Path       *ValuePath  `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
	Name       string      `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *NameExpr) Reset() {
	*x = NameExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameExpr) ProtoMessage() {}

func (x *NameExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameExpr.ProtoReflect.Descriptor instead.
func (*NameExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{24}
}

func (x *NameExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *NameExpr) GetPath() *ValuePath {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *NameExpr) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type BasicLitExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Kind       int64       `protobuf:"zigzag64,2,opt,name=Kind,proto3" json:"Kind,omitempty"`
	Value      string      `protobuf:"bytes,3,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *BasicLitExpr) Reset() {
	*x = BasicLitExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicLitExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicLitExpr) ProtoMessage() {}

func (x *BasicLitExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicLitExpr.ProtoReflect.Descriptor instead.
func (*BasicLitExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{25}
}

func (x *BasicLitExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *BasicLitExpr) GetKind() int64 {
	if x != nil {
		return x.Kind
	}
	return 0
}

func (x *BasicLitExpr) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type BinaryExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Left       *anypb.Any  `protobuf:"bytes,2,opt,name=Left,proto3" json:"Left,omitempty"`
	Op         int64       `protobuf:"zigzag64,3,opt,name=Op,proto3" json:"Op,omitempty"`
	Right      *anypb.Any  `protobuf:"bytes,4,opt,name=Right,proto3" json:"Right,omitempty"`
}

func (x *BinaryExpr) Reset() {
	*x = BinaryExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BinaryExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryExpr) ProtoMessage() {}

func (x *BinaryExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryExpr.ProtoReflect.Descriptor instead.
func (*BinaryExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{26}
}

func (x *BinaryExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *BinaryExpr) GetLeft() *anypb.Any {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *BinaryExpr) GetOp() int64 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *BinaryExpr) GetRight() *anypb.Any {
	if x != nil {
		return x.Right
	}
	return nil
}

type CallExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes  `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Func       *anypb.Any   `protobuf:"bytes,2,opt,name=Func,proto3" json:"Func,omitempty"`
	Args       []*anypb.Any `protobuf:"bytes,3,rep,name=Args,proto3" json:"Args,omitempty"`
	Varg       bool         `protobuf:"varint,4,opt,name=Varg,proto3" json:"Varg,omitempty"`
	NumArgs    int64        `protobuf:"zigzag64,5,opt,name=NumArgs,proto3" json:"NumArgs,omitempty"`
}

func (x *CallExpr) Reset() {
	*x = CallExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallExpr) ProtoMessage() {}

func (x *CallExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallExpr.ProtoReflect.Descriptor instead.
func (*CallExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{27}
}

func (x *CallExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *CallExpr) GetFunc() *anypb.Any {
	if x != nil {
		return x.Func
	}
	return nil
}

func (x *CallExpr) GetArgs() []*anypb.Any {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *CallExpr) GetVarg() bool {
	if x != nil {
		return x.Varg
	}
	return false
}

func (x *CallExpr) GetNumArgs() int64 {
	if x != nil {
		return x.NumArgs
	}
	return 0
}

type IndexExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	X          *anypb.Any  `protobuf:"bytes,2,opt,name=X,proto3" json:"X,omitempty"`
	Index      *anypb.Any  `protobuf:"bytes,3,opt,name=Index,proto3" json:"Index,omitempty"`
	HasOK      bool        `protobuf:"varint,4,opt,name=HasOK,proto3" json:"HasOK,omitempty"`
}

func (x *IndexExpr) Reset() {
	*x = IndexExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexExpr) ProtoMessage() {}

func (x *IndexExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexExpr.ProtoReflect.Descriptor instead.
func (*IndexExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{28}
}

func (x *IndexExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *IndexExpr) GetX() *anypb.Any {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *IndexExpr) GetIndex() *anypb.Any {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *IndexExpr) GetHasOK() bool {
	if x != nil {
		return x.HasOK
	}
	return false
}

type SelectorExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	X          *anypb.Any  `protobuf:"bytes,2,opt,name=X,proto3" json:"X,omitempty"`
	Path       *ValuePath  `protobuf:"bytes,3,opt,name=Path,proto3" json:"Path,omitempty"`
	Sel        string      `protobuf:"bytes,4,opt,name=Sel,proto3" json:"Sel,omitempty"`
}

func (x *SelectorExpr) Reset() {
	*x = SelectorExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectorExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectorExpr) ProtoMessage() {}

func (x *SelectorExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectorExpr.ProtoReflect.Descriptor instead.
func (*SelectorExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{29}
}

func (x *SelectorExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *SelectorExpr) GetX() *anypb.Any {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *SelectorExpr) GetPath() *ValuePath {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *SelectorExpr) GetSel() string {
	if x != nil {
		return x.Sel
	}
	return ""
}

type SliceExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	X          *anypb.Any  `protobuf:"bytes,2,opt,name=X,proto3" json:"X,omitempty"`
	Low        *anypb.Any  `protobuf:"bytes,3,opt,name=Low,proto3" json:"Low,omitempty"`
	High       *anypb.Any  `protobuf:"bytes,4,opt,name=High,proto3" json:"High,omitempty"`
	Max        *anypb.Any  `protobuf:"bytes,5,opt,name=Max,proto3" json:"Max,omitempty"`
}

func (x *SliceExpr) Reset() {
	*x = SliceExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SliceExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SliceExpr) ProtoMessage() {}

func (x *SliceExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SliceExpr.ProtoReflect.Descriptor instead.
func (*SliceExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{30}
}

func (x *SliceExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *SliceExpr) GetX() *anypb.Any {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *SliceExpr) GetLow() *anypb.Any {
	if x != nil {
		return x.Low
	}
	return nil
}

func (x *SliceExpr) GetHigh() *anypb.Any {
	if x != nil {
		return x.High
	}
	return nil
}

func (x *SliceExpr) GetMax() *anypb.Any {
	if x != nil {
		return x.Max
	}
	return nil
}

type StarExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	X          *anypb.Any  `protobuf:"bytes,2,opt,name=X,proto3" json:"X,omitempty"`
}

func (x *StarExpr) Reset() {
	*x = StarExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StarExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StarExpr) ProtoMessage() {}

func (x *StarExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StarExpr.ProtoReflect.Descriptor instead.
func (*StarExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{31}
}

func (x *StarExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *StarExpr) GetX() *anypb.Any {
	if x != nil {
		return x.X
	}
	return nil
}

type RefExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	X          *anypb.Any  `protobuf:"bytes,2,opt,name=X,proto3" json:"X,omitempty"`
}

func (x *RefExpr) Reset() {
	*x = RefExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefExpr) ProtoMessage() {}

func (x *RefExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefExpr.ProtoReflect.Descriptor instead.
func (*RefExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{32}
}

func (x *RefExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *RefExpr) GetX() *anypb.Any {
	if x != nil {
		return x.X
	}
	return nil
}

type TypeAssertExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	X          *anypb.Any  `protobuf:"bytes,2,opt,name=X,proto3" json:"X,omitempty"`
	Type       *anypb.Any  `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
	HasOK      bool        `protobuf:"varint,4,opt,name=HasOK,proto3" json:"HasOK,omitempty"`
}

func (x *TypeAssertExpr) Reset() {
	*x = TypeAssertExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeAssertExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeAssertExpr) ProtoMessage() {}

func (x *TypeAssertExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeAssertExpr.ProtoReflect.Descriptor instead.
func (*TypeAssertExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{33}
}

func (x *TypeAssertExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *TypeAssertExpr) GetX() *anypb.Any {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *TypeAssertExpr) GetType() *anypb.Any {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *TypeAssertExpr) GetHasOK() bool {
	if x != nil {
		return x.HasOK
	}
	return false
}

type UnaryExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	X          *anypb.Any  `protobuf:"bytes,2,opt,name=X,proto3" json:"X,omitempty"`
	Op         int64       `protobuf:"zigzag64,3,opt,name=Op,proto3" json:"Op,omitempty"`
}

func (x *UnaryExpr) Reset() {
	*x = UnaryExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnaryExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnaryExpr) ProtoMessage() {}

func (x *UnaryExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnaryExpr.ProtoReflect.Descriptor instead.
func (*UnaryExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{34}
}

func (x *UnaryExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *UnaryExpr) GetX() *anypb.Any {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *UnaryExpr) GetOp() int64 {
	if x != nil {
		return x.Op
	}
	return 0
}

type CompositeLitExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes     `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Type       *anypb.Any      `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Elts       []*KeyValueExpr `protobuf:"bytes,3,rep,name=Elts,proto3" json:"Elts,omitempty"`
}

func (x *CompositeLitExpr) Reset() {
	*x = CompositeLitExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompositeLitExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompositeLitExpr) ProtoMessage() {}

func (x *CompositeLitExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompositeLitExpr.ProtoReflect.Descriptor instead.
func (*CompositeLitExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{35}
}

func (x *CompositeLitExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *CompositeLitExpr) GetType() *anypb.Any {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *CompositeLitExpr) GetElts() []*KeyValueExpr {
	if x != nil {
		return x.Elts
	}
	return nil
}

type KeyValueExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Key        *anypb.Any  `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	Value      *anypb.Any  `protobuf:"bytes,3,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *KeyValueExpr) Reset() {
	*x = KeyValueExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValueExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValueExpr) ProtoMessage() {}

func (x *KeyValueExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValueExpr.ProtoReflect.Descriptor instead.
func (*KeyValueExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{36}
}

func (x *KeyValueExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *KeyValueExpr) GetKey() *anypb.Any {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KeyValueExpr) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

type FuncLitExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes  *Attributes   `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	StaticBlock *StaticBlock  `protobuf:"bytes,2,opt,name=StaticBlock,proto3" json:"StaticBlock,omitempty"`
	Type        *FuncTypeExpr `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
	Body        []*anypb.Any  `protobuf:"bytes,4,rep,name=Body,proto3" json:"Body,omitempty"`
}

func (x *FuncLitExpr) Reset() {
	*x = FuncLitExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuncLitExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncLitExpr) ProtoMessage() {}

func (x *FuncLitExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncLitExpr.ProtoReflect.Descriptor instead.
func (*FuncLitExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{37}
}

func (x *FuncLitExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *FuncLitExpr) GetStaticBlock() *StaticBlock {
	if x != nil {
		return x.StaticBlock
	}
	return nil
}

func (x *FuncLitExpr) GetType() *FuncTypeExpr {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *FuncLitExpr) GetBody() []*anypb.Any {
	if x != nil {
		return x.Body
	}
	return nil
}

type ConstExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Source     *anypb.Any  `protobuf:"bytes,2,opt,name=Source,proto3" json:"Source,omitempty"`
	TypedValue *TypedValue `protobuf:"bytes,3,opt,name=TypedValue,proto3" json:"TypedValue,omitempty"`
}

func (x *ConstExpr) Reset() {
	*x = ConstExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConstExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConstExpr) ProtoMessage() {}

func (x *ConstExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConstExpr.ProtoReflect.Descriptor instead.
func (*ConstExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{38}
}

func (x *ConstExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ConstExpr) GetSource() *anypb.Any {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *ConstExpr) GetTypedValue() *TypedValue {
	if x != nil {
		return x.TypedValue
	}
	return nil
}

type FieldTypeExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Name       string      `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Type       *anypb.Any  `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
	Tag        *anypb.Any  `protobuf:"bytes,4,opt,name=Tag,proto3" json:"Tag,omitempty"`
}

func (x *FieldTypeExpr) Reset() {
	*x = FieldTypeExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldTypeExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldTypeExpr) ProtoMessage() {}

func (x *FieldTypeExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldTypeExpr.ProtoReflect.Descriptor instead.
func (*FieldTypeExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{39}
}

func (x *FieldTypeExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *FieldTypeExpr) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FieldTypeExpr) GetType() *anypb.Any {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *FieldTypeExpr) GetTag() *anypb.Any {
	if x != nil {
		return x.Tag
	}
	return nil
}

type ArrayTypeExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Len        *anypb.Any  `protobuf:"bytes,2,opt,name=Len,proto3" json:"Len,omitempty"`
	Elt        *anypb.Any  `protobuf:"bytes,3,opt,name=Elt,proto3" json:"Elt,omitempty"`
}

func (x *ArrayTypeExpr) Reset() {
	*x = ArrayTypeExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayTypeExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayTypeExpr) ProtoMessage() {}

func (x *ArrayTypeExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayTypeExpr.ProtoReflect.Descriptor instead.
func (*ArrayTypeExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{40}
}

func (x *ArrayTypeExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ArrayTypeExpr) GetLen() *anypb.Any {
	if x != nil {
		return x.Len
	}
	return nil
}

func (x *ArrayTypeExpr) GetElt() *anypb.Any {
	if x != nil {
		return x.Elt
	}
	return nil
}

type SliceTypeExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Elt        *anypb.Any  `protobuf:"bytes,2,opt,name=Elt,proto3" json:"Elt,omitempty"`
	Vrd        bool        `protobuf:"varint,3,opt,name=Vrd,proto3" json:"Vrd,omitempty"`
}

func (x *SliceTypeExpr) Reset() {
	*x = SliceTypeExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SliceTypeExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SliceTypeExpr) ProtoMessage() {}

func (x *SliceTypeExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SliceTypeExpr.ProtoReflect.Descriptor instead.
func (*SliceTypeExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{41}
}

func (x *SliceTypeExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *SliceTypeExpr) GetElt() *anypb.Any {
	if x != nil {
		return x.Elt
	}
	return nil
}

func (x *SliceTypeExpr) GetVrd() bool {
	if x != nil {
		return x.Vrd
	}
	return false
}

type InterfaceTypeExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes      `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Methods    []*FieldTypeExpr `protobuf:"bytes,2,rep,name=Methods,proto3" json:"Methods,omitempty"`
	Generic    string           `protobuf:"bytes,3,opt,name=Generic,proto3" json:"Generic,omitempty"`
}

func (x *InterfaceTypeExpr) Reset() {
	*x = InterfaceTypeExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceTypeExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceTypeExpr) ProtoMessage() {}

func (x *InterfaceTypeExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceTypeExpr.ProtoReflect.Descriptor instead.
func (*InterfaceTypeExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{42}
}

func (x *InterfaceTypeExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *InterfaceTypeExpr) GetMethods() []*FieldTypeExpr {
	if x != nil {
		return x.Methods
	}
	return nil
}

func (x *InterfaceTypeExpr) GetGeneric() string {
	if x != nil {
		return x.Generic
	}
	return ""
}

type ChanTypeExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Dir        int64       `protobuf:"zigzag64,2,opt,name=Dir,proto3" json:"Dir,omitempty"`
	Value      *anypb.Any  `protobuf:"bytes,3,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *ChanTypeExpr) Reset() {
	*x = ChanTypeExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChanTypeExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChanTypeExpr) ProtoMessage() {}

func (x *ChanTypeExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChanTypeExpr.ProtoReflect.Descriptor instead.
func (*ChanTypeExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{43}
}

func (x *ChanTypeExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ChanTypeExpr) GetDir() int64 {
	if x != nil {
		return x.Dir
	}
	return 0
}

func (x *ChanTypeExpr) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

type FuncTypeExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes      `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Params     []*FieldTypeExpr `protobuf:"bytes,2,rep,name=Params,proto3" json:"Params,omitempty"`
	Results    []*FieldTypeExpr `protobuf:"bytes,3,rep,name=Results,proto3" json:"Results,omitempty"`
}

func (x *FuncTypeExpr) Reset() {
	*x = FuncTypeExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuncTypeExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncTypeExpr) ProtoMessage() {}

func (x *FuncTypeExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncTypeExpr.ProtoReflect.Descriptor instead.
func (*FuncTypeExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{44}
}

func (x *FuncTypeExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *FuncTypeExpr) GetParams() []*FieldTypeExpr {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *FuncTypeExpr) GetResults() []*FieldTypeExpr {
	if x != nil {
		return x.Results
	}
	return nil
}

type MapTypeExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Key        *anypb.Any  `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	Value      *anypb.Any  `protobuf:"bytes,3,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *MapTypeExpr) Reset() {
	*x = MapTypeExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapTypeExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapTypeExpr) ProtoMessage() {}

func (x *MapTypeExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapTypeExpr.ProtoReflect.Descriptor instead.
func (*MapTypeExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{45}
}

func (x *MapTypeExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *MapTypeExpr) GetKey() *anypb.Any {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *MapTypeExpr) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

type StructTypeExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes      `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Fields     []*FieldTypeExpr `protobuf:"bytes,2,rep,name=Fields,proto3" json:"Fields,omitempty"`
}

func (x *StructTypeExpr) Reset() {
	*x = StructTypeExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StructTypeExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructTypeExpr) ProtoMessage() {}

func (x *StructTypeExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructTypeExpr.ProtoReflect.Descriptor instead.
func (*StructTypeExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{46}
}

func (x *StructTypeExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *StructTypeExpr) GetFields() []*FieldTypeExpr {
	if x != nil {
		return x.Fields
	}
	return nil
}

type ConstTypeExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Source     *anypb.Any  `protobuf:"bytes,2,opt,name=Source,proto3" json:"Source,omitempty"`
	Type       *anypb.Any  `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *ConstTypeExpr) Reset() {
	*x = ConstTypeExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConstTypeExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConstTypeExpr) ProtoMessage() {}

func (x *ConstTypeExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConstTypeExpr.ProtoReflect.Descriptor instead.
func (*ConstTypeExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{47}
}

func (x *ConstTypeExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ConstTypeExpr) GetSource() *anypb.Any {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *ConstTypeExpr) GetType() *anypb.Any {
	if x != nil {
		return x.Type
	}
	return nil
}

type MaybeNativeTypeExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Type       *anypb.Any  `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *MaybeNativeTypeExpr) Reset() {
	*x = MaybeNativeTypeExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaybeNativeTypeExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaybeNativeTypeExpr) ProtoMessage() {}

func (x *MaybeNativeTypeExpr) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaybeNativeTypeExpr.ProtoReflect.Descriptor instead.
func (*MaybeNativeTypeExpr) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{48}
}

func (x *MaybeNativeTypeExpr) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *MaybeNativeTypeExpr) GetType() *anypb.Any {
	if x != nil {
		return x.Type
	}
	return nil
}

type AssignStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes  `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Lhs        []*anypb.Any `protobuf:"bytes,2,rep,name=Lhs,proto3" json:"Lhs,omitempty"`
	Op         int64        `protobuf:"zigzag64,3,opt,name=Op,proto3" json:"Op,omitempty"`
	Rhs        []*anypb.Any `protobuf:"bytes,4,rep,name=Rhs,proto3" json:"Rhs,omitempty"`
}

func (x *AssignStmt) Reset() {
	*x = AssignStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignStmt) ProtoMessage() {}

func (x *AssignStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignStmt.ProtoReflect.Descriptor instead.
func (*AssignStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{49}
}

func (x *AssignStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *AssignStmt) GetLhs() []*anypb.Any {
	if x != nil {
		return x.Lhs
	}
	return nil
}

func (x *AssignStmt) GetOp() int64 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *AssignStmt) GetRhs() []*anypb.Any {
	if x != nil {
		return x.Rhs
	}
	return nil
}

type BlockStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes  *Attributes  `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	StaticBlock *StaticBlock `protobuf:"bytes,2,opt,name=StaticBlock,proto3" json:"StaticBlock,omitempty"`
	Body        []*anypb.Any `protobuf:"bytes,3,rep,name=Body,proto3" json:"Body,omitempty"`
}

func (x *BlockStmt) Reset() {
	*x = BlockStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockStmt) ProtoMessage() {}

func (x *BlockStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockStmt.ProtoReflect.Descriptor instead.
func (*BlockStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{50}
}

func (x *BlockStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *BlockStmt) GetStaticBlock() *StaticBlock {
	if x != nil {
		return x.StaticBlock
	}
	return nil
}

func (x *BlockStmt) GetBody() []*anypb.Any {
	if x != nil {
		return x.Body
	}
	return nil
}

type BranchStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Op         int64       `protobuf:"zigzag64,2,opt,name=Op,proto3" json:"Op,omitempty"`
	Label      string      `protobuf:"bytes,3,opt,name=Label,proto3" json:"Label,omitempty"`
	Depth      uint32      `protobuf:"varint,4,opt,name=Depth,proto3" json:"Depth,omitempty"`
	BodyIndex  int64       `protobuf:"zigzag64,5,opt,name=BodyIndex,proto3" json:"BodyIndex,omitempty"`
}

func (x *BranchStmt) Reset() {
	*x = BranchStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BranchStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BranchStmt) ProtoMessage() {}

func (x *BranchStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BranchStmt.ProtoReflect.Descriptor instead.
func (*BranchStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{51}
}

func (x *BranchStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *BranchStmt) GetOp() int64 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *BranchStmt) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *BranchStmt) GetDepth() uint32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *BranchStmt) GetBodyIndex() int64 {
	if x != nil {
		return x.BodyIndex
	}
	return 0
}

type DeclStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes  `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Body       []*anypb.Any `protobuf:"bytes,2,rep,name=Body,proto3" json:"Body,omitempty"`
}

func (x *DeclStmt) Reset() {
	*x = DeclStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclStmt) ProtoMessage() {}

func (x *DeclStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclStmt.ProtoReflect.Descriptor instead.
func (*DeclStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{52}
}

func (x *DeclStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *DeclStmt) GetBody() []*anypb.Any {
	if x != nil {
		return x.Body
	}
	return nil
}

type DeferStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Call       *CallExpr   `protobuf:"bytes,2,opt,name=Call,proto3" json:"Call,omitempty"`
}

func (x *DeferStmt) Reset() {
	*x = DeferStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeferStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeferStmt) ProtoMessage() {}

func (x *DeferStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeferStmt.ProtoReflect.Descriptor instead.
func (*DeferStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{53}
}

func (x *DeferStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *DeferStmt) GetCall() *CallExpr {
	if x != nil {
		return x.Call
	}
	return nil
}

type ExprStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	X          *anypb.Any  `protobuf:"bytes,2,opt,name=X,proto3" json:"X,omitempty"`
}

func (x *ExprStmt) Reset() {
	*x = ExprStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExprStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExprStmt) ProtoMessage() {}

func (x *ExprStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExprStmt.ProtoReflect.Descriptor instead.
func (*ExprStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{54}
}

func (x *ExprStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ExprStmt) GetX() *anypb.Any {
	if x != nil {
		return x.X
	}
	return nil
}

type ForStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes  *Attributes  `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	StaticBlock *StaticBlock `protobuf:"bytes,2,opt,name=StaticBlock,proto3" json:"StaticBlock,omitempty"`
	Init        *anypb.Any   `protobuf:"bytes,3,opt,name=Init,proto3" json:"Init,omitempty"`
	Cond        *anypb.Any   `protobuf:"bytes,4,opt,name=Cond,proto3" json:"Cond,omitempty"`
	Post        *anypb.Any   `protobuf:"bytes,5,opt,name=Post,proto3" json:"Post,omitempty"`
	Body        []*anypb.Any `protobuf:"bytes,6,rep,name=Body,proto3" json:"Body,omitempty"`
}

func (x *ForStmt) Reset() {
	*x = ForStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForStmt) ProtoMessage() {}

func (x *ForStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForStmt.ProtoReflect.Descriptor instead.
func (*ForStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{55}
}

func (x *ForStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ForStmt) GetStaticBlock() *StaticBlock {
	if x != nil {
		return x.StaticBlock
	}
	return nil
}

func (x *ForStmt) GetInit() *anypb.Any {
	if x != nil {
		return x.Init
	}
	return nil
}

func (x *ForStmt) GetCond() *anypb.Any {
	if x != nil {
		return x.Cond
	}
	return nil
}

func (x *ForStmt) GetPost() *anypb.Any {
	if x != nil {
		return x.Post
	}
	return nil
}

func (x *ForStmt) GetBody() []*anypb.Any {
	if x != nil {
		return x.Body
	}
	return nil
}

type GoStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Call       *CallExpr   `protobuf:"bytes,2,opt,name=Call,proto3" json:"Call,omitempty"`
}

func (x *GoStmt) Reset() {
	*x = GoStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoStmt) ProtoMessage() {}

func (x *GoStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoStmt.ProtoReflect.Descriptor instead.
func (*GoStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{56}
}

func (x *GoStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GoStmt) GetCall() *CallExpr {
	if x != nil {
		return x.Call
	}
	return nil
}

type IfStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes  *Attributes  `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	StaticBlock *StaticBlock `protobuf:"bytes,2,opt,name=StaticBlock,proto3" json:"StaticBlock,omitempty"`
	Init        *anypb.Any   `protobuf:"bytes,3,opt,name=Init,proto3" json:"Init,omitempty"`
	Cond        *anypb.Any   `protobuf:"bytes,4,opt,name=Cond,proto3" json:"Cond,omitempty"`
	Then        *IfCaseStmt  `protobuf:"bytes,5,opt,name=Then,proto3" json:"Then,omitempty"`
	Else        *IfCaseStmt  `protobuf:"bytes,6,opt,name=Else,proto3" json:"Else,omitempty"`
}

func (x *IfStmt) Reset() {
	*x = IfStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IfStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IfStmt) ProtoMessage() {}

func (x *IfStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IfStmt.ProtoReflect.Descriptor instead.
func (*IfStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{57}
}

func (x *IfStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *IfStmt) GetStaticBlock() *StaticBlock {
	if x != nil {
		return x.StaticBlock
	}
	return nil
}

func (x *IfStmt) GetInit() *anypb.Any {
	if x != nil {
		return x.Init
	}
	return nil
}

func (x *IfStmt) GetCond() *anypb.Any {
	if x != nil {
		return x.Cond
	}
	return nil
}

func (x *IfStmt) GetThen() *IfCaseStmt {
	if x != nil {
		return x.Then
	}
	return nil
}

func (x *IfStmt) GetElse() *IfCaseStmt {
	if x != nil {
		return x.Else
	}
	return nil
}

type IfCaseStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes  *Attributes  `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	StaticBlock *StaticBlock `protobuf:"bytes,2,opt,name=StaticBlock,proto3" json:"StaticBlock,omitempty"`
	Body        []*anypb.Any `protobuf:"bytes,3,rep,name=Body,proto3" json:"Body,omitempty"`
}

func (x *IfCaseStmt) Reset() {
	*x = IfCaseStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IfCaseStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IfCaseStmt) ProtoMessage() {}

func (x *IfCaseStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IfCaseStmt.ProtoReflect.Descriptor instead.
func (*IfCaseStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{58}
}

func (x *IfCaseStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *IfCaseStmt) GetStaticBlock() *StaticBlock {
	if x != nil {
		return x.StaticBlock
	}
	return nil
}

func (x *IfCaseStmt) GetBody() []*anypb.Any {
	if x != nil {
		return x.Body
	}
	return nil
}

type IncDecStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	X          *anypb.Any  `protobuf:"bytes,2,opt,name=X,proto3" json:"X,omitempty"`
	Op         int64       `protobuf:"zigzag64,3,opt,name=Op,proto3" json:"Op,omitempty"`
}

func (x *IncDecStmt) Reset() {
	*x = IncDecStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncDecStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncDecStmt) ProtoMessage() {}

func (x *IncDecStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncDecStmt.ProtoReflect.Descriptor instead.
func (*IncDecStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{59}
}

func (x *IncDecStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *IncDecStmt) GetX() *anypb.Any {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *IncDecStmt) GetOp() int64 {
	if x != nil {
		return x.Op
	}
	return 0
}

type RangeStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes  *Attributes  `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	StaticBlock *StaticBlock `protobuf:"bytes,2,opt,name=StaticBlock,proto3" json:"StaticBlock,omitempty"`
	X           *anypb.Any   `protobuf:"bytes,3,opt,name=X,proto3" json:"X,omitempty"`
	Key         *anypb.Any   `protobuf:"bytes,4,opt,name=Key,proto3" json:"Key,omitempty"`
	Value       *anypb.Any   `protobuf:"bytes,5,opt,name=Value,proto3" json:"Value,omitempty"`
	Op          int64        `protobuf:"zigzag64,6,opt,name=Op,proto3" json:"Op,omitempty"`
	Body        []*anypb.Any `protobuf:"bytes,7,rep,name=Body,proto3" json:"Body,omitempty"`
	IsMap       bool         `protobuf:"varint,8,opt,name=IsMap,proto3" json:"IsMap,omitempty"`
	IsString    bool         `protobuf:"varint,9,opt,name=IsString,proto3" json:"IsString,omitempty"`
	IsArrayPtr  bool         `protobuf:"varint,10,opt,name=IsArrayPtr,proto3" json:"IsArrayPtr,omitempty"`
}

func (x *RangeStmt) Reset() {
	*x = RangeStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RangeStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeStmt) ProtoMessage() {}

func (x *RangeStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeStmt.ProtoReflect.Descriptor instead.
func (*RangeStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{60}
}

func (x *RangeStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *RangeStmt) GetStaticBlock() *StaticBlock {
	if x != nil {
		return x.StaticBlock
	}
	return nil
}

func (x *RangeStmt) GetX() *anypb.Any {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *RangeStmt) GetKey() *anypb.Any {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *RangeStmt) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *RangeStmt) GetOp() int64 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *RangeStmt) GetBody() []*anypb.Any {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *RangeStmt) GetIsMap() bool {
	if x != nil {
		return x.IsMap
	}
	return false
}

func (x *RangeStmt) GetIsString() bool {
	if x != nil {
		return x.IsString
	}
	return false
}

func (x *RangeStmt) GetIsArrayPtr() bool {
	if x != nil {
		return x.IsArrayPtr
	}
	return false
}

type ReturnStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes  `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Results    []*anypb.Any `protobuf:"bytes,2,rep,name=Results,proto3" json:"Results,omitempty"`
}

func (x *ReturnStmt) Reset() {
	*x = ReturnStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnStmt) ProtoMessage() {}

func (x *ReturnStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnStmt.ProtoReflect.Descriptor instead.
func (*ReturnStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{61}
}

func (x *ReturnStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ReturnStmt) GetResults() []*anypb.Any {
	if x != nil {
		return x.Results
	}
	return nil
}

type PanicStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Exception  *anypb.Any  `protobuf:"bytes,2,opt,name=Exception,proto3" json:"Exception,omitempty"`
}

func (x *PanicStmt) Reset() {
	*x = PanicStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PanicStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PanicStmt) ProtoMessage() {}

func (x *PanicStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PanicStmt.ProtoReflect.Descriptor instead.
func (*PanicStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{62}
}

func (x *PanicStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *PanicStmt) GetException() *anypb.Any {
	if x != nil {
		return x.Exception
	}
	return nil
}

type SelectStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes       `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Cases      []*SelectCaseStmt `protobuf:"bytes,2,rep,name=Cases,proto3" json:"Cases,omitempty"`
}

func (x *SelectStmt) Reset() {
	*x = SelectStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectStmt) ProtoMessage() {}

func (x *SelectStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectStmt.ProtoReflect.Descriptor instead.
func (*SelectStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{63}
}

func (x *SelectStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *SelectStmt) GetCases() []*SelectCaseStmt {
	if x != nil {
		return x.Cases
	}
	return nil
}

type SelectCaseStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes  *Attributes  `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	StaticBlock *StaticBlock `protobuf:"bytes,2,opt,name=StaticBlock,proto3" json:"StaticBlock,omitempty"`
	Comm        *anypb.Any   `protobuf:"bytes,3,opt,name=Comm,proto3" json:"Comm,omitempty"`
	Body        []*anypb.Any `protobuf:"bytes,4,rep,name=Body,proto3" json:"Body,omitempty"`
}

func (x *SelectCaseStmt) Reset() {
	*x = SelectCaseStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectCaseStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectCaseStmt) ProtoMessage() {}

func (x *SelectCaseStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectCaseStmt.ProtoReflect.Descriptor instead.
func (*SelectCaseStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{64}
}

func (x *SelectCaseStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *SelectCaseStmt) GetStaticBlock() *StaticBlock {
	if x != nil {
		return x.StaticBlock
	}
	return nil
}

func (x *SelectCaseStmt) GetComm() *anypb.Any {
	if x != nil {
		return x.Comm
	}
	return nil
}

func (x *SelectCaseStmt) GetBody() []*anypb.Any {
	if x != nil {
		return x.Body
	}
	return nil
}

type SendStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Chan       *anypb.Any  `protobuf:"bytes,2,opt,name=Chan,proto3" json:"Chan,omitempty"`
	Value      *anypb.Any  `protobuf:"bytes,3,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *SendStmt) Reset() {
	*x = SendStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendStmt) ProtoMessage() {}

func (x *SendStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendStmt.ProtoReflect.Descriptor instead.
func (*SendStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{65}
}

func (x *SendStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *SendStmt) GetChan() *anypb.Any {
	if x != nil {
		return x.Chan
	}
	return nil
}

func (x *SendStmt) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

type SwitchStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes   *Attributes         `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	StaticBlock  *StaticBlock        `protobuf:"bytes,2,opt,name=StaticBlock,proto3" json:"StaticBlock,omitempty"`
	Init         *anypb.Any          `protobuf:"bytes,3,opt,name=Init,proto3" json:"Init,omitempty"`
	X            *anypb.Any          `protobuf:"bytes,4,opt,name=X,proto3" json:"X,omitempty"`
	IsTypeSwitch bool                `protobuf:"varint,5,opt,name=IsTypeSwitch,proto3" json:"IsTypeSwitch,omitempty"`
	Clauses      []*SwitchClauseStmt `protobuf:"bytes,6,rep,name=Clauses,proto3" json:"Clauses,omitempty"`
	VarName      string              `protobuf:"bytes,7,opt,name=VarName,proto3" json:"VarName,omitempty"`
}

func (x *SwitchStmt) Reset() {
	*x = SwitchStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchStmt) ProtoMessage() {}

func (x *SwitchStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchStmt.ProtoReflect.Descriptor instead.
func (*SwitchStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{66}
}

func (x *SwitchStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *SwitchStmt) GetStaticBlock() *StaticBlock {
	if x != nil {
		return x.StaticBlock
	}
	return nil
}

func (x *SwitchStmt) GetInit() *anypb.Any {
	if x != nil {
		return x.Init
	}
	return nil
}

func (x *SwitchStmt) GetX() *anypb.Any {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *SwitchStmt) GetIsTypeSwitch() bool {
	if x != nil {
		return x.IsTypeSwitch
	}
	return false
}

func (x *SwitchStmt) GetClauses() []*SwitchClauseStmt {
	if x != nil {
		return x.Clauses
	}
	return nil
}

func (x *SwitchStmt) GetVarName() string {
	if x != nil {
		return x.VarName
	}
	return ""
}

type SwitchClauseStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes  *Attributes  `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	StaticBlock *StaticBlock `protobuf:"bytes,2,opt,name=StaticBlock,proto3" json:"StaticBlock,omitempty"`
	Cases       []*anypb.Any `protobuf:"bytes,3,rep,name=Cases,proto3" json:"Cases,omitempty"`
	Body        []*anypb.Any `protobuf:"bytes,4,rep,name=Body,proto3" json:"Body,omitempty"`
}

func (x *SwitchClauseStmt) Reset() {
	*x = SwitchClauseStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchClauseStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchClauseStmt) ProtoMessage() {}

func (x *SwitchClauseStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchClauseStmt.ProtoReflect.Descriptor instead.
func (*SwitchClauseStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{67}
}

func (x *SwitchClauseStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *SwitchClauseStmt) GetStaticBlock() *StaticBlock {
	if x != nil {
		return x.StaticBlock
	}
	return nil
}

func (x *SwitchClauseStmt) GetCases() []*anypb.Any {
	if x != nil {
		return x.Cases
	}
	return nil
}

func (x *SwitchClauseStmt) GetBody() []*anypb.Any {
	if x != nil {
		return x.Body
	}
	return nil
}

type EmptyStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
}

func (x *EmptyStmt) Reset() {
	*x = EmptyStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyStmt) ProtoMessage() {}

func (x *EmptyStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyStmt.ProtoReflect.Descriptor instead.
func (*EmptyStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{68}
}

func (x *EmptyStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type BodyStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes    *Attributes  `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	Body          []*anypb.Any `protobuf:"bytes,2,rep,name=Body,proto3" json:"Body,omitempty"`
	BodyLen       int64        `protobuf:"zigzag64,3,opt,name=BodyLen,proto3" json:"BodyLen,omitempty"`
	NextBodyIndex int64        `protobuf:"zigzag64,4,opt,name=NextBodyIndex,proto3" json:"NextBodyIndex,omitempty"`
	NumOps        int64        `protobuf:"zigzag64,5,opt,name=NumOps,proto3" json:"NumOps,omitempty"`
	NumValues     int64        `protobuf:"zigzag64,6,opt,name=NumValues,proto3" json:"NumValues,omitempty"`
	NumExprs      int64        `protobuf:"zigzag64,7,opt,name=NumExprs,proto3" json:"NumExprs,omitempty"`
	NumStmts      int64        `protobuf:"zigzag64,8,opt,name=NumStmts,proto3" json:"NumStmts,omitempty"`
	Cond          *anypb.Any   `protobuf:"bytes,9,opt,name=Cond,proto3" json:"Cond,omitempty"`
	Post          *anypb.Any   `protobuf:"bytes,10,opt,name=Post,proto3" json:"Post,omitempty"`
	Active        *anypb.Any   `protobuf:"bytes,11,opt,name=Active,proto3" json:"Active,omitempty"`
	Key           *anypb.Any   `protobuf:"bytes,12,opt,name=Key,proto3" json:"Key,omitempty"`
	Value         *anypb.Any   `protobuf:"bytes,13,opt,name=Value,proto3" json:"Value,omitempty"`
	Op            int64        `protobuf:"zigzag64,14,opt,name=Op,proto3" json:"Op,omitempty"`
	ListLen       int64        `protobuf:"zigzag64,15,opt,name=ListLen,proto3" json:"ListLen,omitempty"`
	ListIndex     int64        `protobuf:"zigzag64,16,opt,name=ListIndex,proto3" json:"ListIndex,omitempty"`
	NextItem      *MapListItem `protobuf:"bytes,17,opt,name=NextItem,proto3" json:"NextItem,omitempty"`
	StrLen        int64        `protobuf:"zigzag64,18,opt,name=StrLen,proto3" json:"StrLen,omitempty"`
	StrIndex      int64        `protobuf:"zigzag64,19,opt,name=StrIndex,proto3" json:"StrIndex,omitempty"`
	NextRune      int32        `protobuf:"zigzag32,20,opt,name=NextRune,proto3" json:"NextRune,omitempty"`
}

func (x *BodyStmt) Reset() {
	*x = BodyStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BodyStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BodyStmt) ProtoMessage() {}

func (x *BodyStmt) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BodyStmt.ProtoReflect.Descriptor instead.
func (*BodyStmt) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{69}
}

func (x *BodyStmt) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *BodyStmt) GetBody() []*anypb.Any {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *BodyStmt) GetBodyLen() int64 {
	if x != nil {
		return x.BodyLen
	}
	return 0
}

func (x *BodyStmt) GetNextBodyIndex() int64 {
	if x != nil {
		return x.NextBodyIndex
	}
	return 0
}

func (x *BodyStmt) GetNumOps() int64 {
	if x != nil {
		return x.NumOps
	}
	return 0
}

func (x *BodyStmt) GetNumValues() int64 {
	if x != nil {
		return x.NumValues
	}
	return 0
}

func (x *BodyStmt) GetNumExprs() int64 {
	if x != nil {
		return x.NumExprs
	}
	return 0
}

func (x *BodyStmt) GetNumStmts() int64 {
	if x != nil {
		return x.NumStmts
	}
	return 0
}

func (x *BodyStmt) GetCond() *anypb.Any {
	if x != nil {
		return x.Cond
	}
	return nil
}

func (x *BodyStmt) GetPost() *anypb.Any {
	if x != nil {
		return x.Post
	}
	return nil
}

func (x *BodyStmt) GetActive() *anypb.Any {
	if x != nil {
		return x.Active
	}
	return nil
}

func (x *BodyStmt) GetKey() *anypb.Any {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *BodyStmt) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *BodyStmt) GetOp() int64 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *BodyStmt) GetListLen() int64 {
	if x != nil {
		return x.ListLen
	}
	return 0
}

func (x *BodyStmt) GetListIndex() int64 {
	if x != nil {
		return x.ListIndex
	}
	return 0
}

func (x *BodyStmt) GetNextItem() *MapListItem {
	if x != nil {
		return x.NextItem
	}
	return nil
}

func (x *BodyStmt) GetStrLen() int64 {
	if x != nil {
		return x.StrLen
	}
	return 0
}

func (x *BodyStmt) GetStrIndex() int64 {
	if x != nil {
		return x.StrIndex
	}
	return 0
}

func (x *BodyStmt) GetNextRune() int32 {
	if x != nil {
		return x.NextRune
	}
	return 0
}

type FuncDecl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes  *Attributes    `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	StaticBlock *StaticBlock   `protobuf:"bytes,2,opt,name=StaticBlock,proto3" json:"StaticBlock,omitempty"`
	NameExpr    *NameExpr      `protobuf:"bytes,3,opt,name=NameExpr,proto3" json:"NameExpr,omitempty"`
	IsMethod    bool           `protobuf:"varint,4,opt,name=IsMethod,proto3" json:"IsMethod,omitempty"`
	Recv        *FieldTypeExpr `protobuf:"bytes,5,opt,name=Recv,proto3" json:"Recv,omitempty"`
	Type        *FuncTypeExpr  `protobuf:"bytes,6,opt,name=Type,proto3" json:"Type,omitempty"`
	Body        []*anypb.Any   `protobuf:"bytes,7,rep,name=Body,proto3" json:"Body,omitempty"`
}

func (x *FuncDecl) Reset() {
	*x = FuncDecl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuncDecl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncDecl) ProtoMessage() {}

func (x *FuncDecl) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncDecl.ProtoReflect.Descriptor instead.
func (*FuncDecl) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{70}
}

func (x *FuncDecl) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *FuncDecl) GetStaticBlock() *StaticBlock {
	if x != nil {
		return x.StaticBlock
	}
	return nil
}

func (x *FuncDecl) GetNameExpr() *NameExpr {
	if x != nil {
		return x.NameExpr
	}
	return nil
}

func (x *FuncDecl) GetIsMethod() bool {
	if x != nil {
		return x.IsMethod
	}
	return false
}

func (x *FuncDecl) GetRecv() *FieldTypeExpr {
	if x != nil {
		return x.Recv
	}
	return nil
}

func (x *FuncDecl) GetType() *FuncTypeExpr {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *FuncDecl) GetBody() []*anypb.Any {
	if x != nil {
		return x.Body
	}
	return nil
}

type ImportDecl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	NameExpr   *NameExpr   `protobuf:"bytes,2,opt,name=NameExpr,proto3" json:"NameExpr,omitempty"`
	PkgPath    string      `protobuf:"bytes,3,opt,name=PkgPath,proto3" json:"PkgPath,omitempty"`
}

func (x *ImportDecl) Reset() {
	*x = ImportDecl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportDecl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportDecl) ProtoMessage() {}

func (x *ImportDecl) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportDecl.ProtoReflect.Descriptor instead.
func (*ImportDecl) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{71}
}

func (x *ImportDecl) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ImportDecl) GetNameExpr() *NameExpr {
	if x != nil {
		return x.NameExpr
	}
	return nil
}

func (x *ImportDecl) GetPkgPath() string {
	if x != nil {
		return x.PkgPath
	}
	return ""
}

type ValueDecl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes  `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	NameExprs  []*NameExpr  `protobuf:"bytes,2,rep,name=NameExprs,proto3" json:"NameExprs,omitempty"`
	Type       *anypb.Any   `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
	Values     []*anypb.Any `protobuf:"bytes,4,rep,name=Values,proto3" json:"Values,omitempty"`
	Const      bool         `protobuf:"varint,5,opt,name=Const,proto3" json:"Const,omitempty"`
}

func (x *ValueDecl) Reset() {
	*x = ValueDecl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueDecl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueDecl) ProtoMessage() {}

func (x *ValueDecl) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueDecl.ProtoReflect.Descriptor instead.
func (*ValueDecl) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{72}
}

func (x *ValueDecl) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ValueDecl) GetNameExprs() []*NameExpr {
	if x != nil {
		return x.NameExprs
	}
	return nil
}

func (x *ValueDecl) GetType() *anypb.Any {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *ValueDecl) GetValues() []*anypb.Any {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ValueDecl) GetConst() bool {
	if x != nil {
		return x.Const
	}
	return false
}

type TypeDecl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	NameExpr   *NameExpr   `protobuf:"bytes,2,opt,name=NameExpr,proto3" json:"NameExpr,omitempty"`
	Type       *anypb.Any  `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
	IsAlias    bool        `protobuf:"varint,4,opt,name=IsAlias,proto3" json:"IsAlias,omitempty"`
}

func (x *TypeDecl) Reset() {
	*x = TypeDecl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeDecl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeDecl) ProtoMessage() {}

func (x *TypeDecl) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeDecl.ProtoReflect.Descriptor instead.
func (*TypeDecl) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{73}
}

func (x *TypeDecl) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *TypeDecl) GetNameExpr() *NameExpr {
	if x != nil {
		return x.NameExpr
	}
	return nil
}

func (x *TypeDecl) GetType() *anypb.Any {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *TypeDecl) GetIsAlias() bool {
	if x != nil {
		return x.IsAlias
	}
	return false
}

type StaticBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block    *Block       `protobuf:"bytes,1,opt,name=Block,proto3" json:"Block,omitempty"`
	Types    []*anypb.Any `protobuf:"bytes,2,rep,name=Types,proto3" json:"Types,omitempty"`
	NumNames uint32       `protobuf:"varint,3,opt,name=NumNames,proto3" json:"NumNames,omitempty"`
	Names    []string     `protobuf:"bytes,4,rep,name=Names,proto3" json:"Names,omitempty"`
	Consts   []string     `protobuf:"bytes,5,rep,name=Consts,proto3" json:"Consts,omitempty"`
	Externs  []string     `protobuf:"bytes,6,rep,name=Externs,proto3" json:"Externs,omitempty"`
	Loc      *Location    `protobuf:"bytes,7,opt,name=Loc,proto3" json:"Loc,omitempty"`
}

func (x *StaticBlock) Reset() {
	*x = StaticBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaticBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticBlock) ProtoMessage() {}

func (x *StaticBlock) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticBlock.ProtoReflect.Descriptor instead.
func (*StaticBlock) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{74}
}

func (x *StaticBlock) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *StaticBlock) GetTypes() []*anypb.Any {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *StaticBlock) GetNumNames() uint32 {
	if x != nil {
		return x.NumNames
	}
	return 0
}

func (x *StaticBlock) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *StaticBlock) GetConsts() []string {
	if x != nil {
		return x.Consts
	}
	return nil
}

func (x *StaticBlock) GetExterns() []string {
	if x != nil {
		return x.Externs
	}
	return nil
}

func (x *StaticBlock) GetLoc() *Location {
	if x != nil {
		return x.Loc
	}
	return nil
}

type FileSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*FileNode `protobuf:"bytes,1,rep,name=Files,proto3" json:"Files,omitempty"`
}

func (x *FileSet) Reset() {
	*x = FileSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSet) ProtoMessage() {}

func (x *FileSet) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSet.ProtoReflect.Descriptor instead.
func (*FileSet) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{75}
}

func (x *FileSet) GetFiles() []*FileNode {
	if x != nil {
		return x.Files
	}
	return nil
}

type FileNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes  *Attributes  `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	StaticBlock *StaticBlock `protobuf:"bytes,2,opt,name=StaticBlock,proto3" json:"StaticBlock,omitempty"`
	Name        string       `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	PkgName     string       `protobuf:"bytes,4,opt,name=PkgName,proto3" json:"PkgName,omitempty"`
	Decls       []*anypb.Any `protobuf:"bytes,5,rep,name=Decls,proto3" json:"Decls,omitempty"`
}

func (x *FileNode) Reset() {
	*x = FileNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileNode) ProtoMessage() {}

func (x *FileNode) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileNode.ProtoReflect.Descriptor instead.
func (*FileNode) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{76}
}

func (x *FileNode) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *FileNode) GetStaticBlock() *StaticBlock {
	if x != nil {
		return x.StaticBlock
	}
	return nil
}

func (x *FileNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileNode) GetPkgName() string {
	if x != nil {
		return x.PkgName
	}
	return ""
}

func (x *FileNode) GetDecls() []*anypb.Any {
	if x != nil {
		return x.Decls
	}
	return nil
}

type PackageNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes  *Attributes  `protobuf:"bytes,1,opt,name=Attributes,proto3" json:"Attributes,omitempty"`
	StaticBlock *StaticBlock `protobuf:"bytes,2,opt,name=StaticBlock,proto3" json:"StaticBlock,omitempty"`
	PkgPath     string       `protobuf:"bytes,3,opt,name=PkgPath,proto3" json:"PkgPath,omitempty"`
	PkgName     string       `protobuf:"bytes,4,opt,name=PkgName,proto3" json:"PkgName,omitempty"`
	FileSet     *FileSet     `protobuf:"bytes,5,opt,name=FileSet,proto3" json:"FileSet,omitempty"`
}

func (x *PackageNode) Reset() {
	*x = PackageNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageNode) ProtoMessage() {}

func (x *PackageNode) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageNode.ProtoReflect.Descriptor instead.
func (*PackageNode) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{77}
}

func (x *PackageNode) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *PackageNode) GetStaticBlock() *StaticBlock {
	if x != nil {
		return x.StaticBlock
	}
	return nil
}

func (x *PackageNode) GetPkgPath() string {
	if x != nil {
		return x.PkgPath
	}
	return ""
}

func (x *PackageNode) GetPkgName() string {
	if x != nil {
		return x.PkgName
	}
	return ""
}

func (x *PackageNode) GetFileSet() *FileSet {
	if x != nil {
		return x.FileSet
	}
	return nil
}

type RefNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location  *Location  `protobuf:"bytes,1,opt,name=Location,proto3" json:"Location,omitempty"`
	BlockNode *anypb.Any `protobuf:"bytes,2,opt,name=BlockNode,proto3" json:"BlockNode,omitempty"`
}

func (x *RefNode) Reset() {
	*x = RefNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefNode) ProtoMessage() {}

func (x *RefNode) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefNode.ProtoReflect.Descriptor instead.
func (*RefNode) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{78}
}

func (x *RefNode) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *RefNode) GetBlockNode() *anypb.Any {
	if x != nil {
		return x.BlockNode
	}
	return nil
}

type PrimitiveType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"zigzag64,1,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *PrimitiveType) Reset() {
	*x = PrimitiveType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrimitiveType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimitiveType) ProtoMessage() {}

func (x *PrimitiveType) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimitiveType.ProtoReflect.Descriptor instead.
func (*PrimitiveType) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{79}
}

func (x *PrimitiveType) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type PointerType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elt *anypb.Any `protobuf:"bytes,1,opt,name=Elt,proto3" json:"Elt,omitempty"`
}

func (x *PointerType) Reset() {
	*x = PointerType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointerType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointerType) ProtoMessage() {}

func (x *PointerType) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointerType.ProtoReflect.Descriptor instead.
func (*PointerType) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{80}
}

func (x *PointerType) GetElt() *anypb.Any {
	if x != nil {
		return x.Elt
	}
	return nil
}

type ArrayType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Len int64      `protobuf:"zigzag64,1,opt,name=Len,proto3" json:"Len,omitempty"`
	Elt *anypb.Any `protobuf:"bytes,2,opt,name=Elt,proto3" json:"Elt,omitempty"`
	Vrd bool       `protobuf:"varint,3,opt,name=Vrd,proto3" json:"Vrd,omitempty"`
}

func (x *ArrayType) Reset() {
	*x = ArrayType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayType) ProtoMessage() {}

func (x *ArrayType) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayType.ProtoReflect.Descriptor instead.
func (*ArrayType) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{81}
}

func (x *ArrayType) GetLen() int64 {
	if x != nil {
		return x.Len
	}
	return 0
}

func (x *ArrayType) GetElt() *anypb.Any {
	if x != nil {
		return x.Elt
	}
	return nil
}

func (x *ArrayType) GetVrd() bool {
	if x != nil {
		return x.Vrd
	}
	return false
}

type SliceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elt *anypb.Any `protobuf:"bytes,1,opt,name=Elt,proto3" json:"Elt,omitempty"`
	Vrd bool       `protobuf:"varint,2,opt,name=Vrd,proto3" json:"Vrd,omitempty"`
}

func (x *SliceType) Reset() {
	*x = SliceType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SliceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SliceType) ProtoMessage() {}

func (x *SliceType) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SliceType.ProtoReflect.Descriptor instead.
func (*SliceType) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{82}
}

func (x *SliceType) GetElt() *anypb.Any {
	if x != nil {
		return x.Elt
	}
	return nil
}

func (x *SliceType) GetVrd() bool {
	if x != nil {
		return x.Vrd
	}
	return false
}

type StructType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PkgPath string       `protobuf:"bytes,1,opt,name=PkgPath,proto3" json:"PkgPath,omitempty"`
	Fields  []*FieldType `protobuf:"bytes,2,rep,name=Fields,proto3" json:"Fields,omitempty"`
}

func (x *StructType) Reset() {
	*x = StructType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StructType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructType) ProtoMessage() {}

func (x *StructType) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructType.ProtoReflect.Descriptor instead.
func (*StructType) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{83}
}

func (x *StructType) GetPkgPath() string {
	if x != nil {
		return x.PkgPath
	}
	return ""
}

func (x *StructType) GetFields() []*FieldType {
	if x != nil {
		return x.Fields
	}
	return nil
}

type FieldType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string     `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Type     *anypb.Any `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Embedded bool       `protobuf:"varint,3,opt,name=Embedded,proto3" json:"Embedded,omitempty"`
	Tag      string     `protobuf:"bytes,4,opt,name=Tag,proto3" json:"Tag,omitempty"`
}

func (x *FieldType) Reset() {
	*x = FieldType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldType) ProtoMessage() {}

func (x *FieldType) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldType.ProtoReflect.Descriptor instead.
func (*FieldType) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{84}
}

func (x *FieldType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FieldType) GetType() *anypb.Any {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *FieldType) GetEmbedded() bool {
	if x != nil {
		return x.Embedded
	}
	return false
}

func (x *FieldType) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type FuncType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params  []*FieldType `protobuf:"bytes,1,rep,name=Params,proto3" json:"Params,omitempty"`
	Results []*FieldType `protobuf:"bytes,2,rep,name=Results,proto3" json:"Results,omitempty"`
}

func (x *FuncType) Reset() {
	*x = FuncType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuncType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncType) ProtoMessage() {}

func (x *FuncType) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncType.ProtoReflect.Descriptor instead.
func (*FuncType) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{85}
}

func (x *FuncType) GetParams() []*FieldType {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *FuncType) GetResults() []*FieldType {
	if x != nil {
		return x.Results
	}
	return nil
}

type MapType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *anypb.Any `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value *anypb.Any `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *MapType) Reset() {
	*x = MapType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapType) ProtoMessage() {}

func (x *MapType) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapType.ProtoReflect.Descriptor instead.
func (*MapType) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{86}
}

func (x *MapType) GetKey() *anypb.Any {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *MapType) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

type InterfaceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PkgPath string       `protobuf:"bytes,1,opt,name=PkgPath,proto3" json:"PkgPath,omitempty"`
	Methods []*FieldType `protobuf:"bytes,2,rep,name=Methods,proto3" json:"Methods,omitempty"`
	Generic string       `protobuf:"bytes,3,opt,name=Generic,proto3" json:"Generic,omitempty"`
}

func (x *InterfaceType) Reset() {
	*x = InterfaceType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceType) ProtoMessage() {}

func (x *InterfaceType) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceType.ProtoReflect.Descriptor instead.
func (*InterfaceType) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{87}
}

func (x *InterfaceType) GetPkgPath() string {
	if x != nil {
		return x.PkgPath
	}
	return ""
}

func (x *InterfaceType) GetMethods() []*FieldType {
	if x != nil {
		return x.Methods
	}
	return nil
}

func (x *InterfaceType) GetGeneric() string {
	if x != nil {
		return x.Generic
	}
	return ""
}

type TypeType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TypeType) Reset() {
	*x = TypeType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeType) ProtoMessage() {}

func (x *TypeType) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeType.ProtoReflect.Descriptor instead.
func (*TypeType) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{88}
}

type DeclaredType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PkgPath string        `protobuf:"bytes,1,opt,name=PkgPath,proto3" json:"PkgPath,omitempty"`
	Name    string        `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Base    *anypb.Any    `protobuf:"bytes,3,opt,name=Base,proto3" json:"Base,omitempty"`
	Methods []*TypedValue `protobuf:"bytes,4,rep,name=Methods,proto3" json:"Methods,omitempty"`
}

func (x *DeclaredType) Reset() {
	*x = DeclaredType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclaredType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclaredType) ProtoMessage() {}

func (x *DeclaredType) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclaredType.ProtoReflect.Descriptor instead.
func (*DeclaredType) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{89}
}

func (x *DeclaredType) GetPkgPath() string {
	if x != nil {
		return x.PkgPath
	}
	return ""
}

func (x *DeclaredType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeclaredType) GetBase() *anypb.Any {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *DeclaredType) GetMethods() []*TypedValue {
	if x != nil {
		return x.Methods
	}
	return nil
}

type PackageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PackageType) Reset() {
	*x = PackageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageType) ProtoMessage() {}

func (x *PackageType) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageType.ProtoReflect.Descriptor instead.
func (*PackageType) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{90}
}

type ChanType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dir int64      `protobuf:"zigzag64,1,opt,name=Dir,proto3" json:"Dir,omitempty"`
	Elt *anypb.Any `protobuf:"bytes,2,opt,name=Elt,proto3" json:"Elt,omitempty"`
}

func (x *ChanType) Reset() {
	*x = ChanType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChanType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChanType) ProtoMessage() {}

func (x *ChanType) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChanType.ProtoReflect.Descriptor instead.
func (*ChanType) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{91}
}

func (x *ChanType) GetDir() int64 {
	if x != nil {
		return x.Dir
	}
	return 0
}

func (x *ChanType) GetElt() *anypb.Any {
	if x != nil {
		return x.Elt
	}
	return nil
}

type BlockType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BlockType) Reset() {
	*x = BlockType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockType) ProtoMessage() {}

func (x *BlockType) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockType.ProtoReflect.Descriptor instead.
func (*BlockType) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{92}
}

type TupleType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elts []*anypb.Any `protobuf:"bytes,1,rep,name=Elts,proto3" json:"Elts,omitempty"`
}

func (x *TupleType) Reset() {
	*x = TupleType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TupleType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TupleType) ProtoMessage() {}

func (x *TupleType) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TupleType.ProtoReflect.Descriptor instead.
func (*TupleType) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{93}
}

func (x *TupleType) GetElts() []*anypb.Any {
	if x != nil {
		return x.Elts
	}
	return nil
}

type RefType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *RefType) Reset() {
	*x = RefType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gnolang_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefType) ProtoMessage() {}

func (x *RefType) ProtoReflect() protoreflect.Message {
	mi := &file_gnolang_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefType.ProtoReflect.Descriptor instead.
func (*RefType) Descriptor() ([]byte, []int) {
	return file_gnolang_proto_rawDescGZIP(), []int{94}
}

func (x *RefType) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

var File_gnolang_proto protoreflect.FileDescriptor

var file_gnolang_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x67, 0x6e, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x67, 0x6e, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x62, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a,
	0x01, 0x54, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x01,
	0x54, 0x12, 0x22, 0x0a, 0x01, 0x56, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x01, 0x56, 0x12, 0x0c, 0x0a, 0x01, 0x4e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x01, 0x4e, 0x22, 0x23, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x23, 0x0a, 0x0b, 0x42, 0x69, 0x67, 0x69,
	0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x23, 0x0a,
	0x0b, 0x42, 0x69, 0x67, 0x64, 0x65, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x0c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x02, 0x54, 0x56, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x02, 0x54, 0x56, 0x12, 0x28, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x22, 0x76, 0x0a, 0x0a, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x7e, 0x0a, 0x0a, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a,
	0x04, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x78, 0x63, 0x61,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x4d, 0x61, 0x78, 0x63, 0x61, 0x70, 0x22,
	0x67, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2f,
	0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x27, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xf9, 0x01, 0x0a, 0x09, 0x46, 0x75, 0x6e,
	0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2c, 0x0a, 0x06,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x07, 0x43, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x43, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x6b,
	0x67, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x6b, 0x67,
	0x50, 0x61, 0x74, 0x68, 0x22, 0x5d, 0x0a, 0x08, 0x4d, 0x61, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x2f, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x20, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x4d, 0x61, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x2f, 0x0a, 0x07, 0x4d, 0x61, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67,
	0x6e, 0x6f, 0x2e, 0x4d, 0x61, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x0b, 0x4d, 0x61, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x21, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x94, 0x01,
	0x0a, 0x10, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x04, 0x46, 0x75, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x04, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x2b, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x22, 0x35, 0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0xe7, 0x01, 0x0a, 0x0c,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2f, 0x0a, 0x0a,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a,
	0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x6b, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x6b, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x6b, 0x67, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x6b, 0x67, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x46, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x46,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x46, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x46, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0xe4, 0x01, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x2f, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2c, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x27,
	0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x42, 0x6c, 0x61, 0x6e, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x42, 0x6c, 0x61, 0x6e, 0x6b, 0x22, 0x6e, 0x0a, 0x08,
	0x52, 0x65, 0x66, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x50, 0x6b, 0x67, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x50, 0x6b, 0x67, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x22, 0x20, 0x0a, 0x08,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9e,
	0x01, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4d,
	0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x4d, 0x6f,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x66, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x52, 0x65, 0x66, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x64, 0x22,
	0x21, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x1f, 0x0a, 0x07, 0x48, 0x61, 0x73, 0x68, 0x6c, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x5f, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x65, 0x70, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x44, 0x65, 0x70, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x50, 0x6b, 0x67, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x50, 0x6b, 0x67, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x69,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x04, 0x4c, 0x69,
	0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x36, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x04, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x22, 0x73, 0x0a, 0x08, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x72, 0x12, 0x2f, 0x0a, 0x0a,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6e,
	0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x04, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x69, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x69, 0x63, 0x4c, 0x69,
	0x74, 0x45, 0x78, 0x70, 0x72, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xa3, 0x01, 0x0a, 0x0a, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x78, 0x70, 0x72, 0x12,
	0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x28, 0x0a, 0x04, 0x4c, 0x65, 0x66, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x4f, 0x70, 0x12, 0x2a, 0x0a, 0x05, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x05, 0x52, 0x69, 0x67, 0x68, 0x74, 0x22, 0xbd, 0x01, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x45,
	0x78, 0x70, 0x72, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x46, 0x75, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x28,
	0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x04, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x56, 0x61, 0x72, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x56, 0x61, 0x72, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x4e, 0x75, 0x6d, 0x41, 0x72, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x4e,
	0x75, 0x6d, 0x41, 0x72, 0x67, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x09, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x45, 0x78, 0x70, 0x72, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x01, 0x58, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x01, 0x58, 0x12, 0x2a, 0x0a, 0x05, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x48, 0x61, 0x73, 0x4f, 0x4b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x48, 0x61, 0x73, 0x4f, 0x4b, 0x22, 0x99, 0x01, 0x0a, 0x0c,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x78, 0x70, 0x72, 0x12, 0x2f, 0x0a, 0x0a,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a,
	0x01, 0x58, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x01,
	0x58, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x53, 0x65, 0x6c, 0x22, 0xda, 0x01, 0x0a, 0x09, 0x53, 0x6c, 0x69, 0x63,
	0x65, 0x45, 0x78, 0x70, 0x72, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x01, 0x58, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x01, 0x58, 0x12, 0x26, 0x0a, 0x03, 0x4c, 0x6f,
	0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x4c,
	0x6f, 0x77, 0x12, 0x28, 0x0a, 0x04, 0x48, 0x69, 0x67, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x48, 0x69, 0x67, 0x68, 0x12, 0x26, 0x0a, 0x03,
	0x4d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x03, 0x4d, 0x61, 0x78, 0x22, 0x5f, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x72,
	0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x01, 0x58, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x01, 0x58, 0x22, 0x5e, 0x0a, 0x07, 0x52, 0x65, 0x66, 0x45, 0x78, 0x70, 0x72,
	0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x01, 0x58, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x01, 0x58, 0x22, 0xa5, 0x01, 0x0a, 0x0e, 0x54, 0x79, 0x70, 0x65, 0x41, 0x73,
	0x73, 0x65, 0x72, 0x74, 0x45, 0x78, 0x70, 0x72, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67,
	0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x01, 0x58, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x01, 0x58, 0x12, 0x28, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x48, 0x61, 0x73, 0x4f, 0x4b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x48, 0x61, 0x73, 0x4f, 0x4b, 0x22, 0x70, 0x0a,
	0x09, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x78, 0x70, 0x72, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x01, 0x58,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x01, 0x58, 0x12,
	0x0e, 0x0a, 0x02, 0x4f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x4f, 0x70, 0x22,
	0x94, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x74,
	0x45, 0x78, 0x70, 0x72, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x25, 0x0a, 0x04, 0x45, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x67, 0x6e, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x78, 0x70, 0x72,
	0x52, 0x04, 0x45, 0x6c, 0x74, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x0c, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x45, 0x78, 0x70, 0x72, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e,
	0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x4b, 0x65, 0x79,
	0x12, 0x2a, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc3, 0x01, 0x0a,
	0x0b, 0x46, 0x75, 0x6e, 0x63, 0x4c, 0x69, 0x74, 0x45, 0x78, 0x70, 0x72, 0x12, 0x2f, 0x0a, 0x0a,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a,
	0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x25, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78,
	0x70, 0x72, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x42, 0x6f,
	0x64, 0x79, 0x22, 0x9b, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x45, 0x78, 0x70, 0x72,
	0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x2c, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x2f, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xa6, 0x01, 0x0a, 0x0d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78,
	0x70, 0x72, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x26, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x54, 0x61, 0x67, 0x22, 0x90, 0x01, 0x0a, 0x0d, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x70, 0x72, 0x12, 0x2f, 0x0a, 0x0a, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x03,
	0x4c, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x03, 0x4c, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x03, 0x45, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x45, 0x6c, 0x74, 0x22, 0x7a, 0x0a, 0x0d,
	0x53, 0x6c, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x70, 0x72, 0x12, 0x2f, 0x0a,
	0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x26,
	0x0a, 0x03, 0x45, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x03, 0x45, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x72, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x56, 0x72, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x11, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x70, 0x72, 0x12, 0x2f,
	0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x2c, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x45, 0x78, 0x70, 0x72, 0x52, 0x07, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x22, 0x7d, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x45, 0x78, 0x70, 0x72, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e,
	0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x69, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x03, 0x44, 0x69, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x0c, 0x46, 0x75, 0x6e, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x45, 0x78, 0x70, 0x72, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e,
	0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x70, 0x72, 0x52, 0x06, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x70, 0x72, 0x52, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x0b, 0x4d, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78,
	0x70, 0x72, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6d, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x70, 0x72, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6e, 0x6f,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x70, 0x72, 0x52, 0x06,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x70, 0x72, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67,
	0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x70, 0x0a, 0x13, 0x4d, 0x61, 0x79, 0x62, 0x65, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x70, 0x72, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67,
	0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x0a, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x53, 0x74,
	0x6d, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x03, 0x4c, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x4c, 0x68, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x4f,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x4f, 0x70, 0x12, 0x26, 0x0a, 0x03, 0x52,
	0x68, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03,
	0x52, 0x68, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6d,
	0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79,
	0x22, 0x97, 0x01, 0x0a, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x53, 0x74, 0x6d, 0x74, 0x12,
	0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x4f, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x65, 0x70, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x44, 0x65, 0x70, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09,
	0x42, 0x6f, 0x64, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x09, 0x42, 0x6f, 0x64, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x65, 0x0a, 0x08, 0x44, 0x65,
	0x63, 0x6c, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f,
	0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x42, 0x6f, 0x64,
	0x79, 0x22, 0x5f, 0x0a, 0x09, 0x44, 0x65, 0x66, 0x65, 0x72, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x2f,
	0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x21, 0x0a, 0x04, 0x43, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x67, 0x6e, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x45, 0x78, 0x70, 0x72, 0x52, 0x04, 0x43, 0x61,
	0x6c, 0x6c, 0x22, 0x5f, 0x0a, 0x08, 0x45, 0x78, 0x70, 0x72, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x2f,
	0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x01, 0x58, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x01, 0x58, 0x22, 0x96, 0x02, 0x0a, 0x07, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x6d, 0x74, 0x12,
	0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x32, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x28,
	0x0a, 0x04, 0x43, 0x6f, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x04, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x50, 0x6f,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x5c, 0x0a, 0x06,
	0x47, 0x6f, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f,
	0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x43, 0x61, 0x6c, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c,
	0x45, 0x78, 0x70, 0x72, 0x52, 0x04, 0x43, 0x61, 0x6c, 0x6c, 0x22, 0x8b, 0x02, 0x0a, 0x06, 0x49,
	0x66, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6e,
	0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0b, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x04, 0x49, 0x6e,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04,
	0x49, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x43, 0x6f, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x23,
	0x0a, 0x04, 0x54, 0x68, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67,
	0x6e, 0x6f, 0x2e, 0x49, 0x66, 0x43, 0x61, 0x73, 0x65, 0x53, 0x74, 0x6d, 0x74, 0x52, 0x04, 0x54,
	0x68, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x04, 0x45, 0x6c, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x49, 0x66, 0x43, 0x61, 0x73, 0x65, 0x53, 0x74,
	0x6d, 0x74, 0x52, 0x04, 0x45, 0x6c, 0x73, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x0a, 0x49, 0x66, 0x43,
	0x61, 0x73, 0x65, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e,
	0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x67, 0x6e, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x04,
	0x42, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x71, 0x0a, 0x0a, 0x49, 0x6e, 0x63, 0x44, 0x65, 0x63,
	0x53, 0x74, 0x6d, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x01, 0x58, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x01, 0x58, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x4f, 0x70, 0x22, 0xf4, 0x02, 0x0a, 0x09, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e,
	0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x67, 0x6e, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x22, 0x0a, 0x01,
	0x58, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x01, 0x58,
	0x12, 0x26, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x02, 0x4f, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x49, 0x73, 0x4d, 0x61, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x49,
	0x73, 0x4d, 0x61, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x50, 0x74, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x50, 0x74, 0x72,
	0x22, 0x6d, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x2f,
	0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x2e, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22,
	0x70, 0x0a, 0x09, 0x50, 0x61, 0x6e, 0x69, 0x63, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x2f, 0x0a, 0x0a,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a,
	0x09, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x68, 0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6d, 0x74, 0x12,
	0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x29, 0x0a, 0x05, 0x43, 0x61, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x53, 0x74, 0x6d, 0x74, 0x52, 0x05, 0x43, 0x61, 0x73, 0x65, 0x73, 0x22, 0xc9, 0x01, 0x0a, 0x0e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x73, 0x65, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x2f,
	0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x32, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x04, 0x43, 0x6f, 0x6d, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x43, 0x6f, 0x6d, 0x6d, 0x12, 0x28, 0x0a,
	0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x91, 0x01, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64,
	0x53, 0x74, 0x6d, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x43, 0x68, 0x61, 0x6e, 0x12,
	0x2a, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xae, 0x02, 0x0a, 0x0a,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x28, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x01, 0x58, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x01, 0x58, 0x12, 0x22, 0x0a,
	0x0c, 0x49, 0x73, 0x54, 0x79, 0x70, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x49, 0x73, 0x54, 0x79, 0x70, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x12, 0x2f, 0x0a, 0x07, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43,
	0x6c, 0x61, 0x75, 0x73, 0x65, 0x53, 0x74, 0x6d, 0x74, 0x52, 0x07, 0x43, 0x6c, 0x61, 0x75, 0x73,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x61, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x61, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xcd, 0x01, 0x0a,
	0x10, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x53, 0x74, 0x6d,
	0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x05, 0x43, 0x61, 0x73, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x43, 0x61, 0x73,
	0x65, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x3c, 0x0a, 0x09,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0xaf, 0x05, 0x0a, 0x08, 0x62,
	0x6f, 0x64, 0x79, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e,
	0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x6f, 0x64, 0x79, 0x4c, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x07, 0x42, 0x6f, 0x64, 0x79, 0x4c, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d,
	0x4e, 0x65, 0x78, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x0d, 0x4e, 0x65, 0x78, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x4f, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x06, 0x4e, 0x75, 0x6d, 0x4f, 0x70, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x75,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x4e,
	0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x75, 0x6d, 0x45,
	0x78, 0x70, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x4e, 0x75, 0x6d, 0x45,
	0x78, 0x70, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x75, 0x6d, 0x53, 0x74, 0x6d, 0x74, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x4e, 0x75, 0x6d, 0x53, 0x74, 0x6d, 0x74, 0x73,
	0x12, 0x28, 0x0a, 0x04, 0x43, 0x6f, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x50, 0x6f,
	0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04,
	0x50, 0x6f, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x70, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x02, 0x4f, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65,
	0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2c,
	0x0a, 0x08, 0x4e, 0x65, 0x78, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x4d, 0x61, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x08, 0x4e, 0x65, 0x78, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x72, 0x4c, 0x65, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x53, 0x74,
	0x72, 0x4c, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x53, 0x74, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x75, 0x6e, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x08, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x75, 0x6e, 0x65, 0x22, 0xaf, 0x02, 0x0a,
	0x08, 0x46, 0x75, 0x6e, 0x63, 0x44, 0x65, 0x63, 0x6c, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x29,
	0x0a, 0x08, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x72, 0x52,
	0x08, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x52, 0x65, 0x63, 0x76, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x45, 0x78, 0x70, 0x72, 0x52, 0x04, 0x52, 0x65, 0x63, 0x76, 0x12, 0x25, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6e,
	0x6f, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x70, 0x72, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x82,
	0x01, 0x0a, 0x0a, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x63, 0x6c, 0x12, 0x2f, 0x0a,
	0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x29,
	0x0a, 0x08, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x72, 0x52,
	0x08, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x6b, 0x67,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x6b, 0x67, 0x50,
	0x61, 0x74, 0x68, 0x22, 0xd7, 0x01, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x63,
	0x6c, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x2b, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65,
	0x45, 0x78, 0x70, 0x72, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x72, 0x73, 0x12,
	0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x22, 0xaa, 0x01,
	0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x63, 0x6c, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x4e,
	0x61, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x67, 0x6e, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x72, 0x52, 0x08, 0x4e, 0x61,
	0x6d, 0x65, 0x45, 0x78, 0x70, 0x72, 0x12, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x49, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x0b, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x05, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x67, 0x6e, 0x6f, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x05,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x05, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x75, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x4e, 0x75, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x03,
	0x4c, 0x6f, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x6e, 0x6f, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x4c, 0x6f, 0x63, 0x22, 0x2e, 0x0a,
	0x07, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x22, 0xc9, 0x01,
	0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x6b, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x6b, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x05, 0x44, 0x65, 0x63, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x05, 0x44, 0x65, 0x63, 0x6c, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x0b, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x67, 0x6e, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18,
	0x0a, 0x07, 0x50, 0x6b, 0x67, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x50, 0x6b, 0x67, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x6b, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x6b, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65,
	0x74, 0x52, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x22, 0x68, 0x0a, 0x07, 0x52, 0x65,
	0x66, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x32, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x6f, 0x64, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x0b, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x45, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x45,
	0x6c, 0x74, 0x22, 0x57, 0x0a, 0x09, 0x41, 0x72, 0x72, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x4c, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x03, 0x4c, 0x65,
	0x6e, 0x12, 0x26, 0x0a, 0x03, 0x45, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x45, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x56, 0x72, 0x64, 0x22, 0x45, 0x0a, 0x09, 0x53,
	0x6c, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x45, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x45, 0x6c, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x56, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x56,
	0x72, 0x64, 0x22, 0x4e, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x50, 0x6b, 0x67, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x50, 0x6b, 0x67, 0x50, 0x61, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6e, 0x6f,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x22, 0x77, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x61, 0x67, 0x22, 0x5c, 0x0a, 0x08, 0x46,
	0x75, 0x6e, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x28, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x5d, 0x0a, 0x07, 0x4d, 0x61, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6d, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x6b, 0x67,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x6b, 0x67, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6e, 0x6f, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x22, 0x0a, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x6b, 0x67, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x6b, 0x67, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x07,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x67, 0x6e, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x44, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x03, 0x44, 0x69, 0x72, 0x12, 0x26, 0x0a, 0x03, 0x45, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x45, 0x6c, 0x74, 0x22, 0x0b, 0x0a, 0x09,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x22, 0x35, 0x0a, 0x09, 0x74, 0x75, 0x70,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x45, 0x6c, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x45, 0x6c, 0x74, 0x73,
	0x22, 0x19, 0x0a, 0x07, 0x52, 0x65, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x42, 0x2d, 0x5a, 0x2b, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6e, 0x6f, 0x6c, 0x61, 0x6e,
	0x67, 0x2f, 0x67, 0x6e, 0x6f, 0x2f, 0x67, 0x6e, 0x6f, 0x76, 0x6d, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x67, 0x6e, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_gnolang_proto_rawDescOnce sync.Once
	file_gnolang_proto_rawDescData = file_gnolang_proto_rawDesc
)

func file_gnolang_proto_rawDescGZIP() []byte {
	file_gnolang_proto_rawDescOnce.Do(func() {
		file_gnolang_proto_rawDescData = protoimpl.X.CompressGZIP(file_gnolang_proto_rawDescData)
	})
	return file_gnolang_proto_rawDescData
}

var file_gnolang_proto_msgTypes = make([]protoimpl.MessageInfo, 95)
var file_gnolang_proto_goTypes = []interface{}{
	(*TypedValue)(nil),          // 0: gno.TypedValue
	(*StringValue)(nil),         // 1: gno.StringValue
	(*BigintValue)(nil),         // 2: gno.BigintValue
	(*BigdecValue)(nil),         // 3: gno.BigdecValue
	(*PointerValue)(nil),        // 4: gno.PointerValue
	(*ArrayValue)(nil),          // 5: gno.ArrayValue
	(*SliceValue)(nil),          // 6: gno.SliceValue
	(*StructValue)(nil),         // 7: gno.StructValue
	(*FuncValue)(nil),           // 8: gno.FuncValue
	(*MapValue)(nil),            // 9: gno.MapValue
	(*MapList)(nil),             // 10: gno.MapList
	(*MapListItem)(nil),         // 11: gno.MapListItem
	(*BoundMethodValue)(nil),    // 12: gno.BoundMethodValue
	(*TypeValue)(nil),           // 13: gno.TypeValue
	(*PackageValue)(nil),        // 14: gno.PackageValue
	(*Block)(nil),               // 15: gno.Block
	(*RefValue)(nil),            // 16: gno.RefValue
	(*ObjectID)(nil),            // 17: gno.ObjectID
	(*ObjectInfo)(nil),          // 18: gno.ObjectInfo
	(*ValueHash)(nil),           // 19: gno.ValueHash
	(*Hashlet)(nil),             // 20: gno.Hashlet
	(*ValuePath)(nil),           // 21: gno.ValuePath
	(*Location)(nil),            // 22: gno.Location
	(*Attributes)(nil),          // 23: gno.Attributes
	(*NameExpr)(nil),            // 24: gno.NameExpr
	(*BasicLitExpr)(nil),        // 25: gno.BasicLitExpr
	(*BinaryExpr)(nil),          // 26: gno.BinaryExpr
	(*CallExpr)(nil),            // 27: gno.CallExpr
	(*IndexExpr)(nil),           // 28: gno.IndexExpr
	(*SelectorExpr)(nil),        // 29: gno.SelectorExpr
	(*SliceExpr)(nil),           // 30: gno.SliceExpr
	(*StarExpr)(nil),            // 31: gno.StarExpr
	(*RefExpr)(nil),             // 32: gno.RefExpr
	(*TypeAssertExpr)(nil),      // 33: gno.TypeAssertExpr
	(*UnaryExpr)(nil),           // 34: gno.UnaryExpr
	(*CompositeLitExpr)(nil),    // 35: gno.CompositeLitExpr
	(*KeyValueExpr)(nil),        // 36: gno.KeyValueExpr
	(*FuncLitExpr)(nil),         // 37: gno.FuncLitExpr
	(*ConstExpr)(nil),           // 38: gno.ConstExpr
	(*FieldTypeExpr)(nil),       // 39: gno.FieldTypeExpr
	(*ArrayTypeExpr)(nil),       // 40: gno.ArrayTypeExpr
	(*SliceTypeExpr)(nil),       // 41: gno.SliceTypeExpr
	(*InterfaceTypeExpr)(nil),   // 42: gno.InterfaceTypeExpr
	(*ChanTypeExpr)(nil),        // 43: gno.ChanTypeExpr
	(*FuncTypeExpr)(nil),        // 44: gno.FuncTypeExpr
	(*MapTypeExpr)(nil),         // 45: gno.MapTypeExpr
	(*StructTypeExpr)(nil),      // 46: gno.StructTypeExpr
	(*ConstTypeExpr)(nil),       // 47: gno.constTypeExpr
	(*MaybeNativeTypeExpr)(nil), // 48: gno.MaybeNativeTypeExpr
	(*AssignStmt)(nil),          // 49: gno.AssignStmt
	(*BlockStmt)(nil),           // 50: gno.BlockStmt
	(*BranchStmt)(nil),          // 51: gno.BranchStmt
	(*DeclStmt)(nil),            // 52: gno.DeclStmt
	(*DeferStmt)(nil),           // 53: gno.DeferStmt
	(*ExprStmt)(nil),            // 54: gno.ExprStmt
	(*ForStmt)(nil),             // 55: gno.ForStmt
	(*GoStmt)(nil),              // 56: gno.GoStmt
	(*IfStmt)(nil),              // 57: gno.IfStmt
	(*IfCaseStmt)(nil),          // 58: gno.IfCaseStmt
	(*IncDecStmt)(nil),          // 59: gno.IncDecStmt
	(*RangeStmt)(nil),           // 60: gno.RangeStmt
	(*ReturnStmt)(nil),          // 61: gno.ReturnStmt
	(*PanicStmt)(nil),           // 62: gno.PanicStmt
	(*SelectStmt)(nil),          // 63: gno.SelectStmt
	(*SelectCaseStmt)(nil),      // 64: gno.SelectCaseStmt
	(*SendStmt)(nil),            // 65: gno.SendStmt
	(*SwitchStmt)(nil),          // 66: gno.SwitchStmt
	(*SwitchClauseStmt)(nil),    // 67: gno.SwitchClauseStmt
	(*EmptyStmt)(nil),           // 68: gno.EmptyStmt
	(*BodyStmt)(nil),            // 69: gno.bodyStmt
	(*FuncDecl)(nil),            // 70: gno.FuncDecl
	(*ImportDecl)(nil),          // 71: gno.ImportDecl
	(*ValueDecl)(nil),           // 72: gno.ValueDecl
	(*TypeDecl)(nil),            // 73: gno.TypeDecl
	(*StaticBlock)(nil),         // 74: gno.StaticBlock
	(*FileSet)(nil),             // 75: gno.FileSet
	(*FileNode)(nil),            // 76: gno.FileNode
	(*PackageNode)(nil),         // 77: gno.PackageNode
	(*RefNode)(nil),             // 78: gno.RefNode
	(*PrimitiveType)(nil),       // 79: gno.PrimitiveType
	(*PointerType)(nil),         // 80: gno.PointerType
	(*ArrayType)(nil),           // 81: gno.ArrayType
	(*SliceType)(nil),           // 82: gno.SliceType
	(*StructType)(nil),          // 83: gno.StructType
	(*FieldType)(nil),           // 84: gno.FieldType
	(*FuncType)(nil),            // 85: gno.FuncType
	(*MapType)(nil),             // 86: gno.MapType
	(*InterfaceType)(nil),       // 87: gno.InterfaceType
	(*TypeType)(nil),            // 88: gno.TypeType
	(*DeclaredType)(nil),        // 89: gno.DeclaredType
	(*PackageType)(nil),         // 90: gno.PackageType
	(*ChanType)(nil),            // 91: gno.ChanType
	(*BlockType)(nil),           // 92: gno.blockType
	(*TupleType)(nil),           // 93: gno.tupleType
	(*RefType)(nil),             // 94: gno.RefType
	(*anypb.Any)(nil),           // 95: google.protobuf.Any
}
var file_gnolang_proto_depIdxs = []int32{
	95,  // 0: gno.TypedValue.T:type_name -> google.protobuf.Any
	95,  // 1: gno.TypedValue.V:type_name -> google.protobuf.Any
	0,   // 2: gno.PointerValue.TV:type_name -> gno.TypedValue
	95,  // 3: gno.PointerValue.Base:type_name -> google.protobuf.Any
	0,   // 4: gno.PointerValue.Key:type_name -> gno.TypedValue
	18,  // 5: gno.ArrayValue.ObjectInfo:type_name -> gno.ObjectInfo
	0,   // 6: gno.ArrayValue.List:type_name -> gno.TypedValue
	95,  // 7: gno.SliceValue.Base:type_name -> google.protobuf.Any
	18,  // 8: gno.StructValue.ObjectInfo:type_name -> gno.ObjectInfo
	0,   // 9: gno.StructValue.Fields:type_name -> gno.TypedValue
	95,  // 10: gno.FuncValue.Type:type_name -> google.protobuf.Any
	95,  // 11: gno.FuncValue.Source:type_name -> google.protobuf.Any
	95,  // 12: gno.FuncValue.Closure:type_name -> google.protobuf.Any
	18,  // 13: gno.MapValue.ObjectInfo:type_name -> gno.ObjectInfo
	10,  // 14: gno.MapValue.List:type_name -> gno.MapList
	11,  // 15: gno.MapList.List:type_name -> gno.MapListItem
	0,   // 16: gno.MapListItem.Key:type_name -> gno.TypedValue
	0,   // 17: gno.MapListItem.Value:type_name -> gno.TypedValue
	18,  // 18: gno.BoundMethodValue.ObjectInfo:type_name -> gno.ObjectInfo
	8,   // 19: gno.BoundMethodValue.Func:type_name -> gno.FuncValue
	0,   // 20: gno.BoundMethodValue.Receiver:type_name -> gno.TypedValue
	95,  // 21: gno.TypeValue.Type:type_name -> google.protobuf.Any
	18,  // 22: gno.PackageValue.ObjectInfo:type_name -> gno.ObjectInfo
	95,  // 23: gno.PackageValue.Block:type_name -> google.protobuf.Any
	95,  // 24: gno.PackageValue.FBlocks:type_name -> google.protobuf.Any
	18,  // 25: gno.Block.ObjectInfo:type_name -> gno.ObjectInfo
	95,  // 26: gno.Block.Source:type_name -> google.protobuf.Any
	0,   // 27: gno.Block.Values:type_name -> gno.TypedValue
	95,  // 28: gno.Block.Parent:type_name -> google.protobuf.Any
	0,   // 29: gno.Block.Blank:type_name -> gno.TypedValue
	23,  // 30: gno.NameExpr.Attributes:type_name -> gno.Attributes
	21,  // 31: gno.NameExpr.Path:type_name -> gno.ValuePath
	23,  // 32: gno.BasicLitExpr.Attributes:type_name -> gno.Attributes
	23,  // 33: gno.BinaryExpr.Attributes:type_name -> gno.Attributes
	95,  // 34: gno.BinaryExpr.Left:type_name -> google.protobuf.Any
	95,  // 35: gno.BinaryExpr.Right:type_name -> google.protobuf.Any
	23,  // 36: gno.CallExpr.Attributes:type_name -> gno.Attributes
	95,  // 37: gno.CallExpr.Func:type_name -> google.protobuf.Any
	95,  // 38: gno.CallExpr.Args:type_name -> google.protobuf.Any
	23,  // 39: gno.IndexExpr.Attributes:type_name -> gno.Attributes
	95,  // 40: gno.IndexExpr.X:type_name -> google.protobuf.Any
	95,  // 41: gno.IndexExpr.Index:type_name -> google.protobuf.Any
	23,  // 42: gno.SelectorExpr.Attributes:type_name -> gno.Attributes
	95,  // 43: gno.SelectorExpr.X:type_name -> google.protobuf.Any
	21,  // 44: gno.SelectorExpr.Path:type_name -> gno.ValuePath
	23,  // 45: gno.SliceExpr.Attributes:type_name -> gno.Attributes
	95,  // 46: gno.SliceExpr.X:type_name -> google.protobuf.Any
	95,  // 47: gno.SliceExpr.Low:type_name -> google.protobuf.Any
	95,  // 48: gno.SliceExpr.High:type_name -> google.protobuf.Any
	95,  // 49: gno.SliceExpr.Max:type_name -> google.protobuf.Any
	23,  // 50: gno.StarExpr.Attributes:type_name -> gno.Attributes
	95,  // 51: gno.StarExpr.X:type_name -> google.protobuf.Any
	23,  // 52: gno.RefExpr.Attributes:type_name -> gno.Attributes
	95,  // 53: gno.RefExpr.X:type_name -> google.protobuf.Any
	23,  // 54: gno.TypeAssertExpr.Attributes:type_name -> gno.Attributes
	95,  // 55: gno.TypeAssertExpr.X:type_name -> google.protobuf.Any
	95,  // 56: gno.TypeAssertExpr.Type:type_name -> google.protobuf.Any
	23,  // 57: gno.UnaryExpr.Attributes:type_name -> gno.Attributes
	95,  // 58: gno.UnaryExpr.X:type_name -> google.protobuf.Any
	23,  // 59: gno.CompositeLitExpr.Attributes:type_name -> gno.Attributes
	95,  // 60: gno.CompositeLitExpr.Type:type_name -> google.protobuf.Any
	36,  // 61: gno.CompositeLitExpr.Elts:type_name -> gno.KeyValueExpr
	23,  // 62: gno.KeyValueExpr.Attributes:type_name -> gno.Attributes
	95,  // 63: gno.KeyValueExpr.Key:type_name -> google.protobuf.Any
	95,  // 64: gno.KeyValueExpr.Value:type_name -> google.protobuf.Any
	23,  // 65: gno.FuncLitExpr.Attributes:type_name -> gno.Attributes
	74,  // 66: gno.FuncLitExpr.StaticBlock:type_name -> gno.StaticBlock
	44,  // 67: gno.FuncLitExpr.Type:type_name -> gno.FuncTypeExpr
	95,  // 68: gno.FuncLitExpr.Body:type_name -> google.protobuf.Any
	23,  // 69: gno.ConstExpr.Attributes:type_name -> gno.Attributes
	95,  // 70: gno.ConstExpr.Source:type_name -> google.protobuf.Any
	0,   // 71: gno.ConstExpr.TypedValue:type_name -> gno.TypedValue
	23,  // 72: gno.FieldTypeExpr.Attributes:type_name -> gno.Attributes
	95,  // 73: gno.FieldTypeExpr.Type:type_name -> google.protobuf.Any
	95,  // 74: gno.FieldTypeExpr.Tag:type_name -> google.protobuf.Any
	23,  // 75: gno.ArrayTypeExpr.Attributes:type_name -> gno.Attributes
	95,  // 76: gno.ArrayTypeExpr.Len:type_name -> google.protobuf.Any
	95,  // 77: gno.ArrayTypeExpr.Elt:type_name -> google.protobuf.Any
	23,  // 78: gno.SliceTypeExpr.Attributes:type_name -> gno.Attributes
	95,  // 79: gno.SliceTypeExpr.Elt:type_name -> google.protobuf.Any
	23,  // 80: gno.InterfaceTypeExpr.Attributes:type_name -> gno.Attributes
	39,  // 81: gno.InterfaceTypeExpr.Methods:type_name -> gno.FieldTypeExpr
	23,  // 82: gno.ChanTypeExpr.Attributes:type_name -> gno.Attributes
	95,  // 83: gno.ChanTypeExpr.Value:type_name -> google.protobuf.Any
	23,  // 84: gno.FuncTypeExpr.Attributes:type_name -> gno.Attributes
	39,  // 85: gno.FuncTypeExpr.Params:type_name -> gno.FieldTypeExpr
	39,  // 86: gno.FuncTypeExpr.Results:type_name -> gno.FieldTypeExpr
	23,  // 87: gno.MapTypeExpr.Attributes:type_name -> gno.Attributes
	95,  // 88: gno.MapTypeExpr.Key:type_name -> google.protobuf.Any
	95,  // 89: gno.MapTypeExpr.Value:type_name -> google.protobuf.Any
	23,  // 90: gno.StructTypeExpr.Attributes:type_name -> gno.Attributes
	39,  // 91: gno.StructTypeExpr.Fields:type_name -> gno.FieldTypeExpr
	23,  // 92: gno.constTypeExpr.Attributes:type_name -> gno.Attributes
	95,  // 93: gno.constTypeExpr.Source:type_name -> google.protobuf.Any
	95,  // 94: gno.constTypeExpr.Type:type_name -> google.protobuf.Any
	23,  // 95: gno.MaybeNativeTypeExpr.Attributes:type_name -> gno.Attributes
	95,  // 96: gno.MaybeNativeTypeExpr.Type:type_name -> google.protobuf.Any
	23,  // 97: gno.AssignStmt.Attributes:type_name -> gno.Attributes
	95,  // 98: gno.AssignStmt.Lhs:type_name -> google.protobuf.Any
	95,  // 99: gno.AssignStmt.Rhs:type_name -> google.protobuf.Any
	23,  // 100: gno.BlockStmt.Attributes:type_name -> gno.Attributes
	74,  // 101: gno.BlockStmt.StaticBlock:type_name -> gno.StaticBlock
	95,  // 102: gno.BlockStmt.Body:type_name -> google.protobuf.Any
	23,  // 103: gno.BranchStmt.Attributes:type_name -> gno.Attributes
	23,  // 104: gno.DeclStmt.Attributes:type_name -> gno.Attributes
	95,  // 105: gno.DeclStmt.Body:type_name -> google.protobuf.Any
	23,  // 106: gno.DeferStmt.Attributes:type_name -> gno.Attributes
	27,  // 107: gno.DeferStmt.Call:type_name -> gno.CallExpr
	23,  // 108: gno.ExprStmt.Attributes:type_name -> gno.Attributes
	95,  // 109: gno.ExprStmt.X:type_name -> google.protobuf.Any
	23,  // 110: gno.ForStmt.Attributes:type_name -> gno.Attributes
	74,  // 111: gno.ForStmt.StaticBlock:type_name -> gno.StaticBlock
	95,  // 112: gno.ForStmt.Init:type_name -> google.protobuf.Any
	95,  // 113: gno.ForStmt.Cond:type_name -> google.protobuf.Any
	95,  // 114: gno.ForStmt.Post:type_name -> google.protobuf.Any
	95,  // 115: gno.ForStmt.Body:type_name -> google.protobuf.Any
	23,  // 116: gno.GoStmt.Attributes:type_name -> gno.Attributes
	27,  // 117: gno.GoStmt.Call:type_name -> gno.CallExpr
	23,  // 118: gno.IfStmt.Attributes:type_name -> gno.Attributes
	74,  // 119: gno.IfStmt.StaticBlock:type_name -> gno.StaticBlock
	95,  // 120: gno.IfStmt.Init:type_name -> google.protobuf.Any
	95,  // 121: gno.IfStmt.Cond:type_name -> google.protobuf.Any
	58,  // 122: gno.IfStmt.Then:type_name -> gno.IfCaseStmt
	58,  // 123: gno.IfStmt.Else:type_name -> gno.IfCaseStmt
	23,  // 124: gno.IfCaseStmt.Attributes:type_name -> gno.Attributes
	74,  // 125: gno.IfCaseStmt.StaticBlock:type_name -> gno.StaticBlock
	95,  // 126: gno.IfCaseStmt.Body:type_name -> google.protobuf.Any
	23,  // 127: gno.IncDecStmt.Attributes:type_name -> gno.Attributes
	95,  // 128: gno.IncDecStmt.X:type_name -> google.protobuf.Any
	23,  // 129: gno.RangeStmt.Attributes:type_name -> gno.Attributes
	74,  // 130: gno.RangeStmt.StaticBlock:type_name -> gno.StaticBlock
	95,  // 131: gno.RangeStmt.X:type_name -> google.protobuf.Any
	95,  // 132: gno.RangeStmt.Key:type_name -> google.protobuf.Any
	95,  // 133: gno.RangeStmt.Value:type_name -> google.protobuf.Any
	95,  // 134: gno.RangeStmt.Body:type_name -> google.protobuf.Any
	23,  // 135: gno.ReturnStmt.Attributes:type_name -> gno.Attributes
	95,  // 136: gno.ReturnStmt.Results:type_name -> google.protobuf.Any
	23,  // 137: gno.PanicStmt.Attributes:type_name -> gno.Attributes
	95,  // 138: gno.PanicStmt.Exception:type_name -> google.protobuf.Any
	23,  // 139: gno.SelectStmt.Attributes:type_name -> gno.Attributes
	64,  // 140: gno.SelectStmt.Cases:type_name -> gno.SelectCaseStmt
	23,  // 141: gno.SelectCaseStmt.Attributes:type_name -> gno.Attributes
	74,  // 142: gno.SelectCaseStmt.StaticBlock:type_name -> gno.StaticBlock
	95,  // 143: gno.SelectCaseStmt.Comm:type_name -> google.protobuf.Any
	95,  // 144: gno.SelectCaseStmt.Body:type_name -> google.protobuf.Any
	23,  // 145: gno.SendStmt.Attributes:type_name -> gno.Attributes
	95,  // 146: gno.SendStmt.Chan:type_name -> google.protobuf.Any
	95,  // 147: gno.SendStmt.Value:type_name -> google.protobuf.Any
	23,  // 148: gno.SwitchStmt.Attributes:type_name -> gno.Attributes
	74,  // 149: gno.SwitchStmt.StaticBlock:type_name -> gno.StaticBlock
	95,  // 150: gno.SwitchStmt.Init:type_name -> google.protobuf.Any
	95,  // 151: gno.SwitchStmt.X:type_name -> google.protobuf.Any
	67,  // 152: gno.SwitchStmt.Clauses:type_name -> gno.SwitchClauseStmt
	23,  // 153: gno.SwitchClauseStmt.Attributes:type_name -> gno.Attributes
	74,  // 154: gno.SwitchClauseStmt.StaticBlock:type_name -> gno.StaticBlock
	95,  // 155: gno.SwitchClauseStmt.Cases:type_name -> google.protobuf.Any
	95,  // 156: gno.SwitchClauseStmt.Body:type_name -> google.protobuf.Any
	23,  // 157: gno.EmptyStmt.Attributes:type_name -> gno.Attributes
	23,  // 158: gno.bodyStmt.Attributes:type_name -> gno.Attributes
	95,  // 159: gno.bodyStmt.Body:type_name -> google.protobuf.Any
	95,  // 160: gno.bodyStmt.Cond:type_name -> google.protobuf.Any
	95,  // 161: gno.bodyStmt.Post:type_name -> google.protobuf.Any
	95,  // 162: gno.bodyStmt.Active:type_name -> google.protobuf.Any
	95,  // 163: gno.bodyStmt.Key:type_name -> google.protobuf.Any
	95,  // 164: gno.bodyStmt.Value:type_name -> google.protobuf.Any
	11,  // 165: gno.bodyStmt.NextItem:type_name -> gno.MapListItem
	23,  // 166: gno.FuncDecl.Attributes:type_name -> gno.Attributes
	74,  // 167: gno.FuncDecl.StaticBlock:type_name -> gno.StaticBlock
	24,  // 168: gno.FuncDecl.NameExpr:type_name -> gno.NameExpr
	39,  // 169: gno.FuncDecl.Recv:type_name -> gno.FieldTypeExpr
	44,  // 170: gno.FuncDecl.Type:type_name -> gno.FuncTypeExpr
	95,  // 171: gno.FuncDecl.Body:type_name -> google.protobuf.Any
	23,  // 172: gno.ImportDecl.Attributes:type_name -> gno.Attributes
	24,  // 173: gno.ImportDecl.NameExpr:type_name -> gno.NameExpr
	23,  // 174: gno.ValueDecl.Attributes:type_name -> gno.Attributes
	24,  // 175: gno.ValueDecl.NameExprs:type_name -> gno.NameExpr
	95,  // 176: gno.ValueDecl.Type:type_name -> google.protobuf.Any
	95,  // 177: gno.ValueDecl.Values:type_name -> google.protobuf.Any
	23,  // 178: gno.TypeDecl.Attributes:type_name -> gno.Attributes
	24,  // 179: gno.TypeDecl.NameExpr:type_name -> gno.NameExpr
	95,  // 180: gno.TypeDecl.Type:type_name -> google.protobuf.Any
	15,  // 181: gno.StaticBlock.Block:type_name -> gno.Block
	95,  // 182: gno.StaticBlock.Types:type_name -> google.protobuf.Any
	22,  // 183: gno.StaticBlock.Loc:type_name -> gno.Location
	76,  // 184: gno.FileSet.Files:type_name -> gno.FileNode
	23,  // 185: gno.FileNode.Attributes:type_name -> gno.Attributes
	74,  // 186: gno.FileNode.StaticBlock:type_name -> gno.StaticBlock
	95,  // 187: gno.FileNode.Decls:type_name -> google.protobuf.Any
	23,  // 188: gno.PackageNode.Attributes:type_name -> gno.Attributes
	74,  // 189: gno.PackageNode.StaticBlock:type_name -> gno.StaticBlock
	75,  // 190: gno.PackageNode.FileSet:type_name -> gno.FileSet
	22,  // 191: gno.RefNode.Location:type_name -> gno.Location
	95,  // 192: gno.RefNode.BlockNode:type_name -> google.protobuf.Any
	95,  // 193: gno.PointerType.Elt:type_name -> google.protobuf.Any
	95,  // 194: gno.ArrayType.Elt:type_name -> google.protobuf.Any
	95,  // 195: gno.SliceType.Elt:type_name -> google.protobuf.Any
	84,  // 196: gno.StructType.Fields:type_name -> gno.FieldType
	95,  // 197: gno.FieldType.Type:type_name -> google.protobuf.Any
	84,  // 198: gno.FuncType.Params:type_name -> gno.FieldType
	84,  // 199: gno.FuncType.Results:type_name -> gno.FieldType
	95,  // 200: gno.MapType.Key:type_name -> google.protobuf.Any
	95,  // 201: gno.MapType.Value:type_name -> google.protobuf.Any
	84,  // 202: gno.InterfaceType.Methods:type_name -> gno.FieldType
	95,  // 203: gno.DeclaredType.Base:type_name -> google.protobuf.Any
	0,   // 204: gno.DeclaredType.Methods:type_name -> gno.TypedValue
	95,  // 205: gno.ChanType.Elt:type_name -> google.protobuf.Any
	95,  // 206: gno.tupleType.Elts:type_name -> google.protobuf.Any
	207, // [207:207] is the sub-list for method output_type
	207, // [207:207] is the sub-list for method input_type
	207, // [207:207] is the sub-list for extension type_name
	207, // [207:207] is the sub-list for extension extendee
	0,   // [0:207] is the sub-list for field type_name
}

func init() { file_gnolang_proto_init() }
func file_gnolang_proto_init() {
	if File_gnolang_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gnolang_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypedValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BigintValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BigdecValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointerValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SliceValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StructValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuncValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoundMethodValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hashlet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValuePath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicLitExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BinaryExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectorExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SliceExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StarExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeAssertExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnaryExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompositeLitExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValueExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuncLitExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConstExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldTypeExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayTypeExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SliceTypeExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceTypeExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChanTypeExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuncTypeExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapTypeExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StructTypeExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConstTypeExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaybeNativeTypeExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BranchStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeferStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExprStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IfStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IfCaseStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncDecStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RangeStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PanicStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectCaseStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchClauseStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BodyStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuncDecl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportDecl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueDecl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeDecl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaticBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrimitiveType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointerType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SliceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StructType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuncType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclaredType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChanType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TupleType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gnolang_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gnolang_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   95,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gnolang_proto_goTypes,
		DependencyIndexes: file_gnolang_proto_depIdxs,
		MessageInfos:      file_gnolang_proto_msgTypes,
	}.Build()
	File_gnolang_proto = out.File
	file_gnolang_proto_rawDesc = nil
	file_gnolang_proto_goTypes = nil
	file_gnolang_proto_depIdxs = nil
}
