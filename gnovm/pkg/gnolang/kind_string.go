// Code generated by "stringer -type=Kind ./pkg/gnolang"; DO NOT EDIT.

package gnolang

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidKind-0]
	_ = x[BoolKind-1]
	_ = x[StringKind-2]
	_ = x[IntKind-3]
	_ = x[Int8Kind-4]
	_ = x[Int16Kind-5]
	_ = x[Int32Kind-6]
	_ = x[Int64Kind-7]
	_ = x[UintKind-8]
	_ = x[Uint8Kind-9]
	_ = x[Uint16Kind-10]
	_ = x[Uint32Kind-11]
	_ = x[Uint64Kind-12]
	_ = x[Float32Kind-13]
	_ = x[Float64Kind-14]
	_ = x[BigintKind-15]
	_ = x[BigdecKind-16]
	_ = x[ArrayKind-17]
	_ = x[SliceKind-18]
	_ = x[PointerKind-19]
	_ = x[StructKind-20]
	_ = x[PackageKind-21]
	_ = x[InterfaceKind-22]
	_ = x[ChanKind-23]
	_ = x[FuncKind-24]
	_ = x[MapKind-25]
	_ = x[TypeKind-26]
	_ = x[BlockKind-27]
	_ = x[TupleKind-28]
	_ = x[RefTypeKind-29]
}

const _Kind_name = "InvalidKindBoolKindStringKindIntKindInt8KindInt16KindInt32KindInt64KindUintKindUint8KindUint16KindUint32KindUint64KindFloat32KindFloat64KindBigintKindBigdecKindArrayKindSliceKindPointerKindStructKindPackageKindInterfaceKindChanKindFuncKindMapKindTypeKindBlockKindTupleKindRefTypeKind"

var _Kind_index = [...]uint16{0, 11, 19, 29, 36, 44, 53, 62, 71, 79, 88, 98, 108, 118, 129, 140, 150, 160, 169, 178, 189, 199, 210, 223, 231, 239, 246, 254, 263, 272, 283}

func (i Kind) String() string {
	if i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
