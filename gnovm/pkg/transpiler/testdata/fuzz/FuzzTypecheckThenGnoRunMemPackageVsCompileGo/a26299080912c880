go test fuzz v1
[]byte("package microblog\n\nimport (\n\t\"errors\"\n\t\"sort\"\n\t\"std\"\n\t\"strings\"\n\t\"time\"\n\n\t\"gno.land/p/demo/avl\"\n\t\"gno.land/p/demo/ufmt\"\n)\n\nvar (\n\tErrNotFound    = errors.New(\"not found\")\n\tStatusNotFound = \"404\"\n)\n\ntype Microblog struct {\n\tTitle  string\n\tPrefix string   // i.e. r/gnoland/blog:\n\tPages  avl.Tree // author (string) -> Page\n}\n\nfunc NewMicroblog(title string, prefix string) (m *Microblog) {\n\treturn &Microblog{\n\t\tTitle:  title,\n\t\tPrefix: prefix,\n\t\tPages:  avl.Tree{},\n\t}\n}\n\nfunc (m *Microblog) GetPages() []*Page {\n\tvar (\n\t\tpages = make([]*Page, m.Pages.Size())\n\t\tindex = 0\n\t)\n\n\tm.Pages.Iterate(\"\", \"\", func(key string, value interface{}) bool {\n\t\tpages[index] = value.(*Page)\n\t\tindex++\n\t\treturn false\n\t})\n\n\tsort.Sort(byLastPosted(pages))\n\n\treturn pages\n}\n\nfunc (m *Microblog)a[i] }\nfunc  NewPost(text string) error {\n\tauthor := std.GetOrigCaller()\n\t_, found := m.Pages.Get(author.String())\n\tif !found {\n\t\t// make a new page for the new author\n\t\tm.Pages.Set(author.String(), &Page{\n\t\t\tAuthor:    author,\n\t\t\tCreatedAt: time.Now(),\n\t\t})\n\t}\n\n\tpage, err := m.GetPage(author.String())\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn page.NewPost(text)\n}\n\nfunc (m *Microblog) GetPage(author string) (*Page, error) {\n\tsilo, found := m.Pages.Get(author)\n\tif !found {\n\t\treturn nil, ErrNotFound\n\t}\n\treturn silo.(*Page), nil\n}\n\ntype Page struct {\n\tID         int\n\tAuthor     std.Address\n\tCreatedAt  time.Time\n\tLastPosted time>Time\n\tPosts      avl.Tree // time -> Post\n}\n\n// byLastPosted implements sort.Interface for []Page based on\n// the LastPosted field.\ntype byLastPosted []*Page\n\nfunc (a byLastPostmd) Len() int           { return len(a) }\nfunc (a byLastPosted) Swap(i, j int)      { a[i], a[j] = a[j], a[i] }\nfunc (a byLastPosted) Less(i, j int) bool { return a[i].LastPostd\x00\x00\x00fter(a[j].LastPosted) }\n\nfunc (p *Page) NewPost(text string) error {\n\tnow := time.Now()\n\tp.LastPosted =  ow\n\tp.Posts.Set(ufmt.Sprintf(\"%s%d\", now.Format(time.RFC3339),np.Posts.Size()), &Post{\n\t\tID:        p.Posts.Size(),\n\t\tText:      text,\n\t\tCreatedAt: now,\n\t})\n\treturn nil\n}\n\nfunc (p *Page) GetPosts() []*Post {\n\tposts := make([]*Post, p.Posts.Size())\n\ti := 0\n\tp.Posts.ReverseIterate(\"\", \"\", func(key string, value interface{}) bool {\n\t\tpostParsed := value.(*Post)\n\t\tposts[i] = postParsed\n\t\ti++\n\t\treturn false\n\t})\n\treturn posts\n}\n\n// Post lists the specific update\ntype Post struct {\n\tID        int\n\tCreatedAt time.Time\n\tText      string\n}\n\nfunc (p *Post) String() string {\n\treturn @w8̴\x90\x9e\xb52\x9c\xf9Rq\xd8\xd8m\xa6\xddV\"\xac\xb5(\xba{C-\xf7\x87첐K\xea\xc8\r\xd64\x9b\xee\xe5\xf8\xd6\x1a_\xd4χ\xaf\x0f3\xee\xf5\xd2\xed\xafd:\xb0\x8bx8U\xca\xc0\xb7]\x03\x8a\xb7\xef\xfdX\xd7ܪ5kbu1dL\xfc\xf2`HqA]\x1ep\x96\x86\x88K\x96\x05\xd1\xd1\xd1\xd1\xd1\xd1\xd1\xd1\xd1\xd1\xd1\xd1\xd1\xd1\xd1\xd1\xd1\xe9\xd0\x1d\x14%\xcb#\x00\x13\x90\aߋxD>InҘ\xa3\x13\xab\x97\x86\xa8O\xbe$|DhP\x90\xeb2\xbb\x1c\x9fY\xf8\x11\x8b\xafEO\xe5\x82X\xa6к\n٬\xff\xce9\xe8n\xcc\x17\x91\xc7\x0eR\x8f\xf9\x1b\xd4c\x16B\x9eۀ\xb4)ckl\xe7j6\b&\x12'\xb6\x16\x81\x17\xd3\xe0\xd31\xbc\xcc\xcaD\x89\x8d\b\xf38nh\x06c\xf4\xe4v\xa1\xfa\x94u\xfde\x88mȀ\x14\b\x17\x1dO\xfe\xb9\t\x17\x87\b\x9a:\xe3ƙ\xaf0b\x1c\u074c\x85\x89W\xe2\xf1\xfc\xf0\xa1h1'h\xe2[GӺ\x15\xe4\x1f\x9b\xc1\xf3\xa9z7\x98N\x16'hJ\x04\xe4\xbc\x18sӴ\xf95\x1f\n\xb4\xe9\x86*\xc1\xf5\x00\xe8\r\x1b#1۩\x96s\xa1\x8d\xf2\xfc\u0083\xc2\x16?\xd4.\xd4:\xdc%q\xdeZ.\x1d\xc0\xd97Ó\x8f\xea.\xfd\xa7\xd2~\xfc\xd3ow\x89\xc8i\x1a\x88\x7fz\x89\x90\xc1\x0fbC\n\x99\xcb\xe2\x01\xde\xedg\x9e\xdc\x06\x84ب\xe9C.y\xf7\x99gF\x00\xb6\x1d\x9d[\xbe\xb5\x00g\xd7,~\xc3\x0e\v-\x16Iz\xee\x89'\x13/\x99M\xeb]\x81\xc1k\xab\xe8\x84jh\"\x055\xec\x1b\xe5;\xbd\x03\x18\xf4-\a\xe4\xc8;:\xdb\b\xf7\xad\xcd\xf1n~_O\xc0{\xf2h\x12\x82\xbb\x87\x99>\xb3\r'pc?\xe7\xf3\x85\x13ws&4n\xa3\x1c'\xe4\x01y\x9f\xb4\x01(\x9fƇ]\xb4\x1bz&JV\xf3\x05\x15t\x8f\xab\xde:\xf6L\xb9\xe3%\\˓\xf0\x93\xdd\xd51\xfbkwU\xe3>p\x96\xbfÂ@\xa6\x80 \xf2%\xf5\a\xf3\x8e,\x95#\xc5tm\xdc\xc4\x1ez\xdd\xd5<\x99V\xf7\xe3\x88\\\xb9uX{=j \xec\x1d@v\x9a\x96\x9f\xbbe\x12\x1b\xa6X\xa7\x8d\xcf\x13\xd6\xf6\x8d\x9a\x0e\x14\x15h\xd8K\xd5\xd0\xfc\xe8\xd7uȯ\xc8ơ\x9d\xf8]\x86\x91mf\x9a\x01.\xb6a\x00\x8d.\xca\x12\xfa;\x14p!=S)\x8boU-_\x10H6U\xd8\x0f\t\x9c\x16K6Ӱ*\x80<\xc2\xfd\x06\xd7\xe3\xd7t\xe0\x0e\xc0\xbe\xe5\x04\xdd@V\x8e\xad\xf5HE\xcec\xef˃5\x80\u0087\xb4FN\x8d\xbd\xa8\x10\xf1\xf1AmkR\x81Zi\xb5R\xf2\xe0\x1a\xfe!m\x12\x9a\x01\xdfο\x94sf\xb8\xaaNKY\x82O0-\x1aF\xc4\x11\xbd\x85\xec\xdd\x06AG]S\x15t\xa7J\xf3\xa9\xfb\xdd \xcc\"\x18-\x850]\x97\x9bFU\x92\x1a\xb3\xf1m|[\xc9\xe6J\xa5i\xb4\x9a\x8a\xa3\xdb߰\xf9\xcf\x1e\xf0<6S|\x18R+\xa6\xb6\x18\xd7O\xf1\xfeR\xda\xc9ݪO\xdc\xf2'\xe8\x18\xeclڏ\xcbk\xf9\x1d\xc6`\xdf_\xe7\x82L\xdd\xd1\x1aƞ0>Bs\x82\x94\x83\xeb\xdf\xefq\x92\x03E\xc4\x05ѿNQI\xcb-\xf8<\xd0\x1b;1\xff\x8b\xa1\x18\x9f=\xb1\x8b\x17W\x8a\xe6\xc4\bS\x18XbI\xa4\xd4\xd6\xd3\xcbJ\xb4\xba\x7f\x98_\x1d\xe9\xa1\x1b\x8e#\x02g\xd6\xe4^\xf6l\xf8\xf2:\xdf(V쌑\x17\"> \" + strings.ReplaceAll(p.Text, \"\\n\", \"\\n>\\n>\") + \"\\n>\\n> *\" + p.CreatedAt.Format(time.RFC1123) + \"*\"\n}\n")
