// PKGPATH: gno.land/r/exploiter_test
package exploiter_test

import (
	"gno.land/r/demo/tests"
)

type MyBar struct {
	A int
	B *tests.Foo
}

func (f *MyBar) Bar(x int) {
	f.B.A = x
}

func main() {
	crossing()

	x := (struct {
		A int
		B *tests.Foo
	})(*tests.MyFoo) // <-- this should panic

	y := MyBar(x)
	z := &y
	println(tests.MyFoo)
	z.Bar(10)
	println(tests.MyFoo)
}

// The exploiter cannot update tests.MyFoo, but would output:
// (struct{(1 int),(&(struct{(2 int),(nil *gno.land/r/demo/tests.Foo)} gno.land/r/demo/tests.Foo) *gno.land/r/demo/tests.Foo)} gno.land/r/demo/tests.Foo)
// (struct{(1 int),(&(struct{(10 int),(nil *gno.land/r/demo/tests.Foo)} gno.land/r/demo/tests.Foo) *gno.land/r/demo/tests.Foo)} gno.land/r/demo/tests.Foo)

// Error:
// illegal conversion of readonly or externally stored value
