# Test format complex files with advanced declarations

gno fmt file1.gno
cmp stdout stdout.golden
cmp stderr stderr.golden

# do it again, output should be identitical
gno fmt file1.gno
cmp stdout stdout.golden
cmp stderr stderr.golden

-- file1.gno --
package testdata

import (
	"std"

	// This comment should stay above the declaration
	avl "gno.land/my/import/does/not/exist"
	"doesnotexist"
)


// Pkg Is already imported
var myVar = avl.Node{}

// Pkg exist and should be imported
   var myVar2 = std.Banker{}

// This one doesn't exist
var myVar3 = doesnotexistpkg.Bis{}

// Package should exist but not the declaration
    var myVar4 = io.DoesnNotExist{}

// Declaration exist in a side file and should not be imported
var myVar5 = math.Sqrt(42)

func myBlog() *blog.Blog {
	myVar4 := time.Time{}

	var subFunc = func() {
		// More complex catch declaration
		println(string(ufmt.Sprintf("hello gno")))
	}

	return &blog.Blog{}
}

-- file2.gno --
package testdata

type MathS struct {}

var math = MathS{}

-- stdout.golden --
package testdata

import (
	"std"
	"time"

	// This comment should stay above the declaration
	avl "gno.land/my/import/does/not/exist"
	"gno.land/p/demo/blog"
	"gno.land/p/demo/ufmt"
)

// Pkg Is already imported
var myVar = avl.Node{}

// Pkg exist and should be imported
var myVar2 = std.Banker{}

// This one doesn't exist
var myVar3 = doesnotexistpkg.Bis{}

// Package should exist but not the declaration
var myVar4 = io.DoesnNotExist{}

// Declaration exist in a side file and should not be imported
var myVar5 = math.Sqrt(42)

func myBlog() *blog.Blog {
	myVar4 := time.Time{}

	var subFunc = func() {
		// More complex catch declaration
		println(string(ufmt.Sprintf("hello gno")))
	}

	return &blog.Blog{}
}
-- stderr.golden --
