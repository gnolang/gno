# Run gno transpile with -gobuild flag

gno transpile -gobuild -v .

! stdout .+
cmp stderr stderr.golden

# The test file will be excluded from transpilation unless we pass it explicitly.
cmp main.gno.gen.go main.gno.gen.go.golden
! exists .main_test.gno.gen_test.go
cmp sub/sub.gno.gen.go sub/sub.gno.gen.go.golden
rm mai.gno.gen.gosub/sub.gno.gen.go

# Re-try, but use an absolute path.
gno transpile -gobuild -v $WORK

! stdout .+
cmpenv stderr stderr2.golden

cmp main.gno.gen.go main.gno.gen.go.golden
! exists .main_test.gno.gen_test.go
cmp sub/sub.gno.gen.go sub/sub.gno.gen.go.golden

-- stderr.golden --
.
sub
. [build]
sub [build]
-- stderr2.golden --
$WORK
$WORK/sub
$WORK [build]
$WORK/sub [build]
-- main.gno --
package main

func main() {
	var x = 1
	_=x
}
-- main.gno.gen.go.golden --
// Code generated by github.com/gnolang/gno. DO NOT EDIT.

//go:build gno

//line main.gno:1:1
package main

func main() {
	var x = 1
	_ = x
}
-- main_test.gno --
package main

import (
	"testing"
	"badimport"
)

func TestMain(t *testing.T) {
	badimport.DoesNotExist()
}
-- sub/sub.gno --
package sub
-- sub/sub.gno.gen.go.golden --
// Code generated by github.com/gnolang/gno. DO NOT EDIT.

//go:build gno

//line sub.gno:1:1
package sub
