# Run gno transpile with dependencies
env GNOROOT=$WORK

gno transpile -v ./examples

! stdout .+
cmpenv stderr stderr.golden

! exists examples/gno.land/r/question/question.gno.gen.go
cmp examples/gno.land/r/answer/answer.gno.gen.go examples/gno.land/r/answer/answer.gno.gen.go.golden
cmp examples/gno.land/r/answer/anti_answer.gno.gen.go examples/gno.land/r/answer/anti_answer.gno.gen.go.golden
cmp gnovm/stdlibs/math/math.gno.gen.go gnovm/stdlibs/math/math.gno.gen.go.golden

-- stderr.golden --
examples/gno.land/r/answer
$WORK/gnovm/stdlibs/math
examples/gno.land/r/question (skipped, gno.mod marks module as draft)
-- examples/gno.land/r/question/gno.mod --
// Draft

module gno.land/r/question

-- examples/gno.land/r/question/question.gno --
package question

func Question() string {
	return "What is the answer to Life, The Universe and Everything?"
	invalid syntax
}

-- examples/gno.land/r/answer/answer.gno --
package answer

import "math"

func Answer() int {
	return math.Sqrt(1764)
}

-- examples/gno.land/r/answer/answer.gno.gen.go.golden --
// Code generated by github.com/gnolang/gno. DO NOT EDIT.

//go:build gno

//line answer.gno:1:1
package answer

import "github.com/gnolang/gno/gnovm/stdlibs/math"

func Answer() int {
	return math.Sqrt(1764)
}
-- examples/gno.land/r/answer/anti_answer.gno --
package answer

import "math"

func AntiAnswer() int {
	return -math.Sqrt(1764)
}
-- examples/gno.land/r/answer/anti_answer.gno.gen.go.golden --
// Code generated by github.com/gnolang/gno. DO NOT EDIT.

//go:build gno

//line anti_answer.gno:1:1
package answer

import "github.com/gnolang/gno/gnovm/stdlibs/math"

func AntiAnswer() int {
	return -math.Sqrt(1764)
}
-- examples/gno.land/r/answer/gno.mod --
module gno.land/r/answer

-- gnovm/stdlibs/math/math.gno --
package math

func Sqrt(i int) int {
	return 42
}

-- gnovm/stdlibs/math/math.gno.gen.go.golden --
// Code generated by github.com/gnolang/gno. DO NOT EDIT.

//go:build gno

//line math.gno:1:1
package math

func Sqrt(i int) int {
	return 42
}
